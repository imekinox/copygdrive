{
  "version": 3,
  "sources": ["wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/buffer-small.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/process.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/perf_hooks.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/function.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/weakref.ts", "../../../node_modules/node_modules/.pnpm/decimal.js-light@2.5.1/node_modules/decimal.js-light/decimal.mjs", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/decimal-small.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/fs.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/path.ts", "../../../node_modules/@prisma/internals/package.json", "../../../node_modules/node_modules/.pnpm/indent-string@4.0.0/node_modules/indent-string/index.js", "../../../node_modules/node_modules/.pnpm/ansi-regex@5.0.1/node_modules/ansi-regex/index.js", "../../../node_modules/node_modules/.pnpm/strip-ansi@6.0.1/node_modules/strip-ansi/index.js", "../../../node_modules/node_modules/.pnpm/js-levenshtein@1.1.6/node_modules/js-levenshtein/index.js", "../../../node_modules/@prisma/ts-builders/src/TypeBuilder.ts", "../../../node_modules/@prisma/ts-builders/src/KeyType.ts", "../../../node_modules/node_modules/.pnpm/@prisma+engines-version@6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb/node_modules/@prisma/engines-version/package.json", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/events.ts", "../../../node_modules/@prisma/client/src/runtime/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/defineExtension.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/getExtensionContext.ts", "../../../node_modules/@prisma/client/src/runtime/core/public/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/public/validator.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientInitializationError.ts", "../../../node_modules/@prisma/internals/src/index.ts", "../../../node_modules/node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/colors.mjs", "../../../node_modules/@prisma/debug/src/index.ts", "../../../node_modules/@prisma/get-platform/src/index.ts", "../../../node_modules/@prisma/get-platform/src/binaryTargets.ts", "../../../node_modules/@prisma/internals/src/utils/getVersionFromPackageJson.ts", "../../../node_modules/@prisma/internals/src/client/getClientEngineType.ts", "../../../node_modules/@prisma/driver-adapter-utils/src/index.ts", "../../../node_modules/@prisma/driver-adapter-utils/src/binder.ts", "../../../node_modules/@prisma/driver-adapter-utils/src/debug.ts", "../../../node_modules/@prisma/driver-adapter-utils/src/error.ts", "../../../node_modules/@prisma/driver-adapter-utils/src/result.ts", "../../../node_modules/@prisma/internals/src/utils/prismaPostgres.ts", "../../../node_modules/@prisma/internals/src/logger.ts", "../../../node_modules/@prisma/internals/src/utils/assertAlways.ts", "../../../node_modules/@prisma/internals/src/utils/assertNever.ts", "../../../node_modules/@prisma/internals/src/utils/hasOwnProperty.ts", "../../../node_modules/@prisma/internals/src/utils/mapObjectValues.ts", "../../../node_modules/@prisma/internals/src/utils/max.ts", "../../../node_modules/@prisma/internals/src/utils/setClassName.ts", "../../../node_modules/@prisma/internals/src/warnOnce.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientKnownRequestError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientRustPanicError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientUnknownRequestError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientValidationError.ts", "../../../node_modules/@prisma/client/src/runtime/core/jsonProtocol/serializeJsonQuery.ts", "../../../node_modules/@prisma/client-common/src/index.ts", "../../../node_modules/@prisma/client-common/src/Cache.ts", "../../../node_modules/@prisma/client-common/src/casing.ts", "../../../node_modules/@prisma/client-common/src/Dictionary.ts", "../../../node_modules/@prisma/client-common/src/lazyProperty.ts", "../../../node_modules/@prisma/client-common/src/runtimeDataModel.ts", "../../../node_modules/@prisma/client/src/runtime/utils/date.ts", "../../../node_modules/@prisma/client/src/runtime/utils/decimalJsLike.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts", "../../../node_modules/@prisma/client/src/runtime/utils/createErrorMessageWithContext.ts", "../../../node_modules/@prisma/dmmf/src/index.ts", "../../../node_modules/@prisma/dmmf/src/convert.ts", "../../../node_modules/@prisma/dmmf/src/dmmf.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/applyValidationError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/applyUnionError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ObjectFieldSuggestion.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ObjectValue.ts", "../../../node_modules/@prisma/ts-builders/src/index.ts", "../../../node_modules/@prisma/ts-builders/src/Writer.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ArrayValue.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ArrayField.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/base.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/FormattedString.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/Value.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ScalarValue.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/SuggestionObjectValue.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ArgumentsRenderingTree.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/FieldRef.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/ObjectEnums.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ObjectField.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/MergedExtensionsList.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/utils/dmmfToJSModelName.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/resultUtils.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/Param.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/Skip.ts", "../../../node_modules/@prisma/client/src/runtime/core/metrics/MetricsClient.ts", "../../../node_modules/@prisma/client/src/runtime/core/runtimeDataModel.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/TypedSql.ts", "../../../node_modules/@prisma/client/src/runtime/getPrismaClient.ts", "fill-plugin-27233:async_hooks", "../../../node_modules/node_modules/.pnpm/sql-template-tag@5.2.1/node_modules/sql-template-tag/src/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/addObjectProperties.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/addProperty.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/cacheProperties.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/createCompositeProxy.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/utils/defaultProxyHandlers.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/removeProperties.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/common/utils/getBatchRequestPayload.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/prettyPrintArguments.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/utils/prismaGraphQLToJSError.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/$extends.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyModelsAndClientExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyModel.ts", "../../../node_modules/@prisma/client/src/runtime/utils/CallSite.ts", "../../../node_modules/node_modules/.pnpm/stacktrace-parser@0.1.11/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js", "../../../node_modules/@prisma/client/src/runtime/core/model/applyAggregates.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/aggregate.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/utils/aggregateMap.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/count.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/groupBy.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyFieldsProxy.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyFluent.ts", "../../../node_modules/@prisma/client/src/runtime/utils/deep-set.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/utils/jsToDMMFModelName.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/applyAllResultExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/applyResultExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/visitQueryResult.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/applyQueryExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/utils/deepCloneArgs.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/itxClientDenyList.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/checkPlatformCaching.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/getDatasourceOverrides.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/getEngineInstance.ts", "../../../node_modules/@prisma/client/src/runtime/utils/getRuntime.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/index.ts", "../../../node_modules/@prisma/client-engine-runtime/src/index.ts", "../../../node_modules/@prisma/client-engine-runtime/src/json-protocol.ts", "../../../node_modules/@prisma/client-engine-runtime/src/utils.ts", "../../../node_modules/@prisma/client/package.json", "../../../node_modules/@prisma/client/src/runtime/core/init/resolveDatasourceUrl.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/library/LibraryEngine.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/common/utils/getInteractiveTransactionId.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/library/WasmLibraryLoader.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/accelerate/AccelerateEngine.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/validateEngineInstanceConfig.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/getPreviewFeatures.ts", "../../../node_modules/@prisma/client/src/runtime/core/raw-query/rawCommandArgsMapper.ts", "../../../node_modules/@prisma/client/src/runtime/core/raw-query/rawQueryArgsMapper.ts", "../../../node_modules/@prisma/client/src/runtime/utils/mssqlPreparedStatement.ts", "../../../node_modules/@prisma/client/src/runtime/utils/serializeRawParameters.ts", "../../../node_modules/@prisma/client/src/runtime/core/request/createPrismaPromise.ts", "../../../node_modules/@prisma/client/src/runtime/core/tracing/TracingHelper.ts", "../../../node_modules/@prisma/client/src/runtime/core/transaction/utils/createLockCountPromise.ts", "../../../node_modules/@prisma/client/src/runtime/getLogLevel.ts", "../../../node_modules/@prisma/client/src/runtime/RequestHandler.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/ErrorWithBatchIndex.ts", "../../../node_modules/@prisma/client/src/runtime/core/jsonProtocol/getBatchId.ts", "../../../node_modules/@prisma/client/src/runtime/core/jsonProtocol/isWrite.ts", "../../../node_modules/@prisma/client/src/runtime/DataLoader.ts", "../../../node_modules/@prisma/client/src/runtime/utils/deserializeRawResults.ts", "../../../node_modules/@prisma/client/src/runtime/utils/clientVersion.ts", "../../../node_modules/@prisma/client/src/runtime/utils/validatePrismaClientOptions.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientConstructorValidationError.ts", "../../../node_modules/@prisma/client/src/runtime/utils/waitForBatch.ts", "../../../node_modules/@prisma/client/src/runtime/strictEnum.ts", "fill-plugin-27233:./warnEnvConflicts", "../../../node_modules/.prisma/client/query_engine_bg.js", "../../../node_modules/.prisma/client/wasm-worker-loader.mjs", "../../../node_modules/.prisma/client/wasm.js", "../../../node_modules/.prisma/client/default.js", "../../../node_modules/@prisma/client/default.js", "../bundle-w9DYVP/middleware-loader.entry.ts", "../bundle-w9DYVP/middleware-insertion-facade.js", "../../../workers/test-d1.ts", "../../../lib/prisma-edge.ts", "../../../node_modules/@prisma/adapter-d1/dist/index.mjs", "../../../node_modules/@prisma/driver-adapter-utils/dist/index.mjs", "../../../node_modules/@prisma/debug/dist/index.mjs", "../../../node_modules/ky/source/index.ts", "../../../node_modules/ky/source/core/Ky.ts", "../../../node_modules/ky/source/errors/HTTPError.ts", "../../../node_modules/ky/source/errors/TimeoutError.ts", "../../../node_modules/ky/source/utils/merge.ts", "../../../node_modules/ky/source/utils/is.ts", "../../../node_modules/ky/source/utils/normalize.ts", "../../../node_modules/ky/source/core/constants.ts", "../../../node_modules/ky/source/utils/timeout.ts", "../../../node_modules/ky/source/utils/delay.ts", "../../../node_modules/ky/source/utils/options.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/.wrangler/tmp/dev-dZvOXQ",
  "sourcesContent": ["", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nexport interface BufferClass {\n  readBigInt64BE(offset: number): bigint\n  readBigInt64BE(offset: number): bigint\n  readBigInt64LE(offset: number): bigint\n  readBigInt64LE(offset: number): bigint\n  readBigUint64BE(offset: number): bigint\n  readBigUInt64BE(offset: number): bigint\n  readBigUint64LE(offset: number): bigint\n  readBigUInt64LE(offset: number): bigint\n  readDoubleBE(offset: number): number\n  readDoubleLE(offset: number): number\n  readFloatBE(offset: number): number\n  readFloatLE(offset: number): number\n  readInt16BE(offset: number): number\n  readInt16LE(offset: number): number\n  readInt32BE(offset: number): number\n  readInt32LE(offset: number): number\n  readInt8(offset: number): number\n  readIntBE(offset: number, byteLength: number): number\n  readIntLE(offset: number, byteLength: number): number\n  readUint16BE(offset: number): number\n  readUInt16BE(offset: number): number\n  readUint16LE(offset: number): number\n  readUInt16LE(offset: number): number\n  readUint32BE(offset: number): number\n  readUInt32BE(offset: number): number\n  readUint32LE(offset: number): number\n  readUInt32LE(offset: number): number\n  readUint8(offset: number): number\n  readUInt8(offset: number): number\n  readUInt8(offset: number): number\n  readUintBE(offset: number, byteLength: number): number\n  readUIntBE(offset: number, byteLength: number): number\n  readUintLE(offset: number, byteLength: number): number\n  readUIntLE(offset: number, byteLength: number): number\n  writeBigInt64BE(value: bigint, offset: number): number\n  writeBigInt64BE(value: bigint, offset: number): number\n  writeBigInt64LE(value: bigint, offset: number): number\n  writeBigInt64LE(value: bigint, offset: number): number\n  writeBigUint64BE(value: bigint, offset: number): number\n  writeBigUInt64BE(value: bigint, offset: number): number\n  writeBigUint64LE(value: bigint, offset: number): number\n  writeBigUInt64LE(value: bigint, offset: number): number\n  writeDoubleBE(value: number, offset: number): number\n  writeDoubleLE(value: number, offset: number): number\n  writeFloatBE(value: number, offset: number): number\n  writeFloatLE(value: number, offset: number): number\n  writeInt16BE(value: number, offset: number): number\n  writeInt16LE(value: number, offset: number): number\n  writeInt32BE(value: number, offset: number): number\n  writeInt32LE(value: number, offset: number): number\n  writeInt8(value: number, offset: number): number\n  writeIntBE(value: number, offset: number, byteLength: number): number\n  writeIntLE(value: number, offset: number, byteLength: number): number\n  writeUint16BE(value: number, offset: number): number\n  writeUInt16BE(value: number, offset: number): number\n  writeUint16LE(value: number, offset: number): number\n  writeUInt16LE(value: number, offset: number): number\n  writeUint32BE(value: number, offset: number): number\n  writeUInt32BE(value: number, offset: number): number\n  writeUint32LE(value: number, offset: number): number\n  writeUInt32LE(value: number, offset: number): number\n  writeUint8(value: number, offset: number): number\n  writeUInt8(value: number, offset: number): number\n  writeUintBE(value: number, offset: number, byteLength: number): number\n  writeUIntBE(value: number, offset: number, byteLength: number): number\n  writeUintLE(value: number, offset: number, byteLength: number): number\n  writeUIntLE(value: number, offset: number, byteLength: number): number\n}\n\nexport class BufferClass extends Uint8Array /* implements NodeBuffer */ {\n  readonly _isBuffer = true\n\n  get offset() {\n    return this.byteOffset\n  }\n\n  static alloc(size: number, fill: string | number | Uint8Array = 0, encoding: Encoding = 'utf8') {\n    assertString(encoding, 'encoding')\n\n    return BufferClass.allocUnsafe(size).fill(fill, encoding)\n  }\n\n  static allocUnsafe(size: number) {\n    return BufferClass.from(size)\n  }\n\n  static allocUnsafeSlow(size: number) {\n    return BufferClass.from(size)\n  }\n\n  static isBuffer(arg: any): arg is BufferClass {\n    return arg && !!arg._isBuffer\n  }\n\n  static byteLength(string: unknown, encoding: Encoding = 'utf8') {\n    if (typeof string === 'string') return stringToBuffer(string, encoding).byteLength\n    if (string && string['byteLength']) return string['byteLength']\n\n    const e = new TypeError('The \"string\" argument must be of type string or an instance of Buffer or ArrayBuffer.')\n    e['code'] = 'ERR_INVALID_ARG_TYPE'\n    throw e\n  }\n\n  static isEncoding(encoding: string): encoding is Encoding {\n    return Encodings.includes(encoding as any)\n  }\n\n  static compare(buff1: Uint8Array, buff2: Uint8Array) {\n    assertUint8Array(buff1, 'buff1')\n    assertUint8Array(buff2, 'buff2')\n\n    for (let i = 0; i < buff1.length; i++) {\n      if (buff1[i] < buff2[i]) return -1\n      if (buff1[i] > buff2[i]) return 1\n    }\n\n    return buff1.length === buff2.length ? 0 : buff1.length > buff2.length ? 1 : -1\n  }\n\n  static from(value: unknown, encoding: any = 'utf8'): BufferClass {\n    if (value && typeof value === 'object' && value['type'] === 'Buffer') {\n      return new BufferClass(value['data'])\n    }\n\n    if (typeof value === 'number') {\n      return new BufferClass(new Uint8Array(value))\n    }\n\n    if (typeof value === 'string') {\n      return stringToBuffer(value, encoding)\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      const { byteOffset, byteLength, buffer } = value\n\n      if ('map' in value && typeof value.map === 'function') {\n        return new BufferClass(\n          value.map((v) => v % 256),\n          byteOffset,\n          byteLength,\n        )\n      }\n\n      return new BufferClass(buffer, byteOffset, byteLength)\n    }\n\n    if (value && typeof value === 'object' && ('length' in value || 'byteLength' in value || 'buffer' in value)) {\n      return new BufferClass(value as ArrayLike<number>)\n    }\n\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n  }\n\n  static concat(list: readonly Uint8Array[], totalLength?: number) {\n    if (list.length === 0) return BufferClass.alloc(0)\n\n    const concat = ([] as number[]).concat(...list.map((item) => [...item]))\n    const result = BufferClass.alloc(totalLength !== undefined ? totalLength : concat.length)\n\n    result.set(totalLength !== undefined ? concat.slice(0, totalLength) : concat)\n\n    return result\n  }\n\n  slice(start = 0, end = this.length) {\n    return this.subarray(start, end)\n  }\n\n  subarray(start = 0, end = this.length) {\n    return Object.setPrototypeOf(super.subarray(start, end), BufferClass.prototype) as BufferClass\n  }\n\n  reverse() {\n    super.reverse()\n\n    return this\n  }\n\n  readIntBE(offset: number, byteLength: number) {\n    assertNumber(offset, 'offset')\n    assertInteger(offset, 'offset')\n    assertUnsigned(offset, 'offset', this.length - 1)\n    assertNumber(byteLength, 'byteLength')\n    assertInteger(byteLength, 'byteLength')\n\n    const view = new DataView(this.buffer, offset, byteLength)\n    let val = 0\n    for (let i = 0; i < byteLength; i++) {\n      val = val * 0x100 + view.getUint8(i)\n    }\n\n    if (view.getUint8(0) & 0x80) {\n      val -= Math.pow(0x100, byteLength)\n    }\n\n    return val\n  }\n\n  readIntLE(offset: number, byteLength: number) {\n    assertNumber(offset, 'offset')\n    assertInteger(offset, 'offset')\n    assertUnsigned(offset, 'offset', this.length - 1)\n    assertNumber(byteLength, 'byteLength')\n    assertInteger(byteLength, 'byteLength')\n\n    const view = new DataView(this.buffer, offset, byteLength)\n    let val = 0\n    for (let i = 0; i < byteLength; i++) {\n      val += view.getUint8(i) * Math.pow(0x100, i)\n    }\n\n    if (view.getUint8(byteLength - 1) & 0x80) {\n      val -= Math.pow(0x100, byteLength)\n    }\n\n    return val\n  }\n\n  readUIntBE(offset: number, byteLength: number) {\n    assertNumber(offset, 'offset')\n    assertInteger(offset, 'offset')\n    assertUnsigned(offset, 'offset', this.length - 1)\n    assertNumber(byteLength, 'byteLength')\n    assertInteger(byteLength, 'byteLength')\n\n    const view = new DataView(this.buffer, offset, byteLength)\n    let val = 0\n    for (let i = 0; i < byteLength; i++) {\n      val = val * 0x100 + view.getUint8(i)\n    }\n\n    return val\n  }\n\n  readUintBE(offset: number, byteLength: number) {\n    return this.readUIntBE(offset, byteLength)\n  }\n\n  readUIntLE(offset: number, byteLength: number) {\n    assertNumber(offset, 'offset')\n    assertInteger(offset, 'offset')\n    assertUnsigned(offset, 'offset', this.length - 1)\n    assertNumber(byteLength, 'byteLength')\n    assertInteger(byteLength, 'byteLength')\n\n    const view = new DataView(this.buffer, offset, byteLength)\n    let val = 0\n    for (let i = 0; i < byteLength; i++) {\n      val += view.getUint8(i) * Math.pow(0x100, i)\n    }\n\n    return val\n  }\n\n  readUintLE(offset: number, byteLength: number) {\n    return this.readUIntLE(offset, byteLength)\n  }\n\n  writeIntBE(value: number, offset: number, byteLength: number) {\n    value = value < 0 ? value + Math.pow(0x100, byteLength) : value\n    return this.writeUIntBE(value, offset, byteLength)\n  }\n\n  writeIntLE(value: number, offset: number, byteLength: number) {\n    value = value < 0 ? value + Math.pow(0x100, byteLength) : value\n    return this.writeUIntLE(value, offset, byteLength)\n  }\n\n  writeUIntBE(value: number, offset: number, byteLength: number) {\n    assertNumber(offset, 'offset')\n    assertInteger(offset, 'offset')\n    assertUnsigned(offset, 'offset', this.length - 1)\n    assertNumber(byteLength, 'byteLength')\n    assertInteger(byteLength, 'byteLength')\n\n    const view = new DataView(this.buffer, offset, byteLength)\n    for (let i = byteLength - 1; i >= 0; i--) {\n      view.setUint8(i, value & 0xff)\n      value = value / 0x100\n    }\n\n    return offset + byteLength\n  }\n\n  writeUintBE(value: number, offset: number, byteLength: number) {\n    return this.writeUIntBE(value, offset, byteLength)\n  }\n\n  writeUIntLE(value: number, offset: number, byteLength: number) {\n    assertNumber(offset, 'offset')\n    assertInteger(offset, 'offset')\n    assertUnsigned(offset, 'offset', this.length - 1)\n    assertNumber(byteLength, 'byteLength')\n    assertInteger(byteLength, 'byteLength')\n\n    const view = new DataView(this.buffer, offset, byteLength)\n    for (let i = 0; i < byteLength; i++) {\n      view.setUint8(i, value & 0xff) // bitwise 0xff is to get the last 8 bits\n      value = value / 0x100 // shift 8 bits to the right to iterate\n    }\n\n    return offset + byteLength\n  }\n\n  writeUintLE(value: number, offset: number, byteLength: number) {\n    return this.writeUIntLE(value, offset, byteLength)\n  }\n\n  toJSON() {\n    return { type: 'Buffer', data: Array.from(this) } as const\n  }\n\n  swap16() {\n    const buffer = new DataView(this.buffer, this.byteOffset, this.byteLength)\n    for (let i = 0; i < this.length; i += 2) {\n      buffer.setUint16(i, buffer.getUint16(i, true), false)\n    }\n    return this\n  }\n\n  swap32() {\n    const buffer = new DataView(this.buffer, this.byteOffset, this.byteLength)\n    for (let i = 0; i < this.length; i += 4) {\n      buffer.setUint32(i, buffer.getUint32(i, true), false)\n    }\n    return this\n  }\n\n  swap64() {\n    const view = new DataView(this.buffer, this.byteOffset, this.byteLength)\n    for (let i = 0; i < this.length; i += 8) {\n      view.setBigUint64(i, view.getBigUint64(i, true), false)\n    }\n    return this\n  }\n\n  compare(target: Uint8Array, targetStart = 0, targetEnd = target.length, sourceStart = 0, sourceEnd = this.length) {\n    assertUint8Array(target, 'target')\n    assertNumber(targetStart, 'targetStart')\n    assertNumber(targetEnd, 'targetEnd')\n    assertNumber(sourceStart, 'sourceStart')\n    assertNumber(sourceEnd, 'sourceEnd')\n    assertUnsigned(targetStart, 'targetStart')\n    assertUnsigned(targetEnd, 'targetEnd', target.length)\n    assertUnsigned(sourceStart, 'sourceStart')\n    assertUnsigned(sourceEnd, 'sourceEnd', this.length)\n\n    return BufferClass.compare(this.slice(sourceStart, sourceEnd), target.slice(targetStart, targetEnd))\n  }\n\n  equals(otherBuffer: Uint8Array) {\n    assertUint8Array(otherBuffer, 'otherBuffer')\n\n    return this.length === otherBuffer.length && this.every((v, i) => v === otherBuffer[i])\n  }\n\n  copy(target: Uint8Array, targetStart = 0, sourceStart = 0, sourceEnd = this.length) {\n    assertUnsigned(targetStart, 'targetStart')\n    assertUnsigned(sourceStart, 'sourceStart', this.length)\n    assertUnsigned(sourceEnd, 'sourceEnd')\n\n    targetStart >>>= 0\n    sourceStart >>>= 0\n    sourceEnd >>>= 0\n\n    let copiedBytes = 0\n    while (sourceStart < sourceEnd) {\n      if (this[sourceStart] === undefined) break\n      if (target[targetStart] === undefined) break\n\n      target[targetStart] = this[sourceStart]\n      copiedBytes++\n      sourceStart++\n      targetStart++\n    }\n\n    return copiedBytes\n  }\n\n  write(string: string, encoding?: Encoding): number\n  write(string: string, offset: number, encoding?: Encoding): number\n  write(string: string, offset: number, length: number, encoding?: Encoding): number\n  write(string: string, offsetEnc?: number | Encoding, lengthEnc?: number | Encoding, encoding: Encoding = 'utf8') {\n    const offset = typeof offsetEnc === 'string' ? 0 : (offsetEnc ?? 0)\n    let length = typeof lengthEnc === 'string' ? this.length - offset : (lengthEnc ?? this.length - offset)\n    encoding = typeof offsetEnc === 'string' ? offsetEnc : typeof lengthEnc === 'string' ? lengthEnc : encoding\n\n    assertNumber(offset, 'offset')\n    assertNumber(length, 'length')\n    assertUnsigned(offset, 'offset', this.length)\n    assertUnsigned(length, 'length', this.length)\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      length = length - (length % 2)\n    }\n\n    return stringToBuffer(string, encoding).copy(this, offset, 0, length)\n  }\n\n  fill(\n    value: string | number | Uint8Array = 0,\n    offsetEnc: number | Encoding = 0,\n    endEnc: number | Encoding = this.length,\n    encoding: Encoding = 'utf-8',\n  ) {\n    const offset = typeof offsetEnc === 'string' ? 0 : offsetEnc\n    const end = typeof endEnc === 'string' ? this.length : endEnc\n    encoding = typeof offsetEnc === 'string' ? offsetEnc : typeof endEnc === 'string' ? endEnc : encoding\n    value = BufferClass.from(typeof value === 'number' ? [value] : (value ?? []), encoding)\n\n    assertString(encoding, 'encoding')\n    assertUnsigned(offset, 'offset', this.length)\n    assertUnsigned(end, 'end', this.length)\n\n    if (value.length !== 0) {\n      for (let i = offset; i < end; i += value.length) {\n        super.set(value.slice(0, value.length + i >= this.length ? this.length - i : value.length), i)\n      }\n    }\n\n    return this\n  }\n\n  includes(value: string | number | Uint8Array, byteOffset: number | null = null, encoding: Encoding = 'utf-8') {\n    return this.indexOf(value, byteOffset, encoding) !== -1\n  }\n\n  lastIndexOf(\n    value: string | number | Uint8Array,\n    byteOffsetOrEncoding: number | Encoding | null = null,\n    encoding: Encoding = 'utf-8',\n  ) {\n    return this.indexOf(value, byteOffsetOrEncoding, encoding, true)\n  }\n\n  indexOf(\n    value: string | number | Uint8Array,\n    byteOffsetOrEncoding: number | Encoding | null = null,\n    encoding: Encoding = 'utf-8',\n    lastIndexOf = false,\n  ) {\n    const method = lastIndexOf ? this.findLastIndex.bind(this) : this.findIndex.bind(this)\n    encoding = typeof byteOffsetOrEncoding === 'string' ? byteOffsetOrEncoding : encoding\n    const toSearch = BufferClass.from(typeof value === 'number' ? [value] : value, encoding)\n    let byteOffset = typeof byteOffsetOrEncoding === 'string' ? 0 : byteOffsetOrEncoding\n    byteOffset = typeof byteOffsetOrEncoding === 'number' ? byteOffset : null\n    byteOffset = Number.isNaN(byteOffset) ? null : byteOffset\n    byteOffset ??= lastIndexOf ? this.length : 0\n    byteOffset = byteOffset < 0 ? this.length + byteOffset : byteOffset\n\n    if (toSearch.length === 0 && lastIndexOf === false) {\n      return byteOffset >= this.length ? this.length : byteOffset\n    }\n    if (toSearch.length === 0 && lastIndexOf === true) {\n      return (byteOffset >= this.length ? this.length : byteOffset) || this.length\n    }\n\n    return method((_, i) => {\n      const searchIf = lastIndexOf ? i <= byteOffset! : i >= byteOffset!\n      return searchIf && this[i] === toSearch[0] && toSearch.every((val, j) => this[i + j] === val)\n    })\n  }\n\n  toString(encoding: Encoding = 'utf8', start = 0, end = this.length) {\n    start = start < 0 ? 0 : start\n    encoding = encoding.toString().toLowerCase() as Encoding\n\n    if (end <= 0) return ''\n\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n      return decoder.decode(this.slice(start, end))\n    }\n    if (encoding === 'base64' || encoding === 'base64url') {\n      const string = btoa(this.reduce((s, v) => s + c2s(v), ''))\n\n      if (encoding === 'base64url') {\n        return string.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '')\n      }\n\n      return string\n    }\n    if (encoding === 'binary' || encoding === 'ascii' || encoding === 'latin1' || encoding === 'latin-1') {\n      return this.slice(start, end).reduce((s, v) => s + c2s(v & (encoding === 'ascii' ? 0x7f : 0xff)), '')\n    }\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      const view = new DataView(this.buffer.slice(start, end))\n      return Array.from({ length: view.byteLength / 2 }, (_, i) => {\n        // if the byte length is odd, the last character will be ignored\n        return i * 2 + 1 < view.byteLength ? c2s(view.getUint16(i * 2, true)) : ''\n      }).join('')\n    }\n    if (encoding === 'hex') {\n      return this.slice(start, end).reduce((s, v) => s + v.toString(16).padStart(2, '0'), '')\n    }\n\n    bufferPolyfillDoesNotImplement(`encoding \"${encoding}\"`)\n  }\n\n  toLocaleString() {\n    return this.toString()\n  }\n\n  inspect() {\n    const hex = this.toString('hex')\n    const byteHex = hex.match(/.{1,2}/g)!.join(' ')\n\n    return `<Buffer ${byteHex}>`\n  }\n}\n\nfunction stringToBuffer(value: string, encoding: string) {\n  encoding = encoding.toLowerCase() as Encoding\n\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return new BufferClass(encoder.encode(value))\n  }\n  if (encoding === 'base64' || encoding === 'base64url') {\n    value = value.replace(/-/g, '+').replace(/_/g, '/')\n    value = value.replace(/[^A-Za-z0-9+/]/g, '')\n\n    return new BufferClass([...atob(value)].map((v) => v.charCodeAt(0)))\n  }\n  if (encoding === 'binary' || encoding === 'ascii' || encoding === 'latin1' || encoding === 'latin-1') {\n    return new BufferClass([...value].map((v) => v.charCodeAt(0)))\n  }\n  if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n    const buffer = new BufferClass(value.length * 2)\n    const view = new DataView(buffer.buffer)\n    for (let i = 0; i < value.length; i++) {\n      view.setUint16(i * 2, value.charCodeAt(i), true)\n    }\n    return buffer\n  }\n  if (encoding === 'hex') {\n    const bytes = new BufferClass(value.length / 2)\n    for (let byteIndex = 0, i = 0; i < value.length; i += 2, byteIndex++) {\n      bytes[byteIndex] = parseInt(value.slice(i, i + 2), 16)\n    }\n\n    return bytes\n  }\n\n  bufferPolyfillDoesNotImplement(`encoding \"${encoding}\"`)\n}\n\nfunction initReadMethods(prototype: BufferClass) {\n  const dataViewProtoProps = Object.getOwnPropertyNames(DataView.prototype)\n  const dataViewMethods = dataViewProtoProps.filter((m) => m.startsWith('get') || m.startsWith('set'))\n  const bufferBaseMethods = dataViewMethods.map((m) => m.replace('get', 'read').replace('set', 'write'))\n\n  const genericReadMethod = (i: number, littleEndian: boolean) => {\n    return function (this: BufferClass, offset = 0) {\n      assertNumber(offset, 'offset')\n      assertInteger(offset, 'offset')\n      assertUnsigned(offset, 'offset', this.length - 1)\n      return new DataView(this.buffer)[dataViewMethods[i]](offset, littleEndian)\n    }\n  }\n\n  const genericWriteMethod = (i: number, littleEndian: boolean) => {\n    return function (this: BufferClass, value: any, offset = 0) {\n      const boundKey = dataViewMethods[i].match(/set(\\w+\\d+)/)![1].toLowerCase()\n      const bound = bounds[boundKey as keyof typeof bounds]\n\n      assertNumber(offset, 'offset')\n      assertInteger(offset, 'offset')\n      assertUnsigned(offset, 'offset', this.length - 1)\n      assertBounds(value, 'value', bound[0], bound[1])\n      new DataView(this.buffer)[dataViewMethods[i]](offset, value, littleEndian)\n      return offset + parseInt(dataViewMethods[i].match(/\\d+/)![0]) / 8\n    }\n  }\n\n  const createAlias = (methods: string[]) => {\n    methods.forEach((method) => {\n      if (method.includes('Uint')) prototype[method.replace('Uint', 'UInt')] = prototype[method]\n      if (method.includes('Float64')) prototype[method.replace('Float64', 'Double')] = prototype[method]\n      if (method.includes('Float32')) prototype[method.replace('Float32', 'Float')] = prototype[method]\n    })\n  }\n\n  bufferBaseMethods.forEach((method, i) => {\n    if (method.startsWith('read')) {\n      prototype[method] = genericReadMethod(i, false)\n      prototype[method + 'LE'] = genericReadMethod(i, true)\n      prototype[method + 'BE'] = genericReadMethod(i, false)\n    }\n    if (method.startsWith('write')) {\n      prototype[method] = genericWriteMethod(i, false)\n      prototype[method + 'LE'] = genericWriteMethod(i, true)\n      prototype[method + 'BE'] = genericWriteMethod(i, false)\n    }\n    createAlias([method, method + 'LE', method + 'BE'])\n  })\n}\n\nfunction bufferPolyfillDoesNotImplement(message: string): never {\n  throw new Error(`Buffer polyfill does not implement \"${message}\"`)\n}\n\nfunction assertUint8Array(value: any, argName: string): asserts value is Uint8Array {\n  if (!(value instanceof Uint8Array)) {\n    throw new TypeError(`The \"${argName}\" argument must be an instance of Buffer or Uint8Array`)\n  }\n}\n\nfunction assertUnsigned(value: number, argName: string, maxValue = MAX_UNSIGNED_32_BIT + 1) {\n  if (value < 0 || value > maxValue) {\n    const e = new RangeError(\n      `The value of \"${argName}\" is out of range. It must be >= 0 && <= ${maxValue}. Received ${value}`,\n    )\n    e['code'] = 'ERR_OUT_OF_RANGE'\n    throw e\n  }\n}\n\nfunction assertNumber(value: any, argName: string): asserts value is number {\n  if (typeof value !== 'number') {\n    const e = new TypeError(`The \"${argName}\" argument must be of type number. Received type ${typeof value}.`)\n    e['code'] = 'ERR_INVALID_ARG_TYPE'\n    throw e\n  }\n}\n\nfunction assertInteger(value: any, argName: string): asserts value is number {\n  if (!Number.isInteger(value) || Number.isNaN(value)) {\n    const e = new RangeError(`The value of \"${argName}\" is out of range. It must be an integer. Received ${value}`)\n    e['code'] = 'ERR_OUT_OF_RANGE'\n    throw e\n  }\n}\n\nfunction assertBounds(value: number, argName: string, min: any, max: any) {\n  if (value < min || value > max) {\n    const e = new RangeError(\n      `The value of \"${argName}\" is out of range. It must be >= ${min} and <= ${max}. Received ${value}`,\n    )\n    e['code'] = 'ERR_OUT_OF_RANGE'\n    throw e\n  }\n}\n\nfunction assertString(value: any, argName: string): asserts value is string {\n  if (typeof value !== 'string') {\n    const e = new TypeError(`The \"${argName}\" argument must be of type string. Received type ${typeof value}`)\n    e['code'] = 'ERR_INVALID_ARG_TYPE'\n    throw e\n  }\n}\n\nconst bounds = {\n  int8: [-0x80, 0x7f],\n  int16: [-0x8000, 0x7fff],\n  int32: [-0x80000000, 0x7fffffff],\n  uint8: [0, 0xff],\n  uint16: [0, 0xffff],\n  uint32: [0, 0xffffffff],\n  float32: [-Infinity, Infinity],\n  float64: [-Infinity, Infinity],\n  bigint64: [-0x8000000000000000n, 0x7fffffffffffffffn],\n  biguint64: [0n, 0xffffffffffffffffn],\n} as const\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nexport type Encoding = (typeof Encodings)[number]\n\nconst Encodings = [\n  'utf8',\n  'utf-8',\n  'hex',\n  'base64',\n  'ascii',\n  'binary',\n  'base64url',\n  'ucs2',\n  'ucs-2',\n  'utf16le',\n  'utf-16le',\n  'latin1',\n  'latin-1',\n] as const\n\nconst MAX_UNSIGNED_32_BIT = 0xffffffff\n\ninitReadMethods(BufferClass.prototype)\n\nfunction $Buffer(value: unknown, encoding: any = 'utf8') {\n  return BufferClass.from(value, encoding)\n}\n\nexport const Buffer = new Proxy($Buffer, {\n  construct(_, [value, encoding]) {\n    return BufferClass.from(value, encoding)\n  },\n  get(_, prop) {\n    return BufferClass[prop]\n  },\n}) as typeof $Buffer & typeof BufferClass\n\nconst c2s = String.fromCodePoint\n\nexport default Buffer\n", "export const process: Partial<NodeJS.Process> = {\n  nextTick: (fn: Function, ...args: unknown[]) => {\n    setTimeout(() => {\n      fn(...args)\n    }, 0)\n  },\n  env: {},\n  version: '',\n  cwd: () => '/',\n  stderr: {} as any,\n  argv: ['/bin/node'],\n  pid: 10000,\n}\n\nexport const { cwd } = process\nexport default process\n", "const performance =\n  globalThis['performance'] ??\n  (() => {\n    const origin = Date.now()\n    return {\n      now: () => Date.now() - origin,\n    }\n  })()\n\nexport { performance }\nexport default { performance }\n", "export const fn = () => {}\n\nfn.prototype = fn\n", "export class WeakRef<T> {\n  value: T\n\n  constructor(value: T) {\n    this.value = value\n  }\n\n  deref() {\n    return this.value\n  }\n}\n", "/*\r\n *  decimal.js-light v2.5.1\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js-light\r\n *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Expat Licence\r\n */\r\n\r\n\r\n// ------------------------------------  EDITABLE DEFAULTS  ------------------------------------- //\r\n\r\n\r\n// The limit on the value of `precision`, and on the value of the first argument to\r\n// `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\nvar MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  defaults = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n    // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to MAX_E\r\n\r\n    // The natural logarithm of 10.\r\n    // 115 digits\r\n    LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n  },\r\n\r\n\r\n// ------------------------------------ END OF EDITABLE DEFAULTS -------------------------------- //\r\n\r\n\r\n  Decimal,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  ONE,\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n  MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n  // Decimal.prototype object\r\n  P = {};\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue                       abs\r\n *  comparedTo                          cmp\r\n *  decimalPlaces                       dp\r\n *  dividedBy                           div\r\n *  dividedToIntegerBy                  idiv\r\n *  equals                              eq\r\n *  exponent\r\n *  greaterThan                         gt\r\n *  greaterThanOrEqualTo                gte\r\n *  isInteger                           isint\r\n *  isNegative                          isneg\r\n *  isPositive                          ispos\r\n *  isZero\r\n *  lessThan                            lt\r\n *  lessThanOrEqualTo                   lte\r\n *  logarithm                           log\r\n *  minus                               sub\r\n *  modulo                              mod\r\n *  naturalExponential                  exp\r\n *  naturalLogarithm                    ln\r\n *  negated                             neg\r\n *  plus                                add\r\n *  precision                           sd\r\n *  squareRoot                          sqrt\r\n *  times                               mul\r\n *  toDecimalPlaces                     todp\r\n *  toExponential\r\n *  toFixed\r\n *  toInteger                           toint\r\n *  toNumber\r\n *  toPower                             pow\r\n *  toPrecision\r\n *  toSignificantDigits                 tosd\r\n *  toString\r\n *  valueOf                             val\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s) x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this;\r\n\r\n  y = new x.constructor(y);\r\n\r\n  // Signs differ?\r\n  if (x.s !== y.s) return x.s || -y.s;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n  xdL = x.d.length;\r\n  ydL = y.d.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var x = this,\r\n    w = x.d.length - 1,\r\n    dp = (w - x.e) * LOG_BASE;\r\n\r\n  // Subtract the number of trailing zeros of the last word.\r\n  w = x.d[w];\r\n  if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n  return dp < 0 ? 0 : dp;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, truncated to `precision` significant digits.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.idiv = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return !this.cmp(y);\r\n};\r\n\r\n\r\n/*\r\n * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n *\r\n */\r\nP.exponent = function () {\r\n  return getBase10Exponent(this);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  return this.cmp(y) >= 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isint = function () {\r\n  return this.e > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isneg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.ispos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return this.s === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n * `precision` significant digits.\r\n *\r\n * If no base is specified, return log[10](x).\r\n *\r\n * log[base](x) = ln(x) / ln(base)\r\n *\r\n * The maximum error of the result is 1 ulp (unit in the last place).\r\n *\r\n * [base] {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var r,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    wpr = pr + 5;\r\n\r\n  // Default base is 10.\r\n  if (base === void 0) {\r\n    base = new Ctor(10);\r\n  } else {\r\n    base = new Ctor(base);\r\n\r\n    // log[-b](x) = NaN\r\n    // log[0](x)  = NaN\r\n    // log[1](x)  = NaN\r\n    if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n  }\r\n\r\n  // log[b](-x) = NaN\r\n  // log[b](0) = -Infinity\r\n  if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n  // log[b](1) = 0\r\n  if (x.eq(ONE)) return new Ctor(0);\r\n\r\n  external = false;\r\n  r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n  external = true;\r\n\r\n  return round(r, pr);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var x = this;\r\n  y = new x.constructor(y);\r\n  return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // x % 0 = NaN\r\n  if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n  // Return x if x is 0.\r\n  if (!x.s) return round(new Ctor(x), pr);\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n  q = divide(x, y, 0, 1).times(y);\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n * significant digits.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return exp(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * truncated to `precision` significant digits.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return ln(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s || 0;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var x = this;\r\n  y = new x.constructor(y);\r\n  return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var e, sd, w,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  e = getBase10Exponent(x) + 1;\r\n  w = x.d.length - 1;\r\n  sd = w * LOG_BASE + 1;\r\n  w = x.d[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n  }\r\n\r\n  return z && e > sd ? e : sd;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n * significant digits.\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var e, n, pr, r, s, t, wpr,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative or zero?\r\n  if (x.s < 1) {\r\n    if (!x.s) return new Ctor(0);\r\n\r\n    // sqrt(-x) = NaN\r\n    throw Error(decimalError + 'NaN');\r\n  }\r\n\r\n  e = getBase10Exponent(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  pr = Ctor.precision;\r\n  s = wpr = pr + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n      n = n.slice(wpr - 3, wpr + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (s == wpr && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        round(t, pr + 1, 0);\r\n\r\n        if (t.times(t).eq(x)) {\r\n          r = t;\r\n          break;\r\n        }\r\n      } else if (n != '9999') {\r\n        break;\r\n      }\r\n\r\n      wpr += 4;\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return round(r, pr);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  // Return 0 if either is 0.\r\n  if (!x.s || !y.s) return new Ctor(0);\r\n\r\n  y.s *= x.s;\r\n  e = x.e + y.e;\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = e;\r\n\r\n  return external ? round(y, Ctor.precision) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.todp = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = toString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = round(new Ctor(x), dp + 1, rm);\r\n    str = toString(x, true, dp + 1);\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) return toString(x);\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n  str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isneg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.toInteger = P.toint = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n * truncated to `precision` significant digits.\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * The maximum error is 1 ulp (unit in last place).\r\n *\r\n * y {number|string|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, sign, yIsInt,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    guard = 12,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // pow(x, 0) = 1\r\n  if (!y.s) return new Ctor(ONE);\r\n\r\n  x = new Ctor(x);\r\n\r\n  // pow(0, y > 0) = 0\r\n  // pow(0, y < 0) = Infinity\r\n  if (!x.s) {\r\n    if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n    return x;\r\n  }\r\n\r\n  // pow(1, y) = 1\r\n  if (x.eq(ONE)) return x;\r\n\r\n  pr = Ctor.precision;\r\n\r\n  // pow(x, 1) = x\r\n  if (y.eq(ONE)) return round(x, pr);\r\n\r\n  e = y.e;\r\n  k = y.d.length - 1;\r\n  yIsInt = e >= k;\r\n  sign = x.s;\r\n\r\n  if (!yIsInt) {\r\n\r\n    // pow(x < 0, y non-integer) = NaN\r\n    if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = new Ctor(ONE);\r\n\r\n    // Max k of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (k % 2) {\r\n        r = r.times(x);\r\n        truncate(r.d, e);\r\n      }\r\n\r\n      k = mathfloor(k / 2);\r\n      if (k === 0) break;\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, e);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n  }\r\n\r\n  // Result is negative if x is negative and the last digit of integer y is odd.\r\n  sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n  x.s = 1;\r\n  external = false;\r\n  r = y.times(ln(x, pr + guard));\r\n  external = true;\r\n  r = exp(r);\r\n  r.s = sign;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var e, str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    e = getBase10Exponent(x);\r\n    str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = round(new Ctor(x), sd, rm);\r\n    e = getBase10Exponent(x);\r\n    str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toSignificantDigits = P.tosd = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return round(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = P.valueOf = P.val = P.toJSON = P[Symbol.for('nodejs.util.inspect.custom')] = function () {\r\n  var x = this,\r\n    e = getBase10Exponent(x),\r\n    Ctor = x.constructor;\r\n\r\n  return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  add                 P.minus, P.plus\r\n *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n *  exp                 P.exp, P.pow\r\n *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n *                      P.toString, divide, round, toString, exp, ln\r\n *  getLn10             P.log, ln\r\n *  getZeroString       digitsToString, toString\r\n *  ln                  P.log, P.ln, P.pow, exp\r\n *  parseDecimal        Decimal\r\n *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n *                      divide, getLn10, exp, ln\r\n *  subtract            P.minus, P.plus\r\n *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n *  truncate            P.pow\r\n *\r\n *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n */\r\n\r\n\r\nfunction add(x, y) {\r\n  var carry, d, e, i, k, len, xd, yd,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  // If either is zero...\r\n  if (!x.s || !y.s) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!y.s) y = new Ctor(x);\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  k = x.e;\r\n  e = y.e;\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = e;\r\n\r\n  return external ? round(y, pr) : y;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % BASE | 0;\r\n      carry = temp / BASE | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * BASE + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, dp) {\r\n    var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either 0?\r\n    if (!x.s) return new Ctor(x);\r\n    if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n    e = x.e - y.e;\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n    if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n    } else if (dp) {\r\n      sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) return new Ctor(0);\r\n\r\n    // Convert precision in number of base 10 digits to base 1e7 digits.\r\n    sd = sd / LOG_BASE + 2 | 0;\r\n    i = 0;\r\n\r\n    // divisor < 1e7\r\n    if (yL == 1) {\r\n      k = 0;\r\n      yd = yd[0];\r\n      sd++;\r\n\r\n      // k is the carry.\r\n      for (; (i < xL || k) && sd--; i++) {\r\n        t = k * BASE + (xd[i] || 0);\r\n        qd[i] = t / yd | 0;\r\n        k = t % yd | 0;\r\n      }\r\n\r\n    // divisor >= 1e7\r\n    } else {\r\n\r\n      // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n      k = BASE / (yd[0] + 1) | 0;\r\n\r\n      if (k > 1) {\r\n        yd = multiplyInteger(yd, k);\r\n        xd = multiplyInteger(xd, k);\r\n        yL = yd.length;\r\n        xL = xd.length;\r\n      }\r\n\r\n      xi = yL;\r\n      rem = xd.slice(0, yL);\r\n      remL = rem.length;\r\n\r\n      // Add zeros to make remainder as long as divisor.\r\n      for (; remL < yL;) rem[remL++] = 0;\r\n\r\n      yz = yd.slice();\r\n      yz.unshift(0);\r\n      yd0 = yd[0];\r\n\r\n      if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n      do {\r\n        k = 0;\r\n\r\n        // Compare divisor and remainder.\r\n        cmp = compare(yd, rem, yL, remL);\r\n\r\n        // If divisor < remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Calculate trial digit, k.\r\n          rem0 = rem[0];\r\n          if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n          // k will be how many times the divisor goes into the current remainder.\r\n          k = rem0 / yd0 | 0;\r\n\r\n          //  Algorithm:\r\n          //  1. product = divisor * trial digit (k)\r\n          //  2. if product > remainder: product -= divisor, k--\r\n          //  3. remainder -= product\r\n          //  4. if product was < remainder at 2:\r\n          //    5. compare new remainder and divisor\r\n          //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n          if (k > 1) {\r\n            if (k >= BASE) k = BASE - 1;\r\n\r\n            // product = divisor * trial digit.\r\n            prod = multiplyInteger(yd, k);\r\n            prodL = prod.length;\r\n            remL = rem.length;\r\n\r\n            // Compare product and remainder.\r\n            cmp = compare(prod, rem, prodL, remL);\r\n\r\n            // product > remainder.\r\n            if (cmp == 1) {\r\n              k--;\r\n\r\n              // Subtract divisor from product.\r\n              subtract(prod, yL < prodL ? yz : yd, prodL);\r\n            }\r\n          } else {\r\n\r\n            // cmp is -1.\r\n            // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n            // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n            if (k == 0) cmp = k = 1;\r\n            prod = yd.slice();\r\n          }\r\n\r\n          prodL = prod.length;\r\n          if (prodL < remL) prod.unshift(0);\r\n\r\n          // Subtract product from remainder.\r\n          subtract(rem, prod, remL);\r\n\r\n          // If product was < previous remainder.\r\n          if (cmp == -1) {\r\n            remL = rem.length;\r\n\r\n            // Compare divisor and new remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < new remainder, subtract divisor from remainder.\r\n            if (cmp < 1) {\r\n              k++;\r\n\r\n              // Subtract divisor from remainder.\r\n              subtract(rem, yL < remL ? yz : yd, remL);\r\n            }\r\n          }\r\n\r\n          remL = rem.length;\r\n        } else if (cmp === 0) {\r\n          k++;\r\n          rem = [0];\r\n        }    // if cmp === 1, k will be 0\r\n\r\n        // Add the next digit, k, to the result array.\r\n        qd[i++] = k;\r\n\r\n        // Update the remainder.\r\n        if (cmp && rem[0]) {\r\n          rem[remL++] = xd[xi] || 0;\r\n        } else {\r\n          rem = [xd[xi]];\r\n          remL = 1;\r\n        }\r\n\r\n      } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n    }\r\n\r\n    // Leading zero?\r\n    if (!qd[0]) qd.shift();\r\n\r\n    q.e = e;\r\n\r\n    return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n * significant digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n */\r\nfunction exp(x, sd) {\r\n  var denominator, guard, pow, sum, t, wpr,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n  // exp(0) = 1\r\n  if (!x.s) return new Ctor(ONE);\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  while (x.abs().gte(0.1)) {\r\n    x = x.times(t);    // x = x / 2^5\r\n    k += 5;\r\n  }\r\n\r\n  // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(ONE);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = round(pow.times(x), wpr);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      while (k--) sum = round(sum.times(sum), wpr);\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(sum, pr)) : sum;\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(x) {\r\n  var e = x.e * LOG_BASE,\r\n    w = x.d[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for (; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n\r\n  if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(decimalError + 'LN10 precision limit exceeded');\r\n  }\r\n\r\n  return round(new Ctor(Ctor.LN10), sd);\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n * digits.\r\n *\r\n *  ln(n) is non-terminating (n != 1)\r\n *\r\n */\r\nfunction ln(y, sd) {\r\n  var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  // ln(-x) = NaN\r\n  // ln(0) = -Infinity\r\n  if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n  // ln(1) = 0\r\n  if (x.eq(ONE)) return new Ctor(0);\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  if (x.eq(10)) {\r\n    if (sd == null) external = true;\r\n    return getLn10(Ctor, wpr);\r\n  }\r\n\r\n  wpr += guard;\r\n  Ctor.precision = wpr;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n  e = getBase10Exponent(x);\r\n\r\n  if (Math.abs(e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n    Ctor.precision = pr;\r\n    return sd == null ? (external = true, round(x, pr)) : x;\r\n  }\r\n\r\n  // x is reduced to a value near 1.\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n  x2 = round(x.times(x), wpr);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = round(numerator.times(x2), wpr);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(sum, pr)) : sum;\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    e = e - i - 1;\r\n    x.e = mathfloor(e / LOG_BASE);\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n  } else {\r\n\r\n    // Zero.\r\n    x.s = 0;\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n */\r\n function round(x, sd, rm) {\r\n  var i, j, k, n, rd, doRound, w, xdi,\r\n    xd = x.d;\r\n\r\n  // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n  // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n  // xdi: the index of w within xd.\r\n  // n: the number of digits of w.\r\n  // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n  // they had leading zeros)\r\n  // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n  // Get the length of the first word of the digits array xd.\r\n  for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n  i = sd - n;\r\n\r\n  // Is the rounding digit in the first word of xd?\r\n  if (i < 0) {\r\n    i += LOG_BASE;\r\n    j = sd;\r\n    w = xd[xdi = 0];\r\n  } else {\r\n    xdi = Math.ceil((i + 1) / LOG_BASE);\r\n    k = xd.length;\r\n    if (xdi >= k) return x;\r\n    w = k = xd[xdi];\r\n\r\n    // Get the number of digits of w.\r\n    for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n    // Get the index of rd within w.\r\n    i %= LOG_BASE;\r\n\r\n    // Get the index of rd within w, adjusted for leading zeros.\r\n    // The number of leading zeros of w is given by LOG_BASE - n.\r\n    j = i - LOG_BASE + n;\r\n  }\r\n\r\n  if (rm !== void 0) {\r\n    k = mathpow(10, n - j - 1);\r\n\r\n    // Get the rounding digit at index j of w.\r\n    rd = w / k % 10 | 0;\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n    // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n    // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n    // 714.\r\n\r\n    doRound = rm < 4\r\n      ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n  }\r\n\r\n  if (sd < 1 || !xd[0]) {\r\n    if (doRound) {\r\n      k = getBase10Exponent(x);\r\n      xd.length = 1;\r\n\r\n      // Convert sd to decimal places.\r\n      sd = sd - k - 1;\r\n\r\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n      xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n      x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n    } else {\r\n      xd.length = 1;\r\n\r\n      // Zero.\r\n      xd[0] = x.e = x.s = 0;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n  // Remove excess digits.\r\n  if (i == 0) {\r\n    xd.length = xdi;\r\n    k = 1;\r\n    xdi--;\r\n  } else {\r\n    xd.length = xdi + 1;\r\n    k = mathpow(10, LOG_BASE - i);\r\n\r\n    // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n    // j > 0 means i > number of leading zeros of w.\r\n    xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n  }\r\n\r\n  if (doRound) {\r\n    for (;;) {\r\n\r\n      // Is the digit to be rounded up in the first word of xd?\r\n      if (xdi == 0) {\r\n        if ((xd[0] += k) == BASE) {\r\n          xd[0] = 1;\r\n          ++x.e;\r\n        }\r\n\r\n        break;\r\n      } else {\r\n        xd[xdi] += k;\r\n        if (xd[xdi] != BASE) break;\r\n        xd[xdi--] = 0;\r\n        k = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n  if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n    throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction subtract(x, y) {\r\n  var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  // Return y negated if x is zero.\r\n  // Return x if y is zero and x is non-zero.\r\n  if (!x.s || !y.s) {\r\n    if (y.s) y.s = -y.s;\r\n    else y = new Ctor(x);\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n\r\n  // x and y are non-zero numbers with the same sign.\r\n\r\n  e = y.e;\r\n  xe = x.e;\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of zeros\r\n    // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n    // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to xd if shorter.\r\n  // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(0);\r\n\r\n  y.d = xd;\r\n  y.e = e;\r\n\r\n  //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n  return external ? round(y, pr) : y;\r\n}\r\n\r\n\r\nfunction toString(x, isExp, sd) {\r\n  var k,\r\n    e = getBase10Exponent(x),\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (e < 0 ? 'e' : 'e+') + e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  clone\r\n *  config/set\r\n */\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * value {number|string|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(value) {\r\n    var x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    // Duplicate.\r\n    if (value instanceof Decimal) {\r\n      x.s = value.s;\r\n      x.e = value.e;\r\n      x.d = (value = value.d) ? value.slice() : value;\r\n      return;\r\n    }\r\n\r\n    if (typeof value === 'number') {\r\n\r\n      // Reject Infinity/NaN.\r\n      if (value * 0 !== 0) {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      if (value > 0) {\r\n        x.s = 1;\r\n      } else if (value < 0) {\r\n        value = -value;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 0;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (value === ~~value && value < 1e7) {\r\n        x.e = 0;\r\n        x.d = [value];\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, value.toString());\r\n    } else if (typeof value !== 'string') {\r\n      throw Error(invalidArgument + value);\r\n    }\r\n\r\n    // Minus sign?\r\n    if (value.charCodeAt(0) === 45) {\r\n      value = value.slice(1);\r\n      x.s = -1;\r\n    } else {\r\n      x.s = 1;\r\n    }\r\n\r\n    if (isDecimal.test(value)) parseDecimal(x, value);\r\n    else throw Error(invalidArgument + value);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n  Decimal.clone = clone;\r\n  Decimal.config = Decimal.set = config;\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n    for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    throw Error(decimalError + 'Object expected');\r\n  }\r\n  var i, p, v,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -1 / 0, 0,\r\n      'toExpPos', 0, 1 / 0\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if ((v = obj[p = ps[i]]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if ((v = obj[p = 'LN10']) !== void 0) {\r\n      if (v == Math.LN10) this[p] = new this(v);\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = clone(defaults);\r\n\r\n// Internal constant.\r\nONE = new Decimal(1);\r\n\r\nexport default Decimal;\r\n", "import DecimalLight from 'decimal.js-light/decimal.mjs'\n\nclass Decimal extends DecimalLight {\n  static isDecimal(value: any): boolean {\n    return value instanceof DecimalLight\n  }\n\n  static random(sd = 20): Decimal {\n    if (\n      TARGET_BUILD_TYPE === 'wasm-engine-edge' ||\n      TARGET_BUILD_TYPE === 'wasm-compiler-edge' ||\n      TARGET_BUILD_TYPE === 'edge'\n    ) {\n      const bytes = globalThis.crypto.getRandomValues(new Uint8Array(sd))\n      const result = bytes.reduce((acc, byte) => acc + byte, '')\n      return new DecimalLight(`0.${result.slice(0, sd)}`)\n    } else {\n      throw new Error('Not implemented for Node.js yet')\n    }\n  }\n}\n\nexport default Decimal\nexport { Decimal }\n", "export function existsSync() {\n  return false\n}\n\nexport function lstatSync() {\n  return {\n    dev: 0,\n    ino: 0,\n    mode: 0,\n    nlink: 0,\n    uid: 0,\n    gid: 0,\n    rdev: 0,\n    size: 0,\n    blksize: 0,\n    blocks: 0,\n    atimeMs: 0,\n    mtimeMs: 0,\n    ctimeMs: 0,\n    birthtimeMs: 0,\n    atime: new Date(),\n    mtime: new Date(),\n    ctime: new Date(),\n    birthtime: new Date(),\n  }\n}\n\nexport function statSync() {\n  return lstatSync()\n}\n\nexport function readdirSync() {\n  return []\n}\n\nexport function readdir(cb: (err: Error | null, files: string[]) => void) {\n  cb(null, [])\n}\n\nexport function readFileSync() {\n  return ''\n}\n\nexport function readlinkSync() {\n  return ''\n}\n\nexport function realpathSync() {\n  return ''\n}\n\nexport function chmodSync() {}\n\nexport function renameSync() {}\n\nexport function mkdirSync() {}\n\nexport function rmdirSync() {}\n\nexport function rmSync() {}\n\nexport function unlinkSync() {}\n\nexport function watchFile() {}\n\nexport function unwatchFile() {}\n\nexport function watch() {\n  return {\n    close: () => {},\n    on: () => {},\n    removeAllListeners: () => {},\n  }\n}\n\nexport function stat(path: string, callback: (err: Error | null, stats?: any) => void) {\n  callback(null, lstatSync())\n}\n\nexport const promises = {}\n\n/**\n * A stub for fs for tryLoadEnv not to attempt loading .env\n */\nconst fs = {\n  existsSync,\n  lstatSync,\n  stat,\n  statSync,\n  readdirSync,\n  readdir,\n  readlinkSync,\n  realpathSync,\n  chmodSync,\n  renameSync,\n  mkdirSync,\n  rmdirSync,\n  rmSync,\n  unlinkSync,\n  watchFile,\n  unwatchFile,\n  watch,\n  promises,\n}\n\nexport default fs\n", "export function resolve(...args: any[]) {\n  return args.join('/')\n}\n\nexport function join(...args: any[]) {\n  return args.join('/')\n}\n\nexport function parse(path: string) {\n  const base = basename(path)\n  const dir = dirname(path)\n  const [name, ext] = base.split('.')\n  return { root: '/', dir, base, ext, name }\n}\n\nexport function basename(path: string) {\n  const parts = path.split('/')\n  return parts[parts.length - 1]\n}\n\nexport function dirname(path: string) {\n  const parts = path.split('/')\n  return parts.slice(0, -1).join('/')\n}\n\nexport const sep = '/'\nexport const delimiter = ':'\n\nexport function normalize(path: string) {\n  // Simple normalization - remove duplicate slashes and resolve . and ..\n  const parts = path.split('/').filter((part) => part !== '' && part !== '.')\n  const normalized: string[] = []\n\n  for (const part of parts) {\n    if (part === '..') {\n      normalized.pop()\n    } else {\n      normalized.push(part)\n    }\n  }\n\n  const result = normalized.join('/')\n  return path.startsWith('/') ? '/' + result : result\n}\n\nexport const posix = {\n  sep,\n}\n\n/**\n * A poor man's shim for the \"path\" module\n */\nconst path = {\n  basename,\n  delimiter,\n  dirname,\n  join,\n  normalize,\n  parse,\n  posix,\n  resolve,\n  sep,\n}\n\nexport default path\n", "{\n  \"name\": \"@prisma/internals\",\n  \"version\": \"6.15.0\",\n  \"description\": \"This package is intended for Prisma's internal use\",\n  \"main\": \"dist/index.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/prisma/prisma.git\",\n    \"directory\": \"packages/internals\"\n  },\n  \"homepage\": \"https://www.prisma.io\",\n  \"author\": \"Tim Suchanek <suchanek@prisma.io>\",\n  \"bugs\": \"https://github.com/prisma/prisma/issues\",\n  \"license\": \"Apache-2.0\",\n  \"scripts\": {\n    \"dev\": \"DEV=true tsx helpers/build.ts\",\n    \"build\": \"tsx helpers/build.ts\",\n    \"test\": \"dotenv -e ../../.db.env -- jest --silent\",\n    \"prepublishOnly\": \"pnpm run build\"\n  },\n  \"files\": [\n    \"README.md\",\n    \"dist\",\n    \"!**/libquery_engine*\",\n    \"!dist/get-generators/engines/*\",\n    \"scripts\"\n  ],\n  \"devDependencies\": {\n    \"@babel/helper-validator-identifier\": \"7.25.9\",\n    \"@opentelemetry/api\": \"1.9.0\",\n    \"@swc/core\": \"1.11.5\",\n    \"@swc/jest\": \"0.2.37\",\n    \"@types/babel__helper-validator-identifier\": \"7.15.2\",\n    \"@types/jest\": \"29.5.14\",\n    \"@types/node\": \"18.19.76\",\n    \"@types/resolve\": \"1.20.6\",\n    \"archiver\": \"6.0.2\",\n    \"checkpoint-client\": \"1.1.33\",\n    \"cli-truncate\": \"4.0.0\",\n    \"dotenv\": \"16.5.0\",\n    \"empathic\": \"2.0.0\",\n    \"esbuild\": \"0.25.5\",\n    \"escape-string-regexp\": \"5.0.0\",\n    \"execa\": \"5.1.1\",\n    \"fast-glob\": \"3.3.3\",\n    \"find-up\": \"7.0.0\",\n    \"fp-ts\": \"2.16.9\",\n    \"fs-extra\": \"11.3.0\",\n    \"fs-jetpack\": \"5.1.0\",\n    \"global-dirs\": \"4.0.0\",\n    \"globby\": \"11.1.0\",\n    \"identifier-regex\": \"1.0.0\",\n    \"indent-string\": \"4.0.0\",\n    \"is-windows\": \"1.0.2\",\n    \"is-wsl\": \"3.1.0\",\n    \"jest\": \"29.7.0\",\n    \"jest-junit\": \"16.0.0\",\n    \"kleur\": \"4.1.5\",\n    \"mock-stdin\": \"1.0.0\",\n    \"new-github-issue-url\": \"0.2.1\",\n    \"node-fetch\": \"3.3.2\",\n    \"npm-packlist\": \"5.1.3\",\n    \"open\": \"7.4.2\",\n    \"p-map\": \"4.0.0\",\n    \"resolve\": \"1.22.10\",\n    \"string-width\": \"7.2.0\",\n    \"strip-ansi\": \"6.0.1\",\n    \"strip-indent\": \"4.0.0\",\n    \"temp-dir\": \"2.0.0\",\n    \"tempy\": \"1.0.1\",\n    \"terminal-link\": \"4.0.0\",\n    \"tmp\": \"0.2.3\",\n    \"ts-node\": \"10.9.2\",\n    \"ts-pattern\": \"5.6.2\",\n    \"ts-toolbelt\": \"9.6.0\",\n    \"typescript\": \"5.4.5\",\n    \"yarn\": \"1.22.22\"\n  },\n  \"dependencies\": {\n    \"@prisma/config\": \"workspace:*\",\n    \"@prisma/debug\": \"workspace:*\",\n    \"@prisma/dmmf\": \"workspace:*\",\n    \"@prisma/driver-adapter-utils\": \"workspace:*\",\n    \"@prisma/engines\": \"workspace:*\",\n    \"@prisma/fetch-engine\": \"workspace:*\",\n    \"@prisma/generator\": \"workspace:*\",\n    \"@prisma/generator-helper\": \"workspace:*\",\n    \"@prisma/get-platform\": \"workspace:*\",\n    \"@prisma/prisma-schema-wasm\": \"6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb\",\n    \"@prisma/schema-engine-wasm\": \"6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb\",\n    \"@prisma/schema-files-loader\": \"workspace:*\",\n    \"arg\": \"5.0.2\",\n    \"prompts\": \"2.4.2\"\n  },\n  \"peerDependencies\": {\n    \"typescript\": \">=5.1.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"typescript\": {\n      \"optional\": true\n    }\n  },\n  \"sideEffects\": false\n}", "'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n", "'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n", "'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n", "'use strict';\nmodule.exports = (function()\n{\n  function _min(d0, d1, d2, bx, ay)\n  {\n    return d0 < d1 || d2 < d1\n        ? d0 > d2\n            ? d2 + 1\n            : d0 + 1\n        : bx === ay\n            ? d1\n            : d1 + 1;\n  }\n\n  return function(a, b)\n  {\n    if (a === b) {\n      return 0;\n    }\n\n    if (a.length > b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var la = a.length;\n    var lb = b.length;\n\n    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {\n      la--;\n      lb--;\n    }\n\n    var offset = 0;\n\n    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {\n      offset++;\n    }\n\n    la -= offset;\n    lb -= offset;\n\n    if (la === 0 || lb < 3) {\n      return lb;\n    }\n\n    var x = 0;\n    var y;\n    var d0;\n    var d1;\n    var d2;\n    var d3;\n    var dd;\n    var dy;\n    var ay;\n    var bx0;\n    var bx1;\n    var bx2;\n    var bx3;\n\n    var vector = [];\n\n    for (y = 0; y < la; y++) {\n      vector.push(y + 1);\n      vector.push(a.charCodeAt(offset + y));\n    }\n\n    var len = vector.length - 1;\n\n    for (; x < lb - 3;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      bx1 = b.charCodeAt(offset + (d1 = x + 1));\n      bx2 = b.charCodeAt(offset + (d2 = x + 2));\n      bx3 = b.charCodeAt(offset + (d3 = x + 3));\n      dd = (x += 4);\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        ay = vector[y + 1];\n        d0 = _min(dy, d0, d1, bx0, ay);\n        d1 = _min(d0, d1, d2, bx1, ay);\n        d2 = _min(d1, d2, d3, bx2, ay);\n        dd = _min(d2, d3, dd, bx3, ay);\n        vector[y] = dd;\n        d3 = d2;\n        d2 = d1;\n        d1 = d0;\n        d0 = dy;\n      }\n    }\n\n    for (; x < lb;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      dd = ++x;\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);\n        d0 = dy;\n      }\n    }\n\n    return dd;\n  };\n})();\n\n", "import { BasicBuilder } from './BasicBuilder'\nimport type { KeyType } from './KeyType'\nimport { Writer } from './Writer'\n\nexport abstract class TypeBuilder implements BasicBuilder {\n  // TODO(@SevInf): this should be replaced with precedence system that would\n  // automatically add parenthesis where they are needed\n  needsParenthesisWhenIndexed = false\n  needsParenthesisInKeyof = false\n  needsParenthesisInUnion = false\n  needsParenthesisInIntersection = false\n\n  abstract write(writer: Writer): void\n\n  subKey(key: string): KeyType {\n    // TODO: since we translating ESM to CommonJS during bundling, we\n    // can't handle circular dependencies the same way ESM does. We have to delay KeyType import\n    // to resolve it. Once we stop doing this, we can move this import to top of the file.\n    const { KeyType } = require('./KeyType')\n    return new KeyType(this, key)\n  }\n\n  writeIndexed(writer: Writer) {\n    if (this.needsParenthesisWhenIndexed) {\n      writer.write('(')\n    }\n\n    writer.write(this)\n\n    if (this.needsParenthesisWhenIndexed) {\n      writer.write(')')\n    }\n  }\n}\n", "import { TypeBuilder } from './TypeBuilder'\nimport { Writer } from './Writer'\n\nexport class KeyType extends TypeBuilder {\n  constructor(\n    public baseType: TypeBuilder,\n    public key: string,\n  ) {\n    super()\n  }\n  write(writer: Writer): void {\n    this.baseType.writeIndexed(writer)\n\n    writer.write('[').write(`\"${this.key}\"`).write(']')\n  }\n}\n\nexport function keyType(baseType: TypeBuilder, key: string) {\n  return new KeyType(baseType, key)\n}\n", "{\n  \"name\": \"@prisma/engines-version\",\n  \"version\": \"6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb\",\n  \"main\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"license\": \"Apache-2.0\",\n  \"author\": \"Tim Suchanek <suchanek@prisma.io>\",\n  \"prisma\": {\n    \"enginesVersion\": \"85179d7826409ee107a6ba334b5e305ae3fba9fb\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/prisma/engines-wrapper.git\",\n    \"directory\": \"packages/engines-version\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"18.19.76\",\n    \"typescript\": \"4.9.5\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsc -d\"\n  }\n}", "type Listener = (...args: any[]) => void\n\nexport class EventEmitter {\n  private events: Record<string, Listener[]> = {}\n\n  on(event: string, listener: Listener) {\n    if (!this.events[event]) {\n      this.events[event] = []\n    }\n\n    this.events[event].push(listener)\n\n    return this\n  }\n\n  emit(event: string, ...args: any[]) {\n    if (!this.events[event]) {\n      return false\n    }\n\n    this.events[event].forEach((listener) => {\n      listener(...args)\n    })\n\n    return true\n  }\n}\n\n/**\n * A poor man's shim for the \"events\" module\n */\nconst events = {\n  EventEmitter,\n}\n\nexport default events\n", "import * as Extensions from './core/extensions'\nimport * as Public from './core/public'\nimport * as Types from './core/types'\n\nexport { type Types }\nexport { Extensions }\nexport { Public }\n\nexport { type JsonBatchQuery, type JsonQuery } from './core/engines'\nexport { PrismaClientInitializationError } from './core/errors/PrismaClientInitializationError'\nexport { PrismaClientKnownRequestError } from './core/errors/PrismaClientKnownRequestError'\nexport { PrismaClientRustPanicError } from './core/errors/PrismaClientRustPanicError'\nexport { PrismaClientUnknownRequestError } from './core/errors/PrismaClientUnknownRequestError'\nexport { PrismaClientValidationError } from './core/errors/PrismaClientValidationError'\nexport { serializeJsonQuery } from './core/jsonProtocol/serializeJsonQuery'\nexport {\n  type Metric,\n  type MetricHistogram,\n  type MetricHistogramBucket,\n  type Metrics,\n  MetricsClient,\n} from './core/metrics/MetricsClient'\nexport { createParam } from './core/model/Param'\nexport { defineDmmfProperty } from './core/runtimeDataModel'\nexport type * from './core/types/exported'\nexport type { ITXClientDenyList } from './core/types/exported/itxClientDenyList'\nexport { objectEnumValues } from './core/types/exported/ObjectEnums'\nexport { skip } from './core/types/exported/Skip'\nexport { makeTypedQueryFactory } from './core/types/exported/TypedSql'\nexport type { PrismaClientOptions } from './getPrismaClient'\nexport { getPrismaClient } from './getPrismaClient'\nexport { makeStrictEnum } from './strictEnum'\nexport { deserializeRawResult } from './utils/deserializeRawResults'\nexport { getRuntime } from './utils/getRuntime'\nexport { warnEnvConflicts } from './warnEnvConflicts'\nexport {\n  type BaseDMMF,\n  dmmfToRuntimeDataModel,\n  type GetPrismaClientConfig,\n  type Operation,\n  type RuntimeDataModel,\n} from '@prisma/client-common'\nexport { deserializeJsonResponse } from '@prisma/client-engine-runtime'\nexport { Debug } from '@prisma/debug'\nexport * as DMMF from '@prisma/dmmf'\nexport type { SqlDriverAdapterFactory } from '@prisma/driver-adapter-utils'\nexport { warnOnce } from '@prisma/internals'\nexport { default as Decimal } from 'decimal.js'\nexport type { RawValue, Value } from 'sql-template-tag'\nexport { empty, join, raw, Sql, default as sqltag } from 'sql-template-tag'\n", "import { defineExtension } from './defineExtension'\nimport { getExtensionContext } from './getExtensionContext'\n\nexport { defineExtension }\nexport { getExtensionContext }\n", "import { Client } from '../../getPrismaClient'\nimport { ExtensionArgs } from '../types/exported/ExtensionArgs'\n\nexport function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)) {\n  if (typeof ext === 'function') {\n    return ext\n  }\n\n  return (client: Client) => client.$extends(ext)\n}\n", "/*\n * Because we use a symbol to store the context, we need to merge the context\n * with the original this type. We manage the context via `getExtensionContext`\n * to circumvent the limitations of `this` inference in TS, while also providing\n * a unified API for context management in generic and non-generic extensions.\n */\n\n/* eslint-disable prettier/prettier */\nexport type Context<T> = T extends { [K: symbol]: { ctx: infer C } }\n  ? C &\n      T & {\n        /**\n         * @deprecated Use `$name` instead.\n         */\n        name?: string\n        $name?: string\n        $parent?: unknown\n      }\n  : T & {\n      /**\n       * @deprecated Use `$name` instead.\n       */\n      name?: string\n      $name?: string\n      $parent?: unknown\n    }\n\nexport function getExtensionContext<T>(that: T) {\n  return that as any as Context<T>\n}\n", "import { validator } from './validator'\n\n/*\n * /!\\ These exports are exposed to the user. Proceed with caution.\n *\n * TODO: Move more hardcoded utils from generation into here\n */\n\nexport { validator }\n", "import { Args, Operation } from '../types/exported/Public'\nimport { Exact } from '../types/exported/Utils'\n\nexport function validator<V>(): <S>(select: Exact<S, V>) => S\nexport function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(\n  client: C,\n  model: M,\n  operation: O,\n): <S>(select: Exact<S, Args<C[M], O>>) => S\nexport function validator<\n  C,\n  M extends Exclude<keyof C, `$${string}`>,\n  O extends keyof C[M] & Operation,\n  P extends keyof Args<C[M], O>,\n>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S\nexport function validator(..._args: any[]) {\n  return (args: any) => args\n}\n", "import { setClassName } from '@prisma/internals'\n\nexport class PrismaClientInitializationError extends Error {\n  clientVersion: string\n  errorCode?: string\n  retryable?: boolean\n\n  constructor(message: string, clientVersion: string, errorCode?: string) {\n    super(message)\n    this.name = 'PrismaClientInitializationError'\n\n    this.clientVersion = clientVersion\n    this.errorCode = errorCode\n    Error.captureStackTrace(PrismaClientInitializationError)\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientInitializationError'\n  }\n}\n\nsetClassName(PrismaClientInitializationError, 'PrismaClientInitializationError')\n", "export { checkUnsupportedDataProxy } from './cli/checkUnsupportedDataProxy'\nexport { checkUnsupportedSchemaEngineWasm } from './cli/checkUnsupportedSchemaEngineWasm'\nexport { type DirectoryConfig, inferDirectoryConfig } from './cli/directoryConfig'\nexport { getGeneratorSuccessMessage } from './cli/getGeneratorSuccessMessage'\nexport {\n  type GetSchemaOptions,\n  getSchemaWithPath,\n  getSchemaWithPathOptional,\n  printSchemaLoadedMessage,\n} from './cli/getSchema'\nexport { getTypescriptVersion } from './cli/getTypescriptVersion'\nexport { getCLIPathHash, getProjectHash } from './cli/hashes'\nexport { unknownCommand } from './cli/Help'\nexport { HelpError } from './cli/Help'\nexport { loadSchemaContext, processSchemaResult, type SchemaContext } from './cli/schemaContext'\nexport type {\n  Command,\n  Commands,\n  CompiledGeneratorDefinition,\n  Dictionary,\n  GeneratorConfig,\n  GeneratorDefinition,\n  GeneratorDefinitionWithPackage,\n  GeneratorFunction,\n  GeneratorOptions,\n} from './cli/types'\nexport { arg, format, isError } from './cli/utils'\nexport { ClientEngineType, getClientEngineType } from './client/getClientEngineType'\nexport { credentialsToUri, protocolToConnectorType, uriToCredentials } from './convertCredentials'\nexport * from './engine-commands'\nexport { resolveUrl } from './engine-commands/getConfig'\nexport { relativizePathInPSLError } from './engine-commands/relativizePathInPSLError'\nexport { Generator } from './Generator'\nexport {\n  type GeneratorRegistry,\n  type GeneratorRegistryEntry,\n  getGenerator,\n  getGenerators,\n} from './get-generators/getGenerators'\nexport { fixBinaryTargets } from './get-generators/utils/fixBinaryTargets'\nexport { printGeneratorConfig } from './get-generators/utils/printGeneratorConfig'\nexport { getPackedPackage } from './getPackedPackage'\nexport { highlightDatamodel, highlightSql, highlightTS } from './highlight/highlight'\nexport * as logger from './logger'\nexport type { MigrateTypes } from './migrateTypes'\nexport { ErrorArea, getWasmError, isRustPanic, isWasmPanic, RustPanic } from './panic'\nexport { BinaryType } from './resolveBinary'\nexport { engineEnvVarMap, resolveBinary } from './resolveBinary'\nexport { resolvePkg } from './resolvePkg'\nexport type { SchemaEngineLogLine } from './schemaEngineCommands'\nexport { canConnectToDatabase, createDatabase, dropDatabase } from './schemaEngineCommands'\nexport { SchemaEngineExitCode } from './schemaEngineCommands'\nexport { sendPanic } from './sendPanic'\nexport * from './tracing/types'\nexport type { DatabaseCredentials } from './types'\nexport { assertAlways } from './utils/assertAlways'\nexport { assertNever } from './utils/assertNever'\nexport { binaryTargetRegex } from './utils/binaryTargetRegex'\nexport { default as byline } from './utils/byline'\nexport { callOnceOnSuccess } from './utils/callOnce'\nexport { canPrompt } from './utils/canPrompt'\nexport { chmodPlusX } from './utils/chmodPlusX'\nexport { locateLocalCloudflareD1 } from './utils/cloudflareD1'\nexport { drawBox } from './utils/drawBox'\nexport { extractPreviewFeatures } from './utils/extractPreviewFeatures'\nexport { formatms } from './utils/formatms'\nexport { formatTable } from './utils/formatTable'\nexport * as fsFunctional from './utils/fs-functional'\nexport * as fsUtils from './utils/fs-utils'\nexport { getCommandWithExecutor } from './utils/getCommandWithExecutor'\nexport { getEnvPaths } from './utils/getEnvPaths'\nexport { getMigrateConfigDir } from './utils/getMigrateConfigDir'\nexport { version } from './utils/getVersionFromPackageJson'\nexport { handleLibraryLoadingErrors } from './utils/handleEngineLoadingErrors'\nexport { handlePanic } from './utils/handlePanic'\nexport { hasOwnProperty } from './utils/hasOwnProperty'\nexport { isCi } from './utils/isCi'\nexport { isCurrentBinInstalledGlobally } from './utils/isCurrentBinInstalledGlobally'\nexport { isInContainer } from './utils/isInContainer'\nexport { isInNpmLifecycleHook } from './utils/isInNpmLifecycleHook'\nexport { isInteractive } from './utils/isInteractive'\nexport { isPromiseLike } from './utils/isPromiseLike'\nexport { isValidJsIdentifier } from './utils/isValidJsIdentifier'\nexport { keyBy } from './utils/keyBy'\nexport { link } from './utils/link'\nexport { loadLibrary as load } from './utils/load'\nexport { loadEnvFile } from './utils/loadEnvFile'\nexport { mapObjectValues } from './utils/mapObjectValues'\nexport { maskSchema } from './utils/maskSchema'\nexport { maxBy, maxWithComparator } from './utils/max'\nexport { maybeInGitHook } from './utils/maybeInGitHook'\nexport { missingGeneratorMessage } from './utils/missingGeneratorMessage'\nexport { parseAWSNodejsRuntimeEnvVarVersion } from './utils/parseAWSNodejsRuntimeEnvVarVersion'\nexport { parseBinaryTargetsEnvValue, parseEnvValue } from './utils/parseEnvValue'\nexport { longestCommonPathPrefix, pathToPosix } from './utils/path'\nexport { pick } from './utils/pick'\nexport { printConfigWarnings } from './utils/printConfigWarnings'\nexport {\n  isPrismaPostgres,\n  isPrismaPostgresDev,\n  PRISMA_POSTGRES_PROTOCOL,\n  PRISMA_POSTGRES_PROVIDER,\n} from './utils/prismaPostgres'\nexport { extractSchemaContent, type SchemaFileInput } from './utils/schemaFileInput'\nexport { type MultipleSchemas } from './utils/schemaFileInput'\nexport { serializeQueryEngineName } from './utils/serializeQueryEngineName'\nexport { setClassName } from './utils/setClassName'\nexport { toSchemasContainer, toSchemasWithConfigDir } from './utils/toSchemasContainer'\nexport { type LoadedEnv, tryLoadEnvs } from './utils/tryLoadEnvs'\nexport { vercelPkgPathRegex } from './utils/vercelPkgPathRegex'\nexport { warnOnce } from './warnOnce'\nexport * as wasm from './wasm'\nexport { wasmSchemaEngineLoader } from './WasmSchemaEngineLoader'\nexport type { EnvPaths } from '@prisma/generator'\nexport type { BinaryTarget } from '@prisma/get-platform'\nexport { getBinaryTargetForCurrentPlatform, getNodeAPIName } from '@prisma/get-platform'\nexport type { GetSchemaResult } from '@prisma/schema-files-loader'\n", "let FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nexport const $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t)\n}\n\nfunction init(x, y) {\n\tlet rgx = new RegExp(`\\\\x1b\\\\[${y}m`, 'g');\n\tlet open = `\\x1b[${x}m`, close = `\\x1b[${y}m`;\n\n\treturn function (txt) {\n\t\tif (!$.enabled || txt == null) return txt;\n\t\treturn open + (!!~(''+txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n\t};\n}\n\n// modifiers\nexport const reset = init(0, 0);\nexport const bold = init(1, 22);\nexport const dim = init(2, 22);\nexport const italic = init(3, 23);\nexport const underline = init(4, 24);\nexport const inverse = init(7, 27);\nexport const hidden = init(8, 28);\nexport const strikethrough = init(9, 29);\n\n// colors\nexport const black = init(30, 39);\nexport const red = init(31, 39);\nexport const green = init(32, 39);\nexport const yellow = init(33, 39);\nexport const blue = init(34, 39);\nexport const magenta = init(35, 39);\nexport const cyan = init(36, 39);\nexport const white = init(37, 39);\nexport const gray = init(90, 39);\nexport const grey = init(90, 39);\n\n// background colors\nexport const bgBlack = init(40, 49);\nexport const bgRed = init(41, 49);\nexport const bgGreen = init(42, 49);\nexport const bgYellow = init(43, 49);\nexport const bgBlue = init(44, 49);\nexport const bgMagenta = init(45, 49);\nexport const bgCyan = init(46, 49);\nexport const bgWhite = init(47, 49);\n", "import * as kleur from 'kleur/colors'\nimport { bold } from 'kleur/colors'\n\nconst MAX_ARGS_HISTORY = 100\nconst COLORS = ['green', 'yellow', 'blue', 'magenta', 'cyan', 'red']\n\nconst argsHistory: [namespace: string, ...unknown[]][] = []\nlet lastTimestamp = Date.now()\nlet lastColor = 0\n\nconst processEnv = typeof process !== 'undefined' ? process.env : {}\n\nglobalThis.DEBUG ??= processEnv.DEBUG ?? ''\nglobalThis.DEBUG_COLORS ??= processEnv.DEBUG_COLORS ? processEnv.DEBUG_COLORS === 'true' : true\n\n/**\n * Top-level utilities to configure the debug module.\n *\n * @example\n * ```ts\n * import Debug from '@prisma/debug'\n * Debug.enable('prisma:client')\n * const debug = Debug('prisma:client')\n * debug('Hello World')\n * ```\n */\nconst topProps = {\n  enable(namespace: any) {\n    if (typeof namespace === 'string') {\n      globalThis.DEBUG = namespace\n    }\n  },\n  disable() {\n    const prev = globalThis.DEBUG\n    globalThis.DEBUG = ''\n    return prev\n  },\n  // this is the core logic to check if logging should happen or not\n  enabled(namespace: string) {\n    // these are the namespaces that we are listening to in DEBUG=...\n    const listenedNamespaces: string[] = globalThis.DEBUG.split(',').map((s: string) => {\n      return s.replace(/[.+?^${}()|[\\]\\\\]/g, '\\\\$&') // escape regex except \"*\"\n    })\n\n    // we take incoming namespaces and check then against listened\n    const isListened = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === '' || listenedNamespace[0] === '-') return false\n\n      return namespace.match(RegExp(listenedNamespace.split('*').join('.*') + '$'))\n    })\n\n    // we take incoming namespaces and check then against excluded\n    const isExcluded = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === '' || listenedNamespace[0] !== '-') return false\n\n      return namespace.match(RegExp(listenedNamespace.slice(1).split('*').join('.*') + '$'))\n    })\n\n    return isListened && !isExcluded\n  },\n  log: (...args: string[]) => {\n    const [namespace, format, ...rest] = args\n    // Note: `console.warn` / `console.log` use `util.format` internally, so they can handle\n    // `printf`-style string interpolation.\n    const logWithFormatting = console.warn ?? console.log\n\n    // console only formats first arg, concat ns+format\n    logWithFormatting(`${namespace} ${format}`, ...rest)\n  },\n  formatters: {}, // not implemented\n}\n\n/**\n * Create a new debug instance with the given namespace.\n *\n * @example\n * ```ts\n * import Debug from '@prisma/debug'\n * const debug = Debug('prisma:client')\n * debug('Hello World')\n * ```\n */\nfunction debugCreate(namespace: string) {\n  const instanceProps = {\n    color: COLORS[lastColor++ % COLORS.length],\n    enabled: topProps.enabled(namespace),\n    namespace: namespace,\n    log: topProps.log,\n    extend: () => {}, // not implemented\n  }\n\n  const debugCall = (...args: any[]) => {\n    const { enabled, namespace, color, log } = instanceProps\n\n    // we push the args to our history of args\n    if (args.length !== 0) {\n      argsHistory.push([namespace, ...args])\n    }\n\n    // if it is too big, then we remove some\n    if (argsHistory.length > MAX_ARGS_HISTORY) {\n      argsHistory.shift()\n    }\n\n    if (topProps.enabled(namespace) || enabled) {\n      const stringArgs = args.map((arg) => {\n        if (typeof arg === 'string') {\n          return arg\n        }\n\n        return safeStringify(arg)\n      })\n\n      const ms = `+${Date.now() - lastTimestamp}ms`\n      lastTimestamp = Date.now()\n\n      if (globalThis.DEBUG_COLORS) {\n        log(kleur[color](bold(namespace)), ...stringArgs, kleur[color](ms))\n      } else {\n        log(namespace, ...stringArgs, ms)\n      }\n    }\n  }\n\n  return new Proxy(debugCall, {\n    get: (_, prop) => instanceProps[prop],\n    set: (_, prop, value) => (instanceProps[prop] = value),\n  }) as typeof debugCall & typeof instanceProps\n}\n\nconst Debug = new Proxy(debugCreate, {\n  get: (_, prop) => topProps[prop],\n  set: (_, prop, value) => (topProps[prop] = value),\n}) as typeof debugCreate & typeof topProps\n\nfunction safeStringify(value: any, indent = 2) {\n  const cache = new Set<any>()\n\n  return JSON.stringify(\n    value,\n    (key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.has(value)) {\n          return `[Circular *]`\n        }\n\n        cache.add(value)\n      } else if (typeof value === 'bigint') {\n        return value.toString()\n      }\n\n      return value\n    },\n    indent,\n  )\n}\n\n/**\n * We can get the logs for all the last {@link MAX_ARGS_HISTORY} ${@link debugCall} that\n * have happened in the different packages. Useful to generate error report links.\n * @see https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\n * @param numChars\n * @returns\n */\nexport function getLogs(numChars = 7500): string {\n  const logs = argsHistory\n    .map(([namespace, ...args]) => {\n      return `${namespace} ${args\n        .map((arg) => {\n          if (typeof arg === 'string') {\n            return arg\n          } else {\n            return JSON.stringify(arg)\n          }\n        })\n        .join(' ')}`\n    })\n    .join('\\n')\n\n  if (logs.length < numChars) {\n    return logs\n  }\n\n  return logs.slice(-numChars)\n}\n\nexport function clearLogs() {\n  argsHistory.length = 0\n}\n\nexport { Debug }\nexport default Debug\n", "export { assertNodeAPISupported } from './assertNodeAPISupported'\nexport { type BinaryTarget, binaryTargets } from './binaryTargets'\nexport { getNodeAPIName } from './getNodeAPIName'\nexport type { PlatformInfo } from './getPlatform'\nexport { getBinaryTargetForCurrentPlatform, getos, getPlatformInfo } from './getPlatform'\nexport { link } from './link'\nexport * from './test-utils'\n", "export type BinaryTarget =\n  | 'native'\n  | 'darwin'\n  | 'darwin-arm64'\n  | 'debian-openssl-1.0.x'\n  | 'debian-openssl-1.1.x'\n  | 'debian-openssl-3.0.x'\n  | 'rhel-openssl-1.0.x'\n  | 'rhel-openssl-1.1.x'\n  | 'rhel-openssl-3.0.x'\n  | 'linux-arm64-openssl-1.1.x'\n  | 'linux-arm64-openssl-1.0.x'\n  | 'linux-arm64-openssl-3.0.x'\n  | 'linux-arm-openssl-1.1.x'\n  | 'linux-arm-openssl-1.0.x'\n  | 'linux-arm-openssl-3.0.x'\n  | 'linux-musl'\n  | 'linux-musl-openssl-3.0.x'\n  | 'linux-musl-arm64-openssl-1.1.x'\n  | 'linux-musl-arm64-openssl-3.0.x'\n  | 'linux-nixos'\n  | 'linux-static-x64'\n  | 'linux-static-arm64'\n  | 'windows'\n  | 'freebsd11'\n  | 'freebsd12'\n  | 'freebsd13'\n  | 'freebsd14'\n  | 'freebsd15'\n  | 'openbsd'\n  | 'netbsd'\n  | 'arm'\n\nexport const binaryTargets: BinaryTarget[] = [\n  'darwin',\n  'darwin-arm64',\n  'debian-openssl-1.0.x',\n  'debian-openssl-1.1.x',\n  'debian-openssl-3.0.x',\n  'rhel-openssl-1.0.x',\n  'rhel-openssl-1.1.x',\n  'rhel-openssl-3.0.x',\n  'linux-arm64-openssl-1.1.x',\n  'linux-arm64-openssl-1.0.x',\n  'linux-arm64-openssl-3.0.x',\n  'linux-arm-openssl-1.1.x',\n  'linux-arm-openssl-1.0.x',\n  'linux-arm-openssl-3.0.x',\n  'linux-musl',\n  'linux-musl-openssl-3.0.x',\n  'linux-musl-arm64-openssl-1.1.x',\n  'linux-musl-arm64-openssl-3.0.x',\n  'linux-nixos',\n  'linux-static-x64',\n  'linux-static-arm64',\n  'windows',\n  'freebsd11',\n  'freebsd12',\n  'freebsd13',\n  'freebsd14',\n  'freebsd15',\n  'openbsd',\n  'netbsd',\n  'arm',\n]\n", "// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst packageJson = require('../../package.json')\n\nexport const version: string = packageJson.version\n", "import type { GeneratorConfig } from '@prisma/generator'\n\nexport enum ClientEngineType {\n  Library = 'library',\n  Binary = 'binary',\n  Client = 'client',\n}\n\nexport function getClientEngineType(generatorConfig?: GeneratorConfig): ClientEngineType {\n  const engineTypeFromEnvVar = getEngineTypeFromEnvVar()\n  if (engineTypeFromEnvVar) return engineTypeFromEnvVar\n  if (generatorConfig?.config.engineType === ClientEngineType.Library) {\n    return ClientEngineType.Library\n  } else if (generatorConfig?.config.engineType === ClientEngineType.Binary) {\n    return ClientEngineType.Binary\n  } else if (generatorConfig?.config.engineType === ClientEngineType.Client) {\n    return ClientEngineType.Client\n  } else {\n    return getDefaultEngineType(generatorConfig)\n  }\n}\n\nfunction getEngineTypeFromEnvVar() {\n  const engineType = process.env.PRISMA_CLIENT_ENGINE_TYPE\n  if (engineType === ClientEngineType.Library) {\n    return ClientEngineType.Library\n  } else if (engineType === ClientEngineType.Binary) {\n    return ClientEngineType.Binary\n  } else if (engineType === ClientEngineType.Client) {\n    return ClientEngineType.Client\n  } else {\n    return undefined\n  }\n}\n\nfunction getDefaultEngineType(generatorConfig?: GeneratorConfig): ClientEngineType {\n  if (generatorConfig?.previewFeatures.includes('queryCompiler')) {\n    return ClientEngineType.Client\n  }\n  return ClientEngineType.Library\n}\n", "export { bindAdapter, bindMigrationAwareSqlAdapterFactory, bindSqlAdapterFactory } from './binder'\nexport { ColumnTypeEnum } from './const'\nexport { Debug } from './debug'\nexport { DriverAdapterError, isDriverAdapterError } from './error'\nexport * from './mock'\nexport { err, ok, type Result } from './result'\nexport type {\n  ArgScalarType,\n  ArgType,\n  Arity,\n  ColumnType,\n  ConnectionInfo,\n  DriverAdapterFactory,\n  Error,\n  ErrorCapturingSqlDriverAdapter,\n  ErrorCapturingSqlDriverAdapterFactory,\n  ErrorCapturingSqlMigrationAwareDriverAdapterFactory,\n  ErrorCapturingSqlQueryable,\n  ErrorCapturingTransaction,\n  ErrorRecord,\n  ErrorRegistry,\n  IsolationLevel,\n  MappedError,\n  OfficialDriverAdapterName,\n  Provider,\n  Queryable,\n  ResultValue,\n  SqlDriverAdapter,\n  SqlDriverAdapterFactory,\n  SqlMigrationAwareDriverAdapterFactory,\n  SqlQuery,\n  SqlQueryable,\n  SqlResultSet,\n  Transaction,\n  TransactionOptions,\n} from './types'\n", "import { Debug } from './debug'\nimport { isDriverAdapterError } from './error'\nimport { err, ok, Result } from './result'\nimport type {\n  ErrorCapturingSqlDriverAdapter,\n  ErrorCapturingSqlDriverAdapterFactory,\n  ErrorCapturingSqlMigrationAwareDriverAdapterFactory,\n  ErrorCapturingTransaction,\n  ErrorRecord,\n  ErrorRegistry,\n  SqlDriverAdapter,\n  SqlDriverAdapterFactory,\n  SqlMigrationAwareDriverAdapterFactory,\n  Transaction,\n} from './types'\n\nconst debug = Debug('driver-adapter-utils')\n\nclass ErrorRegistryInternal implements ErrorRegistry {\n  private registeredErrors: ErrorRecord[] = []\n\n  consumeError(id: number): ErrorRecord | undefined {\n    return this.registeredErrors[id]\n  }\n\n  registerNewError(error: unknown) {\n    let i = 0\n    while (this.registeredErrors[i] !== undefined) {\n      i++\n    }\n    this.registeredErrors[i] = { error }\n    return i\n  }\n}\n\nexport const bindMigrationAwareSqlAdapterFactory = (\n  adapterFactory: SqlMigrationAwareDriverAdapterFactory,\n): ErrorCapturingSqlMigrationAwareDriverAdapterFactory => {\n  const errorRegistry = new ErrorRegistryInternal()\n\n  const boundFactory: ErrorCapturingSqlMigrationAwareDriverAdapterFactory = {\n    adapterName: adapterFactory.adapterName,\n    provider: adapterFactory.provider,\n    errorRegistry,\n    connect: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapterFactory.connect.bind(adapterFactory))(...args)\n      return ctx.map((ctx) => bindAdapter(ctx, errorRegistry))\n    },\n    connectToShadowDb: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapterFactory.connectToShadowDb.bind(adapterFactory))(...args)\n      return ctx.map((ctx) => bindAdapter(ctx, errorRegistry))\n    },\n  }\n\n  return boundFactory\n}\n\nexport const bindSqlAdapterFactory = (\n  adapterFactory: SqlDriverAdapterFactory,\n): ErrorCapturingSqlDriverAdapterFactory => {\n  const errorRegistry = new ErrorRegistryInternal()\n\n  const boundFactory: ErrorCapturingSqlDriverAdapterFactory = {\n    adapterName: adapterFactory.adapterName,\n    provider: adapterFactory.provider,\n    errorRegistry,\n    connect: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapterFactory.connect.bind(adapterFactory))(...args)\n      return ctx.map((ctx) => bindAdapter(ctx, errorRegistry))\n    },\n  }\n\n  return boundFactory\n}\n\n// *.bind(adapter) is required to preserve the `this` context of functions whose\n// execution is delegated to napi.rs.\nexport const bindAdapter = (\n  adapter: SqlDriverAdapter,\n  errorRegistry = new ErrorRegistryInternal(),\n): ErrorCapturingSqlDriverAdapter => {\n  const boundAdapter: ErrorCapturingSqlDriverAdapter = {\n    adapterName: adapter.adapterName,\n    errorRegistry,\n    queryRaw: wrapAsync(errorRegistry, adapter.queryRaw.bind(adapter)),\n    executeRaw: wrapAsync(errorRegistry, adapter.executeRaw.bind(adapter)),\n    executeScript: wrapAsync(errorRegistry, adapter.executeScript.bind(adapter)),\n    dispose: wrapAsync(errorRegistry, adapter.dispose.bind(adapter)),\n    provider: adapter.provider,\n    startTransaction: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapter.startTransaction.bind(adapter))(...args)\n      return ctx.map((ctx) => bindTransaction(errorRegistry, ctx))\n    },\n  }\n\n  if (adapter.getConnectionInfo) {\n    boundAdapter.getConnectionInfo = wrapSync(errorRegistry, adapter.getConnectionInfo.bind(adapter))\n  }\n\n  return boundAdapter\n}\n\n// *.bind(transaction) is required to preserve the `this` context of functions whose\n// execution is delegated to napi.rs.\nconst bindTransaction = (errorRegistry: ErrorRegistryInternal, transaction: Transaction): ErrorCapturingTransaction => {\n  return {\n    adapterName: transaction.adapterName,\n    provider: transaction.provider,\n    options: transaction.options,\n    queryRaw: wrapAsync(errorRegistry, transaction.queryRaw.bind(transaction)),\n    executeRaw: wrapAsync(errorRegistry, transaction.executeRaw.bind(transaction)),\n    commit: wrapAsync(errorRegistry, transaction.commit.bind(transaction)),\n    rollback: wrapAsync(errorRegistry, transaction.rollback.bind(transaction)),\n  }\n}\n\nfunction wrapAsync<A extends unknown[], R>(\n  registry: ErrorRegistryInternal,\n  fn: (...args: A) => Promise<R>,\n): (...args: A) => Promise<Result<R>> {\n  return async (...args) => {\n    try {\n      return ok(await fn(...args))\n    } catch (error) {\n      debug('[error@wrapAsync]', error)\n\n      // unwrap the cause of exceptions thrown by driver adapters if there is one\n      if (isDriverAdapterError(error)) {\n        return err(error.cause)\n      }\n      const id = registry.registerNewError(error)\n      return err({ kind: 'GenericJs', id })\n    }\n  }\n}\n\nfunction wrapSync<A extends unknown[], R>(\n  registry: ErrorRegistryInternal,\n  fn: (...args: A) => R,\n): (...args: A) => Result<R> {\n  return (...args) => {\n    try {\n      return ok(fn(...args))\n    } catch (error) {\n      debug('[error@wrapSync]', error)\n\n      // unwrap the cause of exceptions thrown by driver adapters if there is one\n      if (isDriverAdapterError(error)) {\n        return err(error.cause)\n      }\n      const id = registry.registerNewError(error)\n      return err({ kind: 'GenericJs', id })\n    }\n  }\n}\n", "import { Debug } from '@prisma/debug'\n\nexport { Debug }\nexport default Debug\n", "import { Error as ErrorObject } from './types'\n\nexport class DriverAdapterError extends Error {\n  name = 'DriverAdapterError'\n  cause: ErrorObject\n\n  constructor(payload: ErrorObject) {\n    super(typeof payload['message'] === 'string' ? payload['message'] : payload.kind)\n    this.cause = payload\n  }\n}\n\nexport function isDriverAdapterError(error: any): error is DriverAdapterError {\n  return error['name'] === 'DriverAdapterError' && typeof error['cause'] === 'object'\n}\n", "import { Error } from './types'\n\nexport type Result<T> = {\n  // common methods\n  map<U>(fn: (value: T) => U): Result<U>\n  flatMap<U>(fn: (value: T) => Result<U>): Result<U>\n} & (\n  | {\n      readonly ok: true\n      readonly value: T\n    }\n  | {\n      readonly ok: false\n      readonly error: Error\n    }\n)\n\nexport function ok<T>(value: T): Result<T> {\n  return {\n    ok: true,\n    value,\n    map(fn) {\n      return ok(fn(value))\n    },\n    flatMap(fn) {\n      return fn(value)\n    },\n  }\n}\n\nexport function err<T>(error: Error): Result<T> {\n  return {\n    ok: false,\n    error,\n    map() {\n      return err(error)\n    },\n    flatMap() {\n      return err(error)\n    },\n  }\n}\n", "export const PRISMA_POSTGRES_PROVIDER = 'prisma+postgres'\n\nexport const PRISMA_POSTGRES_PROTOCOL = `${PRISMA_POSTGRES_PROVIDER}:`\n\ndeclare const prismaPostgresBrand: unique symbol\ndeclare const prismaPostgresDevBrand: unique symbol\n\nexport type PrismaPostgresUrl<T extends string | URL> = T & {\n  readonly [prismaPostgresBrand]: true\n}\n\nexport type PrismaPostgresDevUrl<T extends string | URL> = PrismaPostgresUrl<T> & {\n  readonly [prismaPostgresDevBrand]: true\n}\n\nexport function isPrismaPostgres<T extends string | URL>(\n  connectionString?: T,\n): connectionString is PrismaPostgresUrl<T> {\n  return connectionString?.toString().startsWith(`${PRISMA_POSTGRES_PROTOCOL}//`) ?? false\n}\n\nexport function isPrismaPostgresDev<T extends string | URL>(\n  connectionString?: T,\n): connectionString is PrismaPostgresDevUrl<T> {\n  if (!isPrismaPostgres(connectionString)) {\n    return false\n  }\n\n  const { host } = new URL(connectionString)\n\n  return host.includes('localhost') || host.includes('127.0.0.1') || host.includes('[::1]')\n}\n", "import { blue, cyan, red, yellow } from 'kleur/colors'\n\nexport const tags = {\n  error: red('prisma:error'),\n  warn: yellow('prisma:warn'),\n  info: cyan('prisma:info'),\n  query: blue('prisma:query'),\n}\nexport const should = {\n  warn: () => !process.env.PRISMA_DISABLE_WARNINGS,\n}\nexport function log(...data: any[]) {\n  console.log(...data)\n}\nexport function warn(message: any, ...optionalParams: any[]) {\n  if (should.warn()) {\n    console.warn(`${tags.warn} ${message}`, ...optionalParams)\n  }\n}\nexport function info(message: any, ...optionalParams: any[]) {\n  console.info(`${tags.info} ${message}`, ...optionalParams)\n}\nexport function error(message: any, ...optionalParams: any[]) {\n  console.error(`${tags.error} ${message}`, ...optionalParams)\n}\nexport function query(message: any, ...optionalParams: any[]) {\n  console.log(`${tags.query} ${message}`, ...optionalParams)\n}\n", "/**\n * Assertion function for internal consistency checks that should never fail\n * in the correct code. It's purpose is pretty much:\n * - ensuring we get more helpful error message if invariant does not hold due to a bug\n * - have a better way of dealing with overly broad type definition than typecasting to `any`\n * or more narrow type.\n *\n * This function should be for assertions only on the values where we control both the input and the output: engine to client, generator to generated client, etc.\n * Don't use this function for assertion for any external input.\n *\n * @param condition\n * @param message\n */\nexport function assertAlways(condition: unknown, message: string): asserts condition {\n  if (!condition) {\n    throw new Error(\n      `${message}. This should never happen. If you see this error, please, open an issue at https://pris.ly/prisma-prisma-bug-report`,\n    )\n  }\n}\n", "/**\n * Utility function to ensure exhaustive checks for union types.\n *\n * @example\n *   ```ts\n *   declare const fruit: 'Apple' | 'Orange'\n *\n *   switch (fruit) {\n *     case 'Apple:\n *       // do apple things\n *       break;\n *     case 'Orange:\n *       // do orange things\n *       break;\n *     default:\n *       // in case `fruit` type will expand in the future,\n *       // we'll get a compile-time error here, listing all unhandled\n *       // cases\n *       assertNever(fruit, 'Unknown fruit')\n *   }\n *   ```\n * @param arg variable of the any union type. By the time `assertNever` is called\n * all possible cases of this union must already be handled\n * @param errorMessage error message to throw in runtime. Normally, should never happen\n * unless compile-time check is skipped\n */\nexport function assertNever(arg: never, errorMessage: string): never {\n  throw new Error(errorMessage)\n}\n", "export function hasOwnProperty(object: object, key: PropertyKey): boolean {\n  return Object.prototype.hasOwnProperty.call(object, key)\n}\n", "export function mapObjectValues<K extends PropertyKey, T, U>(\n  object: Record<K, T>,\n  mapper: (value: T, key: K) => U,\n): Record<K, U> {\n  const result = {} as Record<K, U>\n\n  for (const key of Object.keys(object)) {\n    result[key] = mapper(object[key] as T, key as K)\n  }\n\n  return result\n}\n", "/**\n * Accepts an array and comparator function (similar to Array.prototype.sort)\n * and returns max element of that array, ordered with that comparator.\n * Functionally, equivalent of items.sort(comparator).at(-1), but performed non-destructively\n * in O(n)\n * @param items\n * @param comparator callback specifying the relative order of two items. See `Array.prototype.sort`\n * @returns\n */\nexport function maxWithComparator<T>(items: T[], comparator: (a: T, b: T) => number): T | undefined {\n  if (items.length === 0) {\n    return undefined\n  }\n  let result = items[0]\n\n  for (let i = 1; i < items.length; i++) {\n    const compareValue = comparator(result, items[i])\n    // comparator returning negative number means that b>a\n    if (compareValue < 0) {\n      result = items[i]\n    }\n  }\n  return result\n}\n\nexport function maxBy<T>(items: T[], callback: (item: T) => number): T | undefined {\n  return maxWithComparator(items, (a, b) => callback(a) - callback(b))\n}\n", "/**\n * Used for preserving class names for minified class instances\n * Useful for error objects and other classes where public name\n * actually matters\n *\n * @param classObject\n * @param name\n */\nexport function setClassName(classObject: Function, name: string) {\n  Object.defineProperty(classObject, 'name', {\n    value: name,\n    configurable: true,\n  })\n}\n", "import { warn } from './logger'\n\nconst alreadyWarned = new Set()\n\nexport const warnOnce = (key: string, message: string, ...args: unknown[]) => {\n  if (!alreadyWarned.has(key)) {\n    alreadyWarned.add(key)\n    warn(message, ...args)\n  }\n}\n", "import { setClassName } from '@prisma/internals'\n\nimport { ErrorWithBatchIndex } from './ErrorWithBatchIndex'\n\ntype KnownErrorParams = {\n  code: string\n  clientVersion: string\n  meta?: Record<string, unknown>\n  batchRequestIdx?: number\n}\n\nexport class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\n  code: string\n  meta?: Record<string, unknown>\n  clientVersion: string\n  batchRequestIdx?: number\n\n  constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams) {\n    super(message)\n    this.name = 'PrismaClientKnownRequestError'\n\n    this.code = code\n    this.clientVersion = clientVersion\n    this.meta = meta\n    Object.defineProperty(this, 'batchRequestIdx', {\n      value: batchRequestIdx,\n      enumerable: false,\n      writable: true,\n    })\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientKnownRequestError'\n  }\n}\n\nsetClassName(PrismaClientKnownRequestError, 'PrismaClientKnownRequestError')\n", "import { setClassName } from '@prisma/internals'\n\nexport class PrismaClientRustPanicError extends Error {\n  clientVersion: string\n\n  constructor(message: string, clientVersion: string) {\n    super(message)\n    this.name = 'PrismaClientRustPanicError'\n\n    this.clientVersion = clientVersion\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientRustPanicError'\n  }\n}\n\nsetClassName(PrismaClientRustPanicError, 'PrismaClientRustPanicError')\n", "import { setClassName } from '@prisma/internals'\n\nimport { ErrorWithBatchIndex } from './ErrorWithBatchIndex'\n\ntype UnknownErrorParams = {\n  clientVersion: string\n  batchRequestIdx?: number\n}\n\nexport class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\n  clientVersion: string\n  batchRequestIdx?: number\n\n  constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams) {\n    super(message)\n    this.name = 'PrismaClientUnknownRequestError'\n\n    this.clientVersion = clientVersion\n    Object.defineProperty(this, 'batchRequestIdx', {\n      value: batchRequestIdx,\n      writable: true,\n      enumerable: false,\n    })\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientUnknownRequestError'\n  }\n}\n\nsetClassName(PrismaClientUnknownRequestError, 'PrismaClientUnknownRequestError')\n", "import { setClassName } from '@prisma/internals'\n\ntype Options = {\n  clientVersion: string\n}\nexport class PrismaClientValidationError extends Error {\n  name = 'PrismaClientValidationError'\n  clientVersion: string\n\n  constructor(message: string, { clientVersion }: Options) {\n    super(message)\n    this.clientVersion = clientVersion\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientValidationError'\n  }\n}\nsetClassName(PrismaClientValidationError, 'PrismaClientValidationError')\n", "import { RuntimeDataModel, RuntimeModel, uncapitalize } from '@prisma/client-common'\nimport { assertNever } from '@prisma/internals'\n\nimport { ErrorFormat } from '../../getPrismaClient'\nimport { CallSite } from '../../utils/CallSite'\nimport { isDate, isValidDate } from '../../utils/date'\nimport { isDecimalJsLike } from '../../utils/decimalJsLike'\nimport {\n  JsonArgumentValue,\n  JsonFieldSelection,\n  JsonQuery,\n  JsonQueryAction,\n  JsonSelectionSet,\n  OutputTypeDescription,\n  RawTaggedValue,\n} from '../engines'\nimport { throwValidationException } from '../errorRendering/throwValidationException'\nimport { MergedExtensionsList } from '../extensions/MergedExtensionsList'\nimport { computeEngineSideOmissions, computeEngineSideSelection } from '../extensions/resultUtils'\nimport { isFieldRef } from '../model/FieldRef'\nimport { isParam } from '../model/Param'\nimport { isSkip, Skip } from '../types'\nimport {\n  Action,\n  JsArgs,\n  JsInputValue,\n  JsonConvertible,\n  Omission,\n  RawParameters,\n  Selection,\n} from '../types/exported/JsApi'\nimport { ObjectEnumValue, objectEnumValues } from '../types/exported/ObjectEnums'\nimport { ValidationError } from '../types/ValidationError'\n\nconst jsActionToProtocolAction: Record<Action, JsonQueryAction> = {\n  findUnique: 'findUnique',\n  findUniqueOrThrow: 'findUniqueOrThrow',\n  findFirst: 'findFirst',\n  findFirstOrThrow: 'findFirstOrThrow',\n  findMany: 'findMany',\n  count: 'aggregate',\n  create: 'createOne',\n  createMany: 'createMany',\n  createManyAndReturn: 'createManyAndReturn',\n  update: 'updateOne',\n  updateMany: 'updateMany',\n  updateManyAndReturn: 'updateManyAndReturn',\n  upsert: 'upsertOne',\n  delete: 'deleteOne',\n  deleteMany: 'deleteMany',\n  executeRaw: 'executeRaw',\n  queryRaw: 'queryRaw',\n  aggregate: 'aggregate',\n  groupBy: 'groupBy',\n  runCommandRaw: 'runCommandRaw',\n  findRaw: 'findRaw',\n  aggregateRaw: 'aggregateRaw',\n}\n\nexport type GlobalOmitOptions = {\n  [modelName: string]: {\n    [fieldName: string]: boolean\n  }\n}\n\nexport type SerializeParams = {\n  runtimeDataModel: RuntimeDataModel\n  modelName?: string\n  action: Action\n  args?: JsArgs\n  extensions?: MergedExtensionsList\n  callsite?: CallSite\n  clientMethod: string\n  clientVersion: string\n  errorFormat: ErrorFormat\n  previewFeatures: string[]\n  globalOmit?: GlobalOmitOptions\n}\n\nconst STRICT_UNDEFINED_ERROR_MESSAGE = 'explicitly `undefined` values are not allowed'\n\nexport function serializeJsonQuery({\n  modelName,\n  action,\n  args,\n  runtimeDataModel,\n  extensions = MergedExtensionsList.empty(),\n  callsite,\n  clientMethod,\n  errorFormat,\n  clientVersion,\n  previewFeatures,\n  globalOmit,\n}: SerializeParams): JsonQuery {\n  const context = new SerializeContext({\n    runtimeDataModel,\n    modelName,\n    action,\n    rootArgs: args,\n    callsite,\n    extensions,\n    selectionPath: [],\n    argumentPath: [],\n    originalMethod: clientMethod,\n    errorFormat,\n    clientVersion,\n    previewFeatures,\n    globalOmit,\n  })\n  return {\n    modelName,\n    action: jsActionToProtocolAction[action],\n    query: serializeFieldSelection(args, context),\n  }\n}\n\nfunction serializeFieldSelection(\n  { select, include, ...args }: JsArgs = {},\n  context: SerializeContext,\n): JsonFieldSelection {\n  const omit = args.omit\n  delete args.omit\n  return {\n    arguments: serializeArgumentsObject(args, context),\n    selection: serializeSelectionSet(select, include, omit, context),\n  }\n}\n\nfunction serializeSelectionSet(\n  select: Selection | undefined,\n  include: Selection | undefined,\n  omit: Omission | undefined,\n  context: SerializeContext,\n): JsonSelectionSet {\n  if (select) {\n    if (include) {\n      context.throwValidationError({\n        kind: 'MutuallyExclusiveFields',\n        firstField: 'include',\n        secondField: 'select',\n        selectionPath: context.getSelectionPath(),\n      })\n    } else if (omit) {\n      context.throwValidationError({\n        kind: 'MutuallyExclusiveFields',\n        firstField: 'omit',\n        secondField: 'select',\n        selectionPath: context.getSelectionPath(),\n      })\n    }\n    return createExplicitSelection(select, context)\n  }\n\n  return createImplicitSelection(context, include, omit)\n}\n\nfunction createImplicitSelection(\n  context: SerializeContext,\n  include: Selection | undefined,\n  omit: Omission | undefined,\n) {\n  const selectionSet: JsonSelectionSet = {}\n\n  if (context.modelOrType && !context.isRawAction()) {\n    selectionSet.$composites = true\n    selectionSet.$scalars = true\n  }\n\n  if (include) {\n    addIncludedRelations(selectionSet, include, context)\n  }\n\n  omitFields(selectionSet, omit, context)\n\n  return selectionSet\n}\n\nfunction addIncludedRelations(selectionSet: JsonSelectionSet, include: Selection, context: SerializeContext) {\n  for (const [key, value] of Object.entries(include)) {\n    if (isSkip(value)) {\n      continue\n    }\n    const nestedContext = context.nestSelection(key)\n    validateSelectionForUndefined(value, nestedContext)\n    if (value === false || value === undefined) {\n      selectionSet[key] = false\n      continue\n    }\n\n    const field = context.findField(key)\n    if (field && field.kind !== 'object') {\n      context.throwValidationError({\n        kind: 'IncludeOnScalar',\n        selectionPath: context.getSelectionPath().concat(key),\n        outputType: context.getOutputTypeDescription(),\n      })\n    }\n    if (field) {\n      selectionSet[key] = serializeFieldSelection(value === true ? {} : value, nestedContext)\n      continue\n    }\n\n    if (value === true) {\n      selectionSet[key] = true\n      continue\n    }\n\n    // value is an object, field is unknown\n    // this can either be user error (in that case, qe will respond with an error)\n    // or virtual field not present on datamodel (like `_count`).\n    // Since we don't know which one cast is, we still attempt to serialize selection\n    selectionSet[key] = serializeFieldSelection(value, nestedContext)\n  }\n}\n\nfunction omitFields(selectionSet: JsonSelectionSet, localOmit: Omission | undefined, context: SerializeContext) {\n  const computedFields = context.getComputedFields()\n  const combinedOmits = { ...context.getGlobalOmit(), ...localOmit }\n  const omitWithComputedFields = computeEngineSideOmissions(combinedOmits, computedFields)\n  for (const [key, value] of Object.entries(omitWithComputedFields)) {\n    if (isSkip(value)) {\n      continue\n    }\n    validateSelectionForUndefined(value, context.nestSelection(key))\n    const field = context.findField(key)\n    if (computedFields?.[key] && !field) {\n      continue\n    }\n    selectionSet[key] = !value\n  }\n}\n\nfunction createExplicitSelection(select: Selection, context: SerializeContext) {\n  const selectionSet: JsonSelectionSet = {}\n  const computedFields = context.getComputedFields()\n  const selectWithComputedFields = computeEngineSideSelection(select, computedFields)\n\n  for (const [key, value] of Object.entries(selectWithComputedFields)) {\n    if (isSkip(value)) {\n      continue\n    }\n    const nestedContext = context.nestSelection(key)\n    validateSelectionForUndefined(value, nestedContext)\n    const field = context.findField(key)\n    if (computedFields?.[key] && !field) {\n      continue\n    }\n    if (value === false || value === undefined || isSkip(value)) {\n      selectionSet[key] = false\n      continue\n    }\n    if (value === true) {\n      if (field?.kind === 'object') {\n        selectionSet[key] = serializeFieldSelection({}, nestedContext)\n      } else {\n        selectionSet[key] = true\n      }\n      continue\n    }\n    selectionSet[key] = serializeFieldSelection(value, nestedContext)\n  }\n  return selectionSet\n}\n\nfunction serializeArgumentsValue(\n  jsValue: Exclude<JsInputValue, undefined | Skip>,\n  context: SerializeContext,\n): JsonArgumentValue {\n  if (jsValue === null) {\n    return null\n  }\n\n  if (typeof jsValue === 'string' || typeof jsValue === 'number' || typeof jsValue === 'boolean') {\n    return jsValue\n  }\n\n  if (typeof jsValue === 'bigint') {\n    return { $type: 'BigInt', value: String(jsValue) }\n  }\n\n  if (isDate(jsValue)) {\n    if (isValidDate(jsValue)) {\n      return { $type: 'DateTime', value: jsValue.toISOString() }\n    } else {\n      context.throwValidationError({\n        kind: 'InvalidArgumentValue',\n        selectionPath: context.getSelectionPath(),\n        argumentPath: context.getArgumentPath(),\n        argument: {\n          name: context.getArgumentName(),\n          typeNames: ['Date'],\n        },\n        underlyingError: 'Provided Date object is invalid',\n      })\n    }\n  }\n\n  if (isParam(jsValue)) {\n    return { $type: 'Param', value: jsValue.name }\n  }\n\n  if (isFieldRef(jsValue)) {\n    return { $type: 'FieldRef', value: { _ref: jsValue.name, _container: jsValue.modelName } }\n  }\n\n  if (Array.isArray(jsValue)) {\n    return serializeArgumentsArray(jsValue, context)\n  }\n\n  if (ArrayBuffer.isView(jsValue)) {\n    const { buffer, byteOffset, byteLength } = jsValue\n    return { $type: 'Bytes', value: Buffer.from(buffer, byteOffset, byteLength).toString('base64') }\n  }\n\n  if (isRawParameters(jsValue)) {\n    return jsValue.values\n  }\n\n  if (isDecimalJsLike(jsValue)) {\n    return { $type: 'Decimal', value: jsValue.toFixed() }\n  }\n\n  if (jsValue instanceof ObjectEnumValue) {\n    if (jsValue !== objectEnumValues.instances[jsValue._getName()]) {\n      throw new Error('Invalid ObjectEnumValue')\n    }\n    return { $type: 'Enum', value: jsValue._getName() }\n  }\n\n  if (isJSONConvertible(jsValue)) {\n    return jsValue.toJSON() as JsonArgumentValue\n  }\n\n  if (typeof jsValue === 'object') {\n    return serializeArgumentsObject(jsValue, context)\n  }\n\n  context.throwValidationError({\n    kind: 'InvalidArgumentValue',\n    selectionPath: context.getSelectionPath(),\n    argumentPath: context.getArgumentPath(),\n    argument: {\n      name: context.getArgumentName(),\n      typeNames: [],\n    },\n    underlyingError: `We could not serialize ${Object.prototype.toString.call(\n      jsValue,\n    )} value. Serialize the object to JSON or implement a \".toJSON()\" method on it`,\n  })\n}\n\nfunction serializeArgumentsObject(\n  object: Record<string, JsInputValue>,\n  context: SerializeContext,\n): Record<string, JsonArgumentValue> | RawTaggedValue {\n  if (object['$type']) {\n    return { $type: 'Raw', value: object }\n  }\n  const result: Record<string, JsonArgumentValue> = {}\n  for (const key in object) {\n    const value = object[key]\n    const nestedContext = context.nestArgument(key)\n    if (isSkip(value)) {\n      continue\n    }\n    if (value !== undefined) {\n      result[key] = serializeArgumentsValue(value, nestedContext)\n    } else if (context.isPreviewFeatureOn('strictUndefinedChecks')) {\n      context.throwValidationError({\n        kind: 'InvalidArgumentValue',\n        argumentPath: nestedContext.getArgumentPath(),\n        selectionPath: context.getSelectionPath(),\n        argument: { name: context.getArgumentName(), typeNames: [] },\n        underlyingError: STRICT_UNDEFINED_ERROR_MESSAGE,\n      })\n    }\n  }\n  return result\n}\n\nfunction serializeArgumentsArray(array: JsInputValue[], context: SerializeContext): JsonArgumentValue[] {\n  const result: JsonArgumentValue[] = []\n  for (let i = 0; i < array.length; i++) {\n    const itemContext = context.nestArgument(String(i))\n    const value = array[i]\n    if (value === undefined || isSkip(value)) {\n      const valueName = value === undefined ? 'undefined' : `Prisma.skip`\n      context.throwValidationError({\n        kind: 'InvalidArgumentValue',\n        selectionPath: itemContext.getSelectionPath(),\n        argumentPath: itemContext.getArgumentPath(),\n        argument: {\n          name: `${context.getArgumentName()}[${i}]`,\n          typeNames: [],\n        },\n        underlyingError: `Can not use \\`${valueName}\\` value within array. Use \\`null\\` or filter out \\`${valueName}\\` values`,\n      })\n    }\n    result.push(serializeArgumentsValue(value, itemContext))\n  }\n  return result\n}\n\nfunction isRawParameters(value: JsInputValue): value is RawParameters {\n  return typeof value === 'object' && value !== null && value['__prismaRawParameters__'] === true\n}\n\nfunction isJSONConvertible(value: JsInputValue): value is JsonConvertible {\n  return typeof value === 'object' && value !== null && typeof value['toJSON'] === 'function'\n}\n\nfunction validateSelectionForUndefined(value: unknown, context: SerializeContext) {\n  if (value === undefined && context.isPreviewFeatureOn('strictUndefinedChecks')) {\n    context.throwValidationError({\n      kind: 'InvalidSelectionValue',\n      selectionPath: context.getSelectionPath(),\n      underlyingError: STRICT_UNDEFINED_ERROR_MESSAGE,\n    })\n  }\n}\n\ntype ContextParams = {\n  runtimeDataModel: RuntimeDataModel\n  originalMethod: string\n  rootArgs: JsArgs | undefined\n  extensions: MergedExtensionsList\n  selectionPath: string[]\n  argumentPath: string[]\n  modelName?: string\n  action: Action\n  callsite?: CallSite\n  errorFormat: ErrorFormat\n  clientVersion: string\n  previewFeatures: string[]\n  globalOmit?: GlobalOmitOptions\n}\n\nclass SerializeContext {\n  public readonly modelOrType: RuntimeModel | undefined\n  constructor(private params: ContextParams) {\n    if (this.params.modelName) {\n      // TODO: throw if not found\n      this.modelOrType =\n        this.params.runtimeDataModel.models[this.params.modelName] ??\n        this.params.runtimeDataModel.types[this.params.modelName]\n    }\n  }\n\n  throwValidationError(error: ValidationError): never {\n    throwValidationException({\n      errors: [error],\n      originalMethod: this.params.originalMethod,\n      args: this.params.rootArgs ?? {},\n      callsite: this.params.callsite,\n      errorFormat: this.params.errorFormat,\n      clientVersion: this.params.clientVersion,\n      globalOmit: this.params.globalOmit,\n    })\n  }\n\n  getSelectionPath() {\n    return this.params.selectionPath\n  }\n\n  getArgumentPath() {\n    return this.params.argumentPath\n  }\n\n  getArgumentName() {\n    return this.params.argumentPath[this.params.argumentPath.length - 1]\n  }\n\n  getOutputTypeDescription(): OutputTypeDescription | undefined {\n    if (!this.params.modelName || !this.modelOrType) {\n      return undefined\n    }\n    return {\n      name: this.params.modelName,\n      fields: this.modelOrType.fields.map((field) => ({\n        name: field.name,\n        typeName: 'boolean',\n        isRelation: field.kind === 'object',\n      })),\n    }\n  }\n\n  isRawAction() {\n    return ['executeRaw', 'queryRaw', 'runCommandRaw', 'findRaw', 'aggregateRaw'].includes(this.params.action)\n  }\n\n  isPreviewFeatureOn(previewFeature: string) {\n    return this.params.previewFeatures.includes(previewFeature)\n  }\n\n  getComputedFields() {\n    if (!this.params.modelName) {\n      return undefined\n    }\n\n    return this.params.extensions.getAllComputedFields(this.params.modelName)\n  }\n\n  findField(name: string) {\n    return this.modelOrType?.fields.find((field) => field.name === name)\n  }\n\n  nestSelection(fieldName: string) {\n    const field = this.findField(fieldName)\n    const modelName = field?.kind === 'object' ? field.type : undefined\n\n    return new SerializeContext({\n      ...this.params,\n      modelName,\n      selectionPath: this.params.selectionPath.concat(fieldName),\n    })\n  }\n\n  getGlobalOmit(): Record<string, boolean> {\n    if (this.params.modelName && this.shouldApplyGlobalOmit()) {\n      return this.params.globalOmit?.[uncapitalize(this.params.modelName)] ?? {}\n    }\n    return {}\n  }\n\n  shouldApplyGlobalOmit(): boolean {\n    switch (this.params.action) {\n      case 'findFirst':\n      case 'findFirstOrThrow':\n      case 'findUniqueOrThrow':\n      case 'findMany':\n      case 'upsert':\n      case 'findUnique':\n      case 'createManyAndReturn':\n      case 'create':\n      case 'update':\n      case 'updateManyAndReturn':\n      case 'delete':\n        return true\n      case 'executeRaw':\n      case 'aggregateRaw':\n      case 'runCommandRaw':\n      case 'findRaw':\n      case 'createMany':\n      case 'deleteMany':\n      case 'groupBy':\n      case 'updateMany':\n      case 'count':\n      case 'aggregate':\n      case 'queryRaw':\n        return false\n      default:\n        assertNever(this.params.action, 'Unknown action')\n    }\n  }\n\n  nestArgument(fieldName: string) {\n    return new SerializeContext({\n      ...this.params,\n      argumentPath: this.params.argumentPath.concat(fieldName),\n    })\n  }\n}\n", "export * from './Cache'\nexport * from './casing'\nexport * from './client-config'\nexport * from './Dictionary'\nexport * from './dmmf'\nexport * from './enums'\nexport * from './lazyProperty'\nexport * from './omit'\nexport * from './operations'\nexport * from './QueryCompiler'\nexport * from './QueryEngine'\nexport * from './runtimeDataModel'\nexport * from './uniqueBy'\n", "type CacheEntry<V> = {\n  value: V\n}\nexport class Cache<K, V> {\n  private _map = new Map<K, CacheEntry<V>>()\n\n  get(key: K): V | undefined {\n    return this._map.get(key)?.value\n  }\n\n  set(key: K, value: V): void {\n    this._map.set(key, { value })\n  }\n\n  getOrCreate(key: K, create: () => V): V {\n    const cached = this._map.get(key)\n    if (cached) {\n      return cached.value\n    }\n    const value = create()\n    this.set(key, value)\n    return value\n  }\n}\n", "/**\n * Converts the first character of a word to upper case.\n */\nexport function capitalize<T extends string>(self: T): Capitalize<T> {\n  if (self.length === 0) return self as Capitalize<T>\n\n  return (self[0].toUpperCase() + self.slice(1)) as Capitalize<T>\n}\n\n/**\n * Converts the first character of a word to lower case.\n */\nexport function uncapitalize<T extends string>(self: T): Uncapitalize<T> {\n  return (self.substring(0, 1).toLowerCase() + self.substring(1)) as Uncapitalize<T>\n}\n", "export interface Dictionary<T> {\n  [key: string]: T\n}\n\nexport function keyBy<P extends PropertyKey, T extends { [key in P]: string }>(\n  collection: readonly T[],\n  prop: P,\n): Dictionary<T> {\n  const acc: Dictionary<T> = {}\n\n  for (const obj of collection) {\n    const key = obj[prop]\n    acc[key] = obj\n  }\n\n  return acc\n}\n", "export type LazyProperty<T> = {\n  get: () => T\n}\n\nexport function lazyProperty<T>(compute: () => T): LazyProperty<T> {\n  let resultContainer: undefined | { value: T }\n\n  return {\n    get() {\n      if (resultContainer) {\n        return resultContainer.value\n      }\n      resultContainer = { value: compute() }\n      return resultContainer.value\n    },\n  }\n}\n", "import type * as DMMF from '@prisma/dmmf'\n\nexport type RuntimeModel = Omit<DMMF.Model, 'name'>\nexport type RuntimeEnum = Omit<DMMF.DatamodelEnum, 'name'>\n\nexport type RuntimeDataModel = {\n  readonly models: Record<string, RuntimeModel>\n  readonly enums: Record<string, RuntimeEnum>\n  readonly types: Record<string, RuntimeModel>\n}\n\nexport type PrunedRuntimeModel = {\n  readonly dbName: RuntimeModel['dbName']\n  readonly fields: Pick<RuntimeModel['fields'][number], 'name' | 'kind' | 'type' | 'relationName' | 'dbName'>[]\n}\n\nexport type PrunedRuntimeDataModel = {\n  readonly models: Record<string, PrunedRuntimeModel>\n  readonly enums: {}\n  readonly types: {}\n}\n\nexport function dmmfToRuntimeDataModel(dmmfDataModel: DMMF.Datamodel): RuntimeDataModel {\n  return {\n    models: buildMapForRuntime(dmmfDataModel.models),\n    enums: buildMapForRuntime(dmmfDataModel.enums),\n    types: buildMapForRuntime(dmmfDataModel.types),\n  }\n}\n\n/**\n * Minimal version of the runtime datamodel for the Client to work\n * @param runtimeDataModel\n * @returns\n */\nexport function pruneRuntimeDataModel({ models }: RuntimeDataModel) {\n  const prunedModels: PrunedRuntimeDataModel['models'] = {}\n\n  for (const modelName of Object.keys(models)) {\n    prunedModels[modelName] = { fields: [], dbName: models[modelName].dbName }\n\n    for (const { name, kind, type, relationName, dbName } of models[modelName].fields) {\n      prunedModels[modelName].fields.push({ name, kind, type, relationName, dbName })\n    }\n  }\n\n  return { models: prunedModels, enums: {}, types: {} }\n}\n\nfunction buildMapForRuntime<T extends { name: string }>(list: readonly T[]): Record<string, Omit<T, 'name'>> {\n  const result: Record<string, Omit<T, 'name'>> = {}\n  for (const { name, ...rest } of list) {\n    result[name] = rest\n  }\n  return result\n}\n", "export function isDate(value: unknown): value is Date {\n  return (\n    value instanceof Date ||\n    // date created in other JS context (for example, worker)\n    Object.prototype.toString.call(value) === '[object Date]'\n  )\n}\n\nexport function isValidDate(date: Date) {\n  return date.toString() !== 'Invalid Date'\n}\n", "import { Decimal } from 'decimal.js'\n\nimport { DecimalJsLike } from '../core/types/exported/DecimalJsLike'\n\nexport function isDecimalJsLike(value: unknown): value is DecimalJsLike {\n  if (Decimal.isDecimal(value)) {\n    return true\n  }\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value['s'] === 'number' &&\n    typeof value['e'] === 'number' &&\n    typeof value['toFixed'] === 'function' &&\n    Array.isArray(value['d'])\n  )\n}\n", "import { ErrorFormat } from '../../getPrismaClient'\nimport { CallSite } from '../../utils/CallSite'\nimport { createErrorMessageWithContext } from '../../utils/createErrorMessageWithContext'\nimport { PrismaClientValidationError } from '../errors/PrismaClientValidationError'\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport { JsArgs } from '../types/exported/JsApi'\nimport { ValidationError } from '../types/ValidationError'\nimport { applyValidationError } from './applyValidationError'\nimport { buildArgumentsRenderingTree, renderArgsTree } from './ArgumentsRenderingTree'\n\ntype ExceptionParams = {\n  errors: ValidationError[]\n  args: JsArgs\n  callsite?: CallSite\n  originalMethod: string\n  errorFormat: ErrorFormat\n  clientVersion: string\n  globalOmit?: GlobalOmitOptions\n}\n\nexport function throwValidationException({\n  args,\n  errors,\n  errorFormat,\n  callsite,\n  originalMethod,\n  clientVersion,\n  globalOmit,\n}: ExceptionParams): never {\n  const argsTree = buildArgumentsRenderingTree(args)\n  for (const error of errors) {\n    applyValidationError(error, argsTree, globalOmit)\n  }\n\n  const { message, args: renderedArgs } = renderArgsTree(argsTree, errorFormat)\n\n  const messageWithContext = createErrorMessageWithContext({\n    message,\n    callsite,\n    originalMethod,\n    showColors: errorFormat === 'pretty',\n    callArguments: renderedArgs,\n  })\n\n  throw new PrismaClientValidationError(messageWithContext, { clientVersion })\n}\n", "import * as DMMF from '@prisma/dmmf'\nimport indentString from 'indent-string'\nimport { bold, dim, gray, red, underline } from 'kleur/colors'\n\nimport { CallSite, LocationInFile } from './CallSite'\nimport { SourceFileSlice } from './SourceFileSlice'\n\ndeclare global {\n  /**\n   * a global variable that is injected by us via jest to make our snapshots\n   * work in clients that cannot read from disk (e.g. wasm or edge clients)\n   */\n  let $getTemplateParameters: typeof getTemplateParameters | undefined\n}\n\nexport interface ErrorArgs {\n  callsite?: CallSite\n  originalMethod: string\n  message: string\n  isPanic?: boolean\n  showColors?: boolean\n  callArguments?: string\n}\n\ntype Colors = {\n  red: (str: string) => string\n  gray: (str: string) => string\n  dim: (str: string) => string\n  bold: (str: string) => string\n  underline: (str: string) => string\n  highlightSource: (source: SourceFileSlice) => SourceFileSlice\n}\n\nconst colorsEnabled: Colors = {\n  red,\n  gray,\n  dim,\n  bold,\n  underline,\n  highlightSource: (source) => source.highlight(),\n}\n\nconst colorsDisabled: Colors = {\n  red: (str) => str,\n  gray: (str) => str,\n  dim: (str) => str,\n  bold: (str) => str,\n  underline: (str) => str,\n  highlightSource: (source) => source,\n}\n\ntype ErrorContextTemplateParameters = {\n  functionName: string\n  message: string\n  location?: LocationInFile\n  contextLines?: SourceFileSlice\n  callArguments?: string\n  isPanic: boolean\n}\n\nfunction getRawTemplateParameters({\n  message,\n  originalMethod,\n  isPanic,\n  callArguments,\n}: ErrorArgs): ErrorContextTemplateParameters {\n  return {\n    functionName: `prisma.${originalMethod}()`,\n    message,\n    isPanic: isPanic ?? false,\n    callArguments,\n  }\n}\n\nexport function getTemplateParameters(\n  { callsite, message, originalMethod, isPanic, callArguments }: ErrorArgs,\n  colors: Colors,\n): ErrorContextTemplateParameters {\n  const templateParameters = getRawTemplateParameters({ message, originalMethod, isPanic, callArguments })\n\n  // @ts-ignore\n  if (!callsite || typeof window !== 'undefined') {\n    return templateParameters\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    return templateParameters\n  }\n\n  const callLocation = callsite.getLocation()\n  if (!callLocation || !callLocation.lineNumber || !callLocation.columnNumber) {\n    return templateParameters\n  }\n\n  const contextFirstLine = Math.max(1, callLocation.lineNumber - 3)\n  let source = SourceFileSlice.read(callLocation.fileName)?.slice(contextFirstLine, callLocation.lineNumber)\n  const invocationLine = source?.lineAt(callLocation.lineNumber)\n  if (source && invocationLine) {\n    const invocationLineIndent = getIndent(invocationLine)\n    const invocationCallCode = findPrismaActionCall(invocationLine)\n    if (!invocationCallCode) {\n      return templateParameters\n    }\n    templateParameters.functionName = `${invocationCallCode.code})`\n    templateParameters.location = callLocation\n\n    if (!isPanic) {\n      source = source.mapLineAt(callLocation.lineNumber, (line) => line.slice(0, invocationCallCode.openingBraceIndex))\n    }\n\n    source = colors.highlightSource(source)\n    const numberColumnWidth = String(source.lastLineNumber).length\n    templateParameters.contextLines = source\n      .mapLines((line, lineNumber) => colors.gray(String(lineNumber).padStart(numberColumnWidth)) + ' ' + line)\n      .mapLines((line) => colors.dim(line))\n      .prependSymbolAt(callLocation.lineNumber, colors.bold(colors.red('\u2192')))\n\n    if (callArguments) {\n      let indentValue = invocationLineIndent + numberColumnWidth + 1 /* space between number and code */\n      indentValue += 2 // arrow + space between arrow and number\n\n      // indent all lines but first, because first line of the arguments will be printed\n      // on the same line as the function call\n      templateParameters.callArguments = indentString(callArguments, indentValue).slice(indentValue)\n    }\n  }\n  return templateParameters\n}\n\nfunction findPrismaActionCall(str: string): { code: string; openingBraceIndex: number } | null {\n  const allActions = Object.keys(DMMF.ModelAction).join('|')\n  const regexp = new RegExp(String.raw`\\.(${allActions})\\(`)\n  const match = regexp.exec(str)\n  if (match) {\n    const openingBraceIndex = match.index + match[0].length\n    // to get the code we are slicing the string up to a found brace. We start\n    // with first non-space character if space is found in the line before that or\n    // 0 if it is not.\n    const statementStart = str.lastIndexOf(' ', match.index) + 1\n    return {\n      code: str.slice(statementStart, openingBraceIndex),\n      openingBraceIndex,\n    }\n  }\n  return null\n}\n\nfunction getIndent(line: string): number {\n  let spaceCount = 0\n  for (let i = 0; i < line.length; i++) {\n    if (line.charAt(i) !== ' ') {\n      return spaceCount\n    }\n    spaceCount++\n  }\n\n  return spaceCount\n}\n\nfunction stringifyErrorMessage(\n  { functionName, location, message, isPanic, contextLines, callArguments }: ErrorContextTemplateParameters,\n  colors: Colors,\n) {\n  const lines: string[] = ['']\n\n  const introSuffix = location ? ' in' : ':'\n  if (isPanic) {\n    lines.push(colors.red(`Oops, an unknown error occurred! This is ${colors.bold('on us')}, you did nothing wrong.`))\n    lines.push(colors.red(`It occurred in the ${colors.bold(`\\`${functionName}\\``)} invocation${introSuffix}`))\n  } else {\n    lines.push(colors.red(`Invalid ${colors.bold(`\\`${functionName}\\``)} invocation${introSuffix}`))\n  }\n\n  if (location) {\n    lines.push(colors.underline(stringifyLocationInFile(location)))\n  }\n\n  if (contextLines) {\n    lines.push('')\n\n    const contextLineParts = [contextLines.toString()]\n\n    if (callArguments) {\n      contextLineParts.push(callArguments)\n      contextLineParts.push(colors.dim(')'))\n    }\n    lines.push(contextLineParts.join(''))\n    if (callArguments) {\n      lines.push('')\n    }\n  } else {\n    lines.push('')\n    if (callArguments) {\n      lines.push(callArguments)\n    }\n    lines.push('')\n  }\n\n  lines.push(message)\n  return lines.join('\\n')\n}\n\nfunction stringifyLocationInFile(location: LocationInFile): string {\n  const parts = [location.fileName]\n  if (location.lineNumber) {\n    parts.push(String(location.lineNumber))\n  }\n\n  if (location.columnNumber) {\n    parts.push(String(location.columnNumber))\n  }\n\n  return parts.join(':')\n}\n\nexport function createErrorMessageWithContext(args: ErrorArgs): string {\n  const colors = args.showColors ? colorsEnabled : colorsDisabled\n  let templateParameters: ErrorContextTemplateParameters\n\n  if (\n    TARGET_BUILD_TYPE === 'wasm-engine-edge' ||\n    TARGET_BUILD_TYPE === 'wasm-compiler-edge' ||\n    TARGET_BUILD_TYPE === 'edge'\n  ) {\n    if (typeof $getTemplateParameters !== 'undefined') {\n      templateParameters = $getTemplateParameters(args, colors)\n    } else {\n      templateParameters = getRawTemplateParameters(args)\n    }\n  } else {\n    templateParameters = getTemplateParameters(args, colors)\n  }\n\n  return stringifyErrorMessage(templateParameters, colors)\n}\n", "export * from './convert'\nexport * from './dmmf'\n", "import { DatamodelEnum, SchemaEnum } from './dmmf'\n\nexport function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum {\n  return {\n    name: datamodelEnum.name,\n    values: datamodelEnum.values.map((v) => v.name),\n  }\n}\n", "import { ReadonlyDeep } from './util'\n\nexport type Document = ReadonlyDeep<{\n  datamodel: Datamodel\n  schema: Schema\n  mappings: Mappings\n}>\n\nexport type Mappings = ReadonlyDeep<{\n  modelOperations: ModelMapping[]\n  otherOperations: {\n    read: string[]\n    write: string[]\n  }\n}>\n\nexport type OtherOperationMappings = ReadonlyDeep<{\n  read: string[]\n  write: string[]\n}>\n\nexport type DatamodelEnum = ReadonlyDeep<{\n  name: string\n  values: EnumValue[]\n  dbName?: string | null\n  documentation?: string\n}>\n\nexport type SchemaEnum = ReadonlyDeep<{\n  name: string\n  values: string[]\n}>\n\nexport type EnumValue = ReadonlyDeep<{\n  name: string\n  dbName: string | null\n}>\n\nexport type Datamodel = ReadonlyDeep<{\n  models: Model[]\n  enums: DatamodelEnum[]\n  types: Model[]\n  indexes: Index[]\n}>\n\nexport type uniqueIndex = ReadonlyDeep<{\n  name: string\n  fields: string[]\n}>\nexport type PrimaryKey = ReadonlyDeep<{\n  name: string | null\n  fields: string[]\n}>\nexport type Model = ReadonlyDeep<{\n  name: string\n  dbName: string | null\n  schema: string | null\n  fields: Field[]\n  uniqueFields: string[][]\n  uniqueIndexes: uniqueIndex[]\n  documentation?: string\n  primaryKey: PrimaryKey | null\n  isGenerated?: boolean\n}>\n\nexport type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported'\n\nexport type FieldNamespace = 'model' | 'prisma'\nexport type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes'\n\nexport type Field = ReadonlyDeep<{\n  kind: FieldKind\n  name: string\n  isRequired: boolean\n  isList: boolean\n  isUnique: boolean\n  isId: boolean\n  isReadOnly: boolean\n  isGenerated?: boolean // does not exist on 'type' but does on 'model'\n  isUpdatedAt?: boolean // does not exist on 'type' but does on 'model'\n  /**\n   * Describes the data type in the same the way it is defined in the Prisma schema:\n   * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\n   */\n  type: string\n  /**\n   * Native database type, if specified.\n   * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\n   * `@db.Text` is encoded as `['Text', []]`.\n   */\n  nativeType?: [string, string[]] | null\n  dbName?: string | null\n  hasDefaultValue: boolean\n  default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[]\n  relationFromFields?: string[]\n  relationToFields?: string[]\n  relationOnDelete?: string\n  relationOnUpdate?: string\n  relationName?: string\n  documentation?: string\n}>\n\nexport type FieldDefault = ReadonlyDeep<{\n  name: string\n  args: Array<string | number>\n}>\n\nexport type FieldDefaultScalar = string | boolean | number\n\nexport type Index = ReadonlyDeep<{\n  model: string\n  type: IndexType\n  isDefinedOnField: boolean\n  name?: string\n  dbName?: string\n  algorithm?: string\n  clustered?: boolean\n  fields: IndexField[]\n}>\n\nexport type IndexType = 'id' | 'normal' | 'unique' | 'fulltext'\n\nexport type IndexField = ReadonlyDeep<{\n  name: string\n  sortOrder?: SortOrder\n  length?: number\n  operatorClass?: string\n}>\n\nexport type SortOrder = 'asc' | 'desc'\n\nexport type Schema = ReadonlyDeep<{\n  rootQueryType?: string\n  rootMutationType?: string\n  inputObjectTypes: {\n    // For now there are no `model` InputTypes\n    model?: InputType[]\n    prisma?: InputType[]\n  }\n  outputObjectTypes: {\n    model: OutputType[]\n    prisma: OutputType[]\n  }\n  enumTypes: {\n    model?: SchemaEnum[]\n    prisma: SchemaEnum[]\n  }\n  fieldRefTypes: {\n    prisma?: FieldRefType[]\n  }\n}>\n\nexport type Query = ReadonlyDeep<{\n  name: string\n  args: SchemaArg[]\n  output: QueryOutput\n}>\n\nexport type QueryOutput = ReadonlyDeep<{\n  name: string\n  isRequired: boolean\n  isList: boolean\n}>\n\nexport type TypeRef<AllowedLocations extends FieldLocation> = {\n  isList: boolean\n  type: string\n  location: AllowedLocations\n  namespace?: FieldNamespace\n}\n\nexport type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>\n\nexport type SchemaArg = ReadonlyDeep<{\n  name: string\n  comment?: string\n  isNullable: boolean\n  isRequired: boolean\n  inputTypes: InputTypeRef[]\n  requiresOtherFields?: string[]\n  deprecation?: Deprecation\n}>\n\nexport type OutputType = ReadonlyDeep<{\n  name: string\n  fields: SchemaField[]\n}>\n\nexport type SchemaField = ReadonlyDeep<{\n  name: string\n  isNullable?: boolean\n  outputType: OutputTypeRef\n  args: SchemaArg[]\n  deprecation?: Deprecation\n  documentation?: string\n}>\n\nexport type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>\n\nexport type Deprecation = ReadonlyDeep<{\n  sinceVersion: string\n  reason: string\n  plannedRemovalVersion?: string\n}>\n\nexport type InputType = ReadonlyDeep<{\n  name: string\n  constraints: {\n    maxNumFields: number | null\n    minNumFields: number | null\n    fields?: string[]\n  }\n  meta?: {\n    source?: string\n    grouping?: string\n  }\n  fields: SchemaArg[]\n}>\n\nexport type FieldRefType = ReadonlyDeep<{\n  name: string\n  allowTypes: FieldRefAllowType[]\n  fields: SchemaArg[]\n}>\n\nexport type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>\n\nexport type ModelMapping = ReadonlyDeep<{\n  model: string\n  plural: string\n  findUnique?: string | null\n  findUniqueOrThrow?: string | null\n  findFirst?: string | null\n  findFirstOrThrow?: string | null\n  findMany?: string | null\n  create?: string | null\n  createMany?: string | null\n  createManyAndReturn?: string | null\n  update?: string | null\n  updateMany?: string | null\n  updateManyAndReturn?: string | null\n  upsert?: string | null\n  delete?: string | null\n  deleteMany?: string | null\n  aggregate?: string | null\n  groupBy?: string | null\n  count?: string | null\n  findRaw?: string | null\n  aggregateRaw?: string | null\n}>\n\nexport enum ModelAction {\n  findUnique = 'findUnique',\n  findUniqueOrThrow = 'findUniqueOrThrow',\n  findFirst = 'findFirst',\n  findFirstOrThrow = 'findFirstOrThrow',\n  findMany = 'findMany',\n  create = 'create',\n  createMany = 'createMany',\n  createManyAndReturn = 'createManyAndReturn',\n  update = 'update',\n  updateMany = 'updateMany',\n  updateManyAndReturn = 'updateManyAndReturn',\n  upsert = 'upsert',\n  delete = 'delete',\n  deleteMany = 'deleteMany',\n  groupBy = 'groupBy',\n  count = 'count', // TODO: count does not actually exist in DMMF\n  aggregate = 'aggregate',\n  findRaw = 'findRaw',\n  aggregateRaw = 'aggregateRaw',\n}\n", "import { uncapitalize } from '@prisma/client-common'\nimport levenshtein from 'js-levenshtein'\n\nimport {\n  ArgumentDescription,\n  EmptySelectionError,\n  InputTypeDescription,\n  InvalidArgumentTypeError,\n  InvalidArgumentValueError,\n  OutputTypeDescription,\n  RequiredArgumentMissingError,\n  SomeFieldsMissingError,\n  TooManyFieldsGivenError,\n  UnknownArgumentError,\n  UnknownInputFieldError,\n  UnknownSelectionFieldError,\n  ValueTooLargeError,\n} from '../engines'\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport {\n  IncludeOnScalarError,\n  InvalidSelectionValueError,\n  MutuallyExclusiveFieldsError,\n  ValidationError,\n} from '../types/ValidationError'\nimport { applyUnionError } from './applyUnionError'\nimport { ArgumentsRenderingTree } from './ArgumentsRenderingTree'\nimport { Colors } from './base'\nimport { ObjectField } from './ObjectField'\nimport { ObjectFieldSuggestion } from './ObjectFieldSuggestion'\nimport { ObjectValue } from './ObjectValue'\nimport { ScalarValue } from './ScalarValue'\nimport { SuggestionObjectValue } from './SuggestionObjectValue'\n\n/**\n * Given the validation error and arguments rendering tree, applies corresponding\n * formatting to an error tree and adds all relevant messages.\n *\n * @param error\n * @param args\n */\nexport function applyValidationError(\n  error: ValidationError,\n  args: ArgumentsRenderingTree,\n  globalOmit?: GlobalOmitOptions,\n): void {\n  switch (error.kind) {\n    case 'MutuallyExclusiveFields':\n      applyMutuallyExclusiveFieldsError(error, args)\n      break\n    case 'IncludeOnScalar':\n      applyIncludeOnScalarError(error, args)\n      break\n    case 'EmptySelection':\n      applyEmptySelectionError(error, args, globalOmit)\n      break\n    case 'UnknownSelectionField':\n      applyUnknownSelectionFieldError(error, args)\n      break\n    case 'InvalidSelectionValue':\n      applyInvalidSelectionValueError(error, args)\n      break\n    case 'UnknownArgument':\n      applyUnknownArgumentError(error, args)\n      break\n    case 'UnknownInputField':\n      applyUnknownInputFieldError(error, args)\n      break\n    case 'RequiredArgumentMissing':\n      applyRequiredArgumentMissingError(error, args)\n      break\n    case 'InvalidArgumentType':\n      applyInvalidArgumentTypeError(error, args)\n      break\n    case 'InvalidArgumentValue':\n      applyInvalidArgumentValueError(error, args)\n      break\n    case 'ValueTooLarge':\n      applyValueTooLargeError(error, args)\n      break\n    case 'SomeFieldsMissing':\n      applySomeFieldsMissingError(error, args)\n      break\n    case 'TooManyFieldsGiven':\n      applyTooManyFieldsGivenError(error, args)\n      break\n    case 'Union':\n      applyUnionError(error, args, globalOmit)\n      break\n    default:\n      throw new Error('not implemented: ' + error.kind)\n  }\n}\n\nfunction applyMutuallyExclusiveFieldsError(error: MutuallyExclusiveFieldsError, argsTree: ArgumentsRenderingTree) {\n  const object = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (object) {\n    object.getField(error.firstField)?.markAsError()\n    object.getField(error.secondField)?.markAsError()\n  }\n\n  argsTree.addErrorMessage(\n    (colors) =>\n      `Please ${colors.bold('either')} use ${colors.green(`\\`${error.firstField}\\``)} or ${colors.green(\n        `\\`${error.secondField}\\``,\n      )}, but ${colors.red('not both')} at the same time.`,\n  )\n}\n\nfunction applyIncludeOnScalarError(error: IncludeOnScalarError, argsTree: ArgumentsRenderingTree) {\n  const [selectionPath, field] = splitPath(error.selectionPath)\n  const outputType = error.outputType\n\n  const object = argsTree.arguments.getDeepSelectionParent(selectionPath)?.value\n  if (object) {\n    object.getField(field)?.markAsError()\n\n    if (outputType) {\n      for (const field of outputType.fields) {\n        if (field.isRelation) {\n          object.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n        }\n      }\n    }\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    let msg = `Invalid scalar field ${colors.red(`\\`${field}\\``)} for ${colors.bold('include')} statement`\n    if (outputType) {\n      msg += ` on model ${colors.bold(outputType.name)}. ${availableOptionsMessage(colors)}`\n    } else {\n      msg += '.'\n    }\n\n    msg += `\\nNote that ${colors.bold('include')} statements only accept relation fields.`\n    return msg\n  })\n}\n\nfunction applyEmptySelectionError(\n  error: EmptySelectionError,\n  argsTree: ArgumentsRenderingTree,\n  globalOmit?: GlobalOmitOptions,\n) {\n  const subSelection = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (subSelection) {\n    const omit = subSelection.getField('omit')?.value.asObject()\n    if (omit) {\n      applyEmptySelectionErrorOmit(error, argsTree, omit)\n      return\n    }\n    if (subSelection.hasField('select')) {\n      applyEmptySelectionErrorSelect(error, argsTree)\n      return\n    }\n  }\n\n  if (globalOmit?.[uncapitalize(error.outputType.name)]) {\n    applyEmptySelectionErrorGlobalOmit(error, argsTree)\n    return\n  }\n\n  // should never happen, but in case it does\n  argsTree.addErrorMessage(() => `Unknown field at \"${error.selectionPath.join('.')} selection\"`)\n}\n\n// case for `EmptySelectionError`, triggered by excessive omit\nfunction applyEmptySelectionErrorOmit(\n  error: EmptySelectionError,\n  argsTree: ArgumentsRenderingTree,\n  omitValue: ObjectValue,\n) {\n  omitValue.removeAllFields()\n  for (const field of error.outputType.fields) {\n    omitValue.addSuggestion(new ObjectFieldSuggestion(field.name, 'false'))\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    return `The ${colors.red('omit')} statement includes every field of the model ${colors.bold(\n      error.outputType.name,\n    )}. At least one field must be included in the result`\n  })\n}\n\n// case for `EmptySelectionError`, triggered by empty/falsy `select`\nfunction applyEmptySelectionErrorSelect(error: EmptySelectionError, argsTree: ArgumentsRenderingTree) {\n  const outputType = error.outputType\n  const selection = argsTree.arguments.getDeepSelectionParent(error.selectionPath)?.value\n  const isEmpty = selection?.isEmpty() ?? false\n\n  if (selection) {\n    // If selection has fields and we get EmptySelection error, it means all fields within the\n    // selection are false. We have 2 possible ways to handle suggestions here:\n    //\n    // 1. Suggest only the fields, not present inside of the selection. Example:\n    //\n    // {\n    //   select: {\n    //     id: false\n    //     posts: false,\n    // ?   name?: true\n    // ?   email?: true\n    //  }\n    // }\n    // There are couple of possible problems here. First, we are assuming that user needs to\n    // add new field to the selection, rather than change one of the existing ones to true.\n    // Second, we might end up in a situation where all fields are already used in selection and we have nothing left to suggest.\n    //\n    // 2.Completely ignore users input and suggest all the fields. Example rendering:\n    // {\n    //  select: {\n    //  ?   id?: true\n    //  ?   posts?: true,\n    //  ?   name?: true\n    //  ?   email?: true\n    //   }\n    //  }\n    //\n    // So we will be suggesting to either change one of the fields to true, or add a new one which would be true.\n    // This is the approach we are taking and in order to it, we need to remove all the fields from selection. Code\n    // below will then add them back as a suggestion.\n    selection.removeAllFields()\n    addSelectionSuggestions(selection, outputType)\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    if (isEmpty) {\n      return `The ${colors.red('`select`')} statement for type ${colors.bold(\n        outputType.name,\n      )} must not be empty. ${availableOptionsMessage(colors)}`\n    }\n    return `The ${colors.red('`select`')} statement for type ${colors.bold(outputType.name)} needs ${colors.bold(\n      'at least one truthy value',\n    )}.`\n  })\n}\n\n// case for `EmptySelectionError`, triggered by excessive global omit\nfunction applyEmptySelectionErrorGlobalOmit(error: EmptySelectionError, argsTree: ArgumentsRenderingTree) {\n  const suggestedOmitConfig = new SuggestionObjectValue()\n  for (const field of error.outputType.fields) {\n    if (!field.isRelation) {\n      suggestedOmitConfig.addField(field.name, 'false')\n    }\n  }\n\n  const omitSuggestion = new ObjectFieldSuggestion('omit', suggestedOmitConfig).makeRequired()\n\n  if (error.selectionPath.length === 0) {\n    argsTree.arguments.addSuggestion(omitSuggestion)\n  } else {\n    const [parentPath, fieldName] = splitPath(error.selectionPath)\n    const parent = argsTree.arguments.getDeepSelectionParent(parentPath)?.value.asObject()\n    const field = parent?.getField(fieldName)\n    if (field) {\n      const fieldValue = field?.value.asObject() ?? new ObjectValue()\n      fieldValue.addSuggestion(omitSuggestion)\n      field.value = fieldValue\n    }\n  }\n\n  // neither select, nor omit are used, but global omit global omit configuration for the model exists\n  argsTree.addErrorMessage((colors) => {\n    return `The global ${colors.red('omit')} configuration excludes every field of the model ${colors.bold(\n      error.outputType.name,\n    )}. At least one field must be included in the result`\n  })\n}\n\nfunction applyUnknownSelectionFieldError(error: UnknownSelectionFieldError, argsTree: ArgumentsRenderingTree) {\n  const locateResult = locateSelectionField(error.selectionPath, argsTree)\n  if (locateResult.parentKind !== 'unknown') {\n    locateResult.field.markAsError()\n    const parent = locateResult.parent\n    switch (locateResult.parentKind) {\n      case 'select':\n        addSelectionSuggestions(parent, error.outputType)\n        break\n      case 'include':\n        addInclusionSuggestions(parent, error.outputType)\n        break\n      case 'omit':\n        addOmissionSuggestions(parent, error.outputType)\n        break\n    }\n  }\n  argsTree.addErrorMessage((colors) => {\n    const parts = [`Unknown field ${colors.red(`\\`${locateResult.fieldName}\\``)}`]\n    if (locateResult.parentKind !== 'unknown') {\n      parts.push(`for ${colors.bold(locateResult.parentKind)} statement`)\n    }\n    parts.push(`on model ${colors.bold(`\\`${error.outputType.name}\\``)}.`)\n    parts.push(availableOptionsMessage(colors))\n    return parts.join(' ')\n  })\n}\n\nfunction applyInvalidSelectionValueError(error: InvalidSelectionValueError, argsTree: ArgumentsRenderingTree) {\n  const locateResult = locateSelectionField(error.selectionPath, argsTree)\n  if (locateResult.parentKind !== 'unknown') {\n    locateResult.field.value.markAsError()\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    return `Invalid value for selection field \\`${colors.red(locateResult.fieldName)}\\`: ${error.underlyingError}`\n  })\n}\n\nfunction applyUnknownArgumentError(error: UnknownArgumentError, argsTree: ArgumentsRenderingTree) {\n  const argName = error.argumentPath[0]\n  const selection = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n\n  if (selection) {\n    selection.getField(argName)?.markAsError()\n    addArgumentsSuggestions(selection, error.arguments)\n  }\n\n  argsTree.addErrorMessage((colors) =>\n    unknownArgumentMessage(\n      colors,\n      argName,\n      error.arguments.map((arg) => arg.name),\n    ),\n  )\n}\n\nfunction applyUnknownInputFieldError(error: UnknownInputFieldError, argsTree: ArgumentsRenderingTree) {\n  const [argParentPath, argName] = splitPath(error.argumentPath)\n  const selection = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n\n  if (selection) {\n    selection.getDeepField(error.argumentPath)?.markAsError()\n    const argParent = selection.getDeepFieldValue(argParentPath)?.asObject()\n    if (argParent) {\n      addInputSuggestions(argParent, error.inputType)\n    }\n  }\n\n  argsTree.addErrorMessage((colors) =>\n    unknownArgumentMessage(\n      colors,\n      argName,\n      error.inputType.fields.map((f) => f.name),\n    ),\n  )\n}\n\nfunction unknownArgumentMessage(colors: Colors, argName: string, options: string[]) {\n  const parts = [`Unknown argument \\`${colors.red(argName)}\\`.`]\n  const suggestion = getSuggestion(argName, options)\n\n  if (suggestion) {\n    parts.push(`Did you mean \\`${colors.green(suggestion)}\\`?`)\n  }\n\n  if (options.length > 0) {\n    parts.push(availableOptionsMessage(colors))\n  }\n\n  return parts.join(' ')\n}\n\nfunction applyRequiredArgumentMissingError(error: RequiredArgumentMissingError, args: ArgumentsRenderingTree) {\n  let existingField: ObjectField | undefined = undefined\n\n  args.addErrorMessage((colors) => {\n    if (existingField?.value instanceof ScalarValue && existingField.value.text === 'null') {\n      return `Argument \\`${colors.green(argumentName)}\\` must not be ${colors.red('null')}.`\n    }\n    return `Argument \\`${colors.green(argumentName)}\\` is missing.`\n  })\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (!selection) {\n    return\n  }\n\n  const [argParent, argumentName] = splitPath(error.argumentPath)\n  const objectSuggestion = new SuggestionObjectValue()\n  const parent = selection.getDeepFieldValue(argParent)?.asObject()\n  if (!parent) {\n    return\n  }\n\n  existingField = parent.getField(argumentName)\n  if (existingField) {\n    parent.removeField(argumentName)\n  }\n\n  if (error.inputTypes.length === 1 && error.inputTypes[0].kind === 'object') {\n    for (const field of error.inputTypes[0].fields) {\n      objectSuggestion.addField(field.name, field.typeNames.join(' | '))\n    }\n\n    parent.addSuggestion(new ObjectFieldSuggestion(argumentName, objectSuggestion).makeRequired())\n  } else {\n    const typeName = error.inputTypes.map(getInputTypeName).join(' | ')\n    parent.addSuggestion(new ObjectFieldSuggestion(argumentName, typeName).makeRequired())\n  }\n\n  if (error.dependentArgumentPath) {\n    selection.getDeepField(error.dependentArgumentPath)?.markAsError()\n    const [, dependentArgumentName] = splitPath(error.dependentArgumentPath)\n    args.addErrorMessage((colors) => {\n      return `Argument \\`${colors.green(argumentName)}\\` is required because argument \\`${colors.green(\n        dependentArgumentName,\n      )}\\` was provided.`\n    })\n  }\n}\n\nfunction getInputTypeName(description: InputTypeDescription) {\n  if (description.kind === 'list') {\n    return `${getInputTypeName(description.elementType)}[]`\n  }\n  return description.name\n}\n\nfunction applyInvalidArgumentTypeError(error: InvalidArgumentTypeError, args: ArgumentsRenderingTree) {\n  const argName = error.argument.name\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (selection) {\n    selection.getDeepFieldValue(error.argumentPath)?.markAsError()\n  }\n\n  args.addErrorMessage((colors) => {\n    const expected = joinWithPreposition(\n      'or',\n      error.argument.typeNames.map((type) => colors.green(type)),\n    )\n    // TODO: print value\n    return `Argument \\`${colors.bold(argName)}\\`: Invalid value provided. Expected ${expected}, provided ${colors.red(\n      error.inferredType,\n    )}.`\n  })\n}\n\nfunction applyInvalidArgumentValueError(error: InvalidArgumentValueError, args: ArgumentsRenderingTree) {\n  const argName = error.argument.name\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (selection) {\n    selection.getDeepFieldValue(error.argumentPath)?.markAsError()\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts = [`Invalid value for argument \\`${colors.bold(argName)}\\``]\n    if (error.underlyingError) {\n      parts.push(`: ${error.underlyingError}`)\n    }\n    parts.push('.')\n    if (error.argument.typeNames.length > 0) {\n      const expected = joinWithPreposition(\n        'or',\n        error.argument.typeNames.map((type) => colors.green(type)),\n      )\n      parts.push(` Expected ${expected}.`)\n    }\n    return parts.join('')\n  })\n}\n\nfunction applyValueTooLargeError(error: ValueTooLargeError, args: ArgumentsRenderingTree) {\n  const argName = error.argument.name\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  let printedValue: string | undefined\n  if (selection) {\n    const field = selection.getDeepField(error.argumentPath)\n    const value = field?.value\n    value?.markAsError()\n    if (value instanceof ScalarValue) {\n      printedValue = value.text\n    }\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts: string[] = ['Unable to fit value']\n    if (printedValue) {\n      parts.push(colors.red(printedValue))\n    }\n    parts.push(`into a 64-bit signed integer for field \\`${colors.bold(argName)}\\``)\n\n    return parts.join(' ')\n  })\n}\n\nfunction applySomeFieldsMissingError(error: SomeFieldsMissingError, args: ArgumentsRenderingTree) {\n  const argumentName = error.argumentPath[error.argumentPath.length - 1]\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (selection) {\n    const argument = selection.getDeepFieldValue(error.argumentPath)?.asObject()\n    if (argument) {\n      addInputSuggestions(argument, error.inputType)\n    }\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts = [`Argument \\`${colors.bold(argumentName)}\\` of type ${colors.bold(error.inputType.name)} needs`]\n    if (error.constraints.minFieldCount === 1) {\n      if (error.constraints.requiredFields) {\n        parts.push(\n          `${colors.green('at least one of')} ${joinWithPreposition(\n            'or',\n            error.constraints.requiredFields.map((f) => `\\`${colors.bold(f)}\\``),\n          )} arguments.`,\n        )\n      } else {\n        parts.push(`${colors.green('at least one')} argument.`)\n      }\n    } else {\n      parts.push(`${colors.green(`at least ${error.constraints.minFieldCount}`)} arguments.`)\n    }\n    parts.push(availableOptionsMessage(colors))\n    return parts.join(' ')\n  })\n}\n\nfunction applyTooManyFieldsGivenError(error: TooManyFieldsGivenError, args: ArgumentsRenderingTree) {\n  const argumentName = error.argumentPath[error.argumentPath.length - 1]\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  let providedArguments: string[] = []\n  if (selection) {\n    const argument = selection.getDeepFieldValue(error.argumentPath)?.asObject()\n    if (argument) {\n      argument.markAsError()\n      providedArguments = Object.keys(argument.getFields())\n    }\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts = [`Argument \\`${colors.bold(argumentName)}\\` of type ${colors.bold(error.inputType.name)} needs`]\n    if (error.constraints.minFieldCount === 1 && error.constraints.maxFieldCount == 1) {\n      parts.push(`${colors.green('exactly one')} argument,`)\n    } else if (error.constraints.maxFieldCount == 1) {\n      parts.push(`${colors.green('at most one')} argument,`)\n    } else {\n      parts.push(`${colors.green(`at most ${error.constraints.maxFieldCount}`)} arguments,`)\n    }\n\n    parts.push(\n      `but you provided ${joinWithPreposition(\n        'and',\n        providedArguments.map((arg) => colors.red(arg)),\n      )}. Please choose`,\n    )\n\n    if (error.constraints.maxFieldCount === 1) {\n      parts.push('one.')\n    } else {\n      parts.push(`${error.constraints.maxFieldCount}.`)\n    }\n\n    return parts.join(' ')\n  })\n}\n\nfunction addSelectionSuggestions(selection: ObjectValue, outputType: OutputTypeDescription) {\n  for (const field of outputType.fields) {\n    if (!selection.hasField(field.name)) {\n      selection.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n    }\n  }\n}\n\nfunction addInclusionSuggestions(selection: ObjectValue, outputType: OutputTypeDescription) {\n  for (const field of outputType.fields) {\n    if (field.isRelation && !selection.hasField(field.name)) {\n      selection.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n    }\n  }\n}\n\nfunction addOmissionSuggestions(selection: ObjectValue, outputType: OutputTypeDescription) {\n  for (const field of outputType.fields) {\n    if (!selection.hasField(field.name) && !field.isRelation) {\n      selection.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n    }\n  }\n}\n\nfunction addArgumentsSuggestions(argumentsParent: ObjectValue, args: ArgumentDescription[]) {\n  for (const arg of args) {\n    if (!argumentsParent.hasField(arg.name)) {\n      argumentsParent.addSuggestion(new ObjectFieldSuggestion(arg.name, arg.typeNames.join(' | ')))\n    }\n  }\n}\n\nfunction locateSelectionField(selectionPath: string[], argsTree: ArgumentsRenderingTree) {\n  const [parentPath, fieldName] = splitPath(selectionPath)\n\n  const subSelection = argsTree.arguments.getDeepSubSelectionValue(parentPath)?.asObject()\n  if (!subSelection) {\n    return { parentKind: 'unknown' as const, fieldName }\n  }\n  const select = subSelection.getFieldValue('select')?.asObject()\n  const include = subSelection.getFieldValue('include')?.asObject()\n  const omit = subSelection.getFieldValue('omit')?.asObject()\n  let field = select?.getField(fieldName)\n  if (select && field) {\n    return { parentKind: 'select' as const, parent: select, field, fieldName }\n  }\n  field = include?.getField(fieldName)\n  if (include && field) {\n    return { parentKind: 'include' as const, field, parent: include, fieldName }\n  }\n\n  field = omit?.getField(fieldName)\n  if (omit && field) {\n    return { parentKind: 'omit' as const, field, parent: omit, fieldName }\n  }\n  return { parentKind: 'unknown' as const, fieldName }\n}\n\nfunction addInputSuggestions(parent: ObjectValue, inputType: InputTypeDescription) {\n  if (inputType.kind !== 'object') {\n    return\n  }\n\n  for (const field of inputType.fields) {\n    if (!parent.hasField(field.name)) {\n      parent.addSuggestion(new ObjectFieldSuggestion(field.name, field.typeNames.join(' | ')))\n    }\n  }\n}\n\nfunction splitPath(path: string[]): [parentPath: string[], fieldName: string] {\n  const selectionPath = [...path]\n  const fieldName = selectionPath.pop()\n  if (!fieldName) {\n    throw new Error('unexpected empty path')\n  }\n  return [selectionPath, fieldName]\n}\n\nfunction availableOptionsMessage({ green, enabled }: Colors) {\n  return `Available options are ` + (enabled ? `listed in ${green('green')}` : `marked with ?`) + '.'\n}\n\nfunction joinWithPreposition(preposition: 'and' | 'or', items: string[]): string {\n  if (items.length === 1) {\n    return items[0]\n  }\n  const itemsCopy = [...items]\n  const lastItem = itemsCopy.pop()\n  return `${itemsCopy.join(', ')} ${preposition} ${lastItem}`\n}\n\n/**\n * Options with edit distance above this value will never be suggested\n */\nconst MAX_EDIT_DISTANCE = 3\n\nfunction getSuggestion(str: string, options: string[]): string | undefined {\n  let minDistance = Infinity\n  let result: string | undefined\n\n  for (const option of options) {\n    const editDistance = levenshtein(str, option)\n    if (editDistance > MAX_EDIT_DISTANCE) {\n      continue\n    }\n    if (editDistance < minDistance) {\n      minDistance = editDistance\n      result = option\n    }\n  }\n  return result\n}\n", "import { maxWithComparator } from '@prisma/internals'\n\nimport { EngineValidationError, InvalidArgumentTypeError, UnionError } from '../engines'\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport { applyValidationError } from './applyValidationError'\nimport { ArgumentsRenderingTree } from './ArgumentsRenderingTree'\n\ntype NonUnionError = Exclude<EngineValidationError, UnionError>\n\n/**\n * When a particular field has multiple allowed types on the schema level\n * and none of them match users input, engine returns special kind of error: UnionError.\n * This error acts as a container for individual errors for each non-matching type.\n * In that case, we need to make a guess which of the errors corresponds users intent the most.\n * General algorithm of processing them is the following:\n * - flatten all nested errors and get a single list of all possible errors\n * - merge individual InvalidArgumentType errors at the same path\n * - pick the best error based on combined argument and selection paths length and type of the error.\n *\n * For details of each step, see other comments in this file.\n * @param error\n * @param args\n */\nexport function applyUnionError(error: UnionError, args: ArgumentsRenderingTree, globalOmit?: GlobalOmitOptions) {\n  const allErrors = flattenUnionError(error)\n  const merged = mergeInvalidArgumentTypeErrors(allErrors)\n  const bestError = getBestScoringError(merged)\n  if (bestError) {\n    applyValidationError(bestError, args, globalOmit)\n  } else {\n    args.addErrorMessage(() => 'Unknown error')\n  }\n}\n\nfunction flattenUnionError(error: UnionError): NonUnionError[] {\n  return error.errors.flatMap((error) => {\n    if (error.kind === 'Union') {\n      return flattenUnionError(error)\n    }\n    return [error]\n  })\n}\n\n/**\n * Iterates over provided error list and merges all InvalidArgumentType\n * with matching selectionPath and argumentPath into one. For example,\n * if the list has an error, saying that `where.arg` does not match `Int`\n * and another, saying that `where.arg` does not match IntFilter, resulting\n * list will contain a single error for `where.arg` saying it does not\n * match `Int | IntFilter`\n * @param errorList\n * @returns\n */\nfunction mergeInvalidArgumentTypeErrors(errorList: NonUnionError[]) {\n  const invalidArgsError = new Map<string, InvalidArgumentTypeError>()\n  const result: NonUnionError[] = []\n\n  for (const error of errorList) {\n    if (error.kind !== 'InvalidArgumentType') {\n      result.push(error)\n      continue\n    }\n\n    const key = `${error.selectionPath.join('.')}:${error.argumentPath.join('.')}`\n    const prevError = invalidArgsError.get(key)\n    if (!prevError) {\n      invalidArgsError.set(key, error)\n    } else {\n      invalidArgsError.set(key, {\n        ...error,\n        argument: {\n          ...error.argument,\n          typeNames: uniqueConcat(prevError.argument.typeNames, error.argument.typeNames),\n        },\n      })\n    }\n  }\n\n  result.push(...invalidArgsError.values())\n  return result\n}\n\nfunction uniqueConcat<T>(head: T[], tail: T[]): T[] {\n  return [...new Set(head.concat(tail))]\n}\n\n/**\n * Function that attempts to pick the best error from the list\n * by ranking them. In most cases, highest ranking error would be the one\n * which has the longest combined \"selectionPath\" + \"argumentPath\". Justification\n * for that is that type that made it deeper into validation tree before failing\n * is probably closer to the one user actually wanted to do.\n *\n * However, if two errors are at the same depth level, we introduce additional ranking based\n * on error type. See `getErrorTypeScore` function for details\n * @param errors\n * @returns\n */\nfunction getBestScoringError(errors: NonUnionError[]) {\n  return maxWithComparator(errors, (errorA, errorB) => {\n    const aPathLength = getCombinedPathLength(errorA)\n    const bPathLength = getCombinedPathLength(errorB)\n    if (aPathLength !== bPathLength) {\n      return aPathLength - bPathLength\n    }\n    return getErrorTypeScore(errorA) - getErrorTypeScore(errorB)\n  })\n}\n\nfunction getCombinedPathLength(error: EngineValidationError) {\n  let score = 0\n  if (Array.isArray(error['selectionPath'])) {\n    score += error['selectionPath'].length\n  }\n\n  if (Array.isArray(error['argumentPath'])) {\n    score += error['argumentPath'].length\n  }\n  return score\n}\n\n/**\n * Function is invoked to determine most relevant error based on its type.\n * Specific numbers returned from this function do not really matter, it's only\n * important how they compare relatively to each other.\n *\n * Current logic is:\n * - InvalidArgumentValue/ValueTooLarge is treated as the best possible error to display\n * since when it is present we know that the field causing the error is defined on the schema\n * and provided value has correct type, it's just that value violates some other constraint.\n * - Next candidate is `InvalidArgumentType` error. We know the field user specified can exists in\n * this spot, it's just that value provided has incorrect type.\n * - All other engine-side errors follow. At that point it's difficult to say which of them is more relevant,\n * so we treat them equally. We might adjust this logic in the future.\n * - RequiredArgumentMissing is penalized because this error is often used to disambiguate\n * union types and what is required in one arm of the union might be fine to leave out in another\n * @param error\n * @returns\n */\nfunction getErrorTypeScore(error: EngineValidationError): number {\n  switch (error.kind) {\n    case 'InvalidArgumentValue':\n    case 'ValueTooLarge':\n      return 20\n    case 'InvalidArgumentType':\n      return 10\n    case 'RequiredArgumentMissing':\n      return -10\n    default:\n      return 0\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { SuggestionObjectValue } from './SuggestionObjectValue'\n\nexport class ObjectFieldSuggestion implements ErrorBasicBuilder {\n  public isRequired = false\n  constructor(\n    readonly name: string,\n    readonly value: string | SuggestionObjectValue,\n  ) {}\n\n  makeRequired() {\n    this.isRequired = true\n    return this\n  }\n\n  write(writer: ErrorWriter): void {\n    const {\n      colors: { green },\n    } = writer.context\n\n    writer.addMarginSymbol(green(this.isRequired ? '+' : '?'))\n    writer.write(green(this.name))\n\n    if (!this.isRequired) {\n      writer.write(green('?'))\n    }\n\n    writer.write(green(`: `))\n    if (typeof this.value === 'string') {\n      writer.write(green(this.value))\n    } else {\n      writer.write(this.value)\n    }\n  }\n}\n", "import { INDENT_SIZE } from '@prisma/ts-builders'\n\nimport { ArrayValue } from './ArrayValue'\nimport { ErrorWriter, fieldsSeparator } from './base'\nimport { Field } from './Field'\nimport { FormattedString } from './FormattedString'\nimport { ObjectField } from './ObjectField'\nimport { ObjectFieldSuggestion } from './ObjectFieldSuggestion'\nimport { Value } from './Value'\n\ntype SelectionParent = {\n  kind: 'include' | 'select'\n  value: ObjectValue\n}\n\n/**\n * Class for representing object value within rendering tree. Also used for accessing\n * different fields of the object.\n *\n * Terminology used within:\n * - selection parent = either `select` or `include` property value. For example for object\n * `{ select: { posts: true }}`, selection parent is `{ posts: true }`\n * - sub selection: value of a property of selection parent. Can be deep. In that case, specified\n * path is expected to not contain either `select` or `include` values in between (the way engine reports `selectionPath`).\n * For example, for this query:\n *\n * {\n *   include: {\n *     posts: {\n *       select: { attachments: { where: { published: true }} }\n *     }\n *   }\n * }\n * Value of sub selection at path [posts, attachments] is { where: { published: true }}\n */\nexport class ObjectValue extends Value {\n  private fields: Record<string, ObjectField> = {}\n  private suggestions: ObjectFieldSuggestion[] = []\n\n  addField(field: ObjectField) {\n    this.fields[field.name] = field\n  }\n\n  addSuggestion(suggestion: ObjectFieldSuggestion) {\n    this.suggestions.push(suggestion)\n  }\n\n  getField(key: string): ObjectField | undefined {\n    return this.fields[key]\n  }\n\n  getDeepField(path: string[]): Field | undefined {\n    const [head, ...tail] = path\n    const firstField = this.getField(head)\n    if (!firstField) {\n      return undefined\n    }\n    let field: Field = firstField\n    for (const segment of tail) {\n      let nextField: Field | undefined\n\n      if (field.value instanceof ObjectValue) {\n        nextField = field.value.getField(segment)\n      } else if (field.value instanceof ArrayValue) {\n        nextField = field.value.getField(Number(segment))\n      }\n      if (!nextField) {\n        return undefined\n      }\n      field = nextField\n    }\n    return field\n  }\n\n  getDeepFieldValue(path: string[]) {\n    if (path.length === 0) {\n      return this\n    }\n    return this.getDeepField(path)?.value\n  }\n\n  hasField(key: string) {\n    return Boolean(this.getField(key))\n  }\n\n  removeAllFields() {\n    this.fields = {}\n  }\n\n  removeField(key: string) {\n    delete this.fields[key]\n  }\n\n  getFields() {\n    return this.fields\n  }\n\n  isEmpty(): boolean {\n    return Object.keys(this.fields).length === 0\n  }\n\n  getFieldValue(key: string): Value | undefined {\n    return this.getField(key)?.value\n  }\n\n  getDeepSubSelectionValue(path: string[]): Value | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let selection: Value = this\n    for (const segment of path) {\n      if (!(selection instanceof ObjectValue)) {\n        return undefined\n      }\n      const next = selection.getSubSelectionValue(segment)\n      if (!next) {\n        return undefined\n      }\n\n      selection = next\n    }\n\n    return selection\n  }\n\n  getDeepSelectionParent(path: string[]): SelectionParent | undefined {\n    const thisParent = this.getSelectionParent()\n    if (!thisParent) {\n      return undefined\n    }\n\n    let parent = thisParent\n\n    for (const segment of path) {\n      const next = parent.value.getFieldValue(segment)\n      if (!next || !(next instanceof ObjectValue)) {\n        return undefined\n      }\n\n      const nextParent = next.getSelectionParent()\n      if (!nextParent) {\n        return undefined\n      }\n      parent = nextParent\n    }\n\n    return parent\n  }\n\n  getSelectionParent(): SelectionParent | undefined {\n    const select = this.getField('select')?.value.asObject()\n    if (select) {\n      return { kind: 'select', value: select }\n    }\n\n    const include = this.getField('include')?.value.asObject()\n    if (include) {\n      return { kind: 'include', value: include }\n    }\n    return undefined\n  }\n\n  getSubSelectionValue(key: string): Value | undefined {\n    return this.getSelectionParent()?.value.fields[key].value\n  }\n\n  override getPrintWidth(): number {\n    const fields = Object.values(this.fields)\n    if (fields.length == 0) {\n      return 2 // {}\n    }\n    const maxFieldWidth = Math.max(...fields.map((f) => f.getPrintWidth()))\n    return maxFieldWidth + INDENT_SIZE\n  }\n\n  override write(writer: ErrorWriter): void {\n    const fields = Object.values(this.fields)\n    if (fields.length === 0 && this.suggestions.length === 0) {\n      this.writeEmpty(writer)\n      return\n    }\n\n    this.writeWithContents(writer, fields)\n  }\n\n  override asObject(): ObjectValue {\n    return this\n  }\n\n  private writeEmpty(writer: ErrorWriter) {\n    const output = new FormattedString('{}')\n    if (this.hasError) {\n      output.setColor(writer.context.colors.red).underline()\n    }\n\n    writer.write(output)\n  }\n\n  private writeWithContents(writer: ErrorWriter, fields: ObjectField[]) {\n    writer.writeLine('{').withIndent(() => {\n      writer.writeJoined(fieldsSeparator, [...fields, ...this.suggestions]).newLine()\n    })\n\n    writer.write('}')\n    if (this.hasError) {\n      writer.afterNextNewline(() => {\n        writer.writeLine(writer.context.colors.red('~'.repeat(this.getPrintWidth())))\n      })\n    }\n  }\n}\n", "export * from './AnyDeclarationBuilder'\nexport * from './ArraySpread'\nexport * from './ArrayType'\nexport * from './BasicBuilder'\nexport * from './Class'\nexport * from './ConditionalType'\nexport * from './ConstDeclaration'\nexport * from './DocComment'\nexport * from './Export'\nexport * from './ExportFrom'\nexport * from './File'\nexport * from './FunctionCall'\nexport * from './FunctionType'\nexport * from './GenericParameter'\nexport * from './helpers'\nexport * from './Import'\nexport * from './Interface'\nexport * from './IntersectionType'\nexport * from './KeyofType'\nexport * from './KeyType'\nexport * from './Method'\nexport * from './NamedType'\nexport * from './NamedValue'\nexport * from './NamespaceDeclaration'\nexport * from './ObjectType'\nexport * from './Parameter'\nexport * from './PrimitiveType'\nexport * from './Property'\nexport * from './stringify'\nexport * from './StringLiteralType'\nexport * from './TupleType'\nexport * from './TypeBuilder'\nexport * from './TypeDeclaration'\nexport * from './UnionType'\nexport * from './ValueBuilder'\nexport * from './WellKnownSymbol'\nexport * from './Writer'\n", "import type { BasicBuilder } from './BasicBuilder'\n\nexport const INDENT_SIZE = 2\n/**\n * Helper class for building long multi-line formatted strings from building blocks.\n * Can use either plain strings or `Builder` objects, that would encapsulate formatting logic.\n */\nexport class Writer<ContextType = undefined> {\n  private lines: string[] = []\n  private currentLine = ''\n  private currentIndent = 0\n  private marginSymbol?: string\n  private afterNextNewLineCallback?: () => void\n\n  constructor(\n    startingIndent = 0,\n    readonly context: ContextType,\n  ) {\n    this.currentIndent = startingIndent\n  }\n\n  /**\n   * Adds provided value to the current line. Does not end the line.\n   *\n   * @param value\n   * @returns\n   */\n  write(value: string | BasicBuilder<ContextType>): this {\n    if (typeof value === 'string') {\n      this.currentLine += value\n    } else {\n      value.write(this)\n    }\n    return this\n  }\n\n  /**\n   * Adds several `values` to the current line, separated by `separator`. Both values and separator\n   * can also be `Builder` instances for more advanced formatting.\n   *\n   * @param separator\n   * @param values\n   * @param writeItem allow to customize how individual item is written\n   * @returns\n   */\n  writeJoined<T extends string | BasicBuilder<ContextType>>(\n    separator: string | BasicBuilder<ContextType>,\n    values: T[],\n    writeItem: (item: T, writer: this) => void = (item, w) => w.write(item),\n  ): this {\n    const last = values.length - 1\n    for (let i = 0; i < values.length; i++) {\n      writeItem(values[i], this)\n      if (i !== last) {\n        this.write(separator)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Adds a string to current line, flushes current line and starts a new line.\n   * @param line\n   * @returns\n   */\n  writeLine(line: string | BasicBuilder<ContextType>): this {\n    return this.write(line).newLine()\n  }\n\n  /**\n   * Flushes current line and starts a new line. New line starts at previously configured indentation level\n   * @returns\n   */\n  newLine(): this {\n    this.lines.push(this.indentedCurrentLine())\n    this.currentLine = ''\n    this.marginSymbol = undefined\n\n    const afterNextNewLineCallback = this.afterNextNewLineCallback\n    this.afterNextNewLineCallback = undefined\n    afterNextNewLineCallback?.()\n    return this\n  }\n\n  /**\n   * Increases indentation level by 1, calls provided callback and then decreases indentation again.\n   * Could be used for writing indented blocks of text:\n   *\n   * @example\n   * ```ts\n   * writer\n   *   .writeLine('{')\n   *   .withIndent(() => {\n   *      writer.writeLine('foo: 123');\n   *      writer.writeLine('bar: 456');\n   *   })\n   *   .writeLine('}')\n   * ```\n   * @param callback\n   * @returns\n   */\n  withIndent(callback: (writer: this) => void): this {\n    this.indent()\n    callback(this)\n    this.unindent()\n    return this\n  }\n\n  /**\n   * Calls provided callback next time when new line is started.\n   * Callback is called after old line have already been flushed and a new\n   * line have been started. Can be used for adding \"between the lines\" decorations,\n   * such as underlines.\n   *\n   * @param callback\n   * @returns\n   */\n  afterNextNewline(callback: () => void) {\n    this.afterNextNewLineCallback = callback\n    return this\n  }\n\n  /**\n   * Increases indentation level of the current line by 1\n   * @returns\n   */\n  indent(): this {\n    this.currentIndent++\n    return this\n  }\n\n  /**\n   * Decreases indentation level of the current line by 1, if it is possible\n   * @returns\n   */\n  unindent(): this {\n    if (this.currentIndent > 0) {\n      this.currentIndent--\n    }\n    return this\n  }\n\n  /**\n   * Adds a symbol, that will replace the first character of the current line (including indentation)\n   * when it is flushed. Can be used for adding markers to the line.\n   *\n   * Note: if indentation level of the line is 0, it will replace the first actually printed character\n   * of the line. Use with caution.\n   * @param symbol\n   * @returns\n   */\n  addMarginSymbol(symbol: string): this {\n    this.marginSymbol = symbol\n    return this\n  }\n\n  toString() {\n    return this.lines.concat(this.indentedCurrentLine()).join('\\n')\n  }\n\n  getCurrentLineLength() {\n    return this.currentLine.length\n  }\n\n  private indentedCurrentLine(): string {\n    const line = this.currentLine.padStart(this.currentLine.length + INDENT_SIZE * this.currentIndent)\n    if (this.marginSymbol) {\n      return this.marginSymbol + line.slice(1)\n    }\n    return line\n  }\n}\n", "import { INDENT_SIZE } from '@prisma/ts-builders'\n\nimport { ArrayField } from './ArrayField'\nimport { ErrorWriter, fieldsSeparator } from './base'\nimport { FormattedString } from './FormattedString'\nimport { Value } from './Value'\n\nexport class ArrayValue extends Value {\n  private items: ArrayField[] = []\n\n  addItem(item: Value): this {\n    this.items.push(new ArrayField(item))\n    return this\n  }\n\n  getField(index: number): ArrayField | undefined {\n    return this.items[index]\n  }\n\n  override getPrintWidth(): number {\n    if (this.items.length === 0) {\n      return 2\n    }\n    const maxItemWidth = Math.max(...this.items.map((item) => item.value.getPrintWidth()))\n    return maxItemWidth + INDENT_SIZE\n  }\n\n  override write(writer: ErrorWriter): void {\n    if (this.items.length === 0) {\n      this.writeEmpty(writer)\n      return\n    }\n    this.writeWithItems(writer)\n  }\n\n  private writeEmpty(writer: ErrorWriter) {\n    const output = new FormattedString('[]')\n    if (this.hasError) {\n      output.setColor(writer.context.colors.red).underline()\n    }\n    writer.write(output)\n  }\n\n  private writeWithItems(writer: ErrorWriter) {\n    const { colors } = writer.context\n\n    writer\n      .writeLine('[')\n      .withIndent(() => writer.writeJoined(fieldsSeparator, this.items).newLine())\n      .write(']')\n\n    if (this.hasError) {\n      writer.afterNextNewline(() => {\n        writer.writeLine(colors.red('~'.repeat(this.getPrintWidth())))\n      })\n    }\n  }\n\n  override asObject(): undefined {\n    return undefined\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { Field } from './Field'\nimport { Value } from './Value'\n\nexport class ArrayField implements ErrorBasicBuilder, Field {\n  constructor(public value: Value) {}\n  write(writer: ErrorWriter): void {\n    writer.write(this.value)\n  }\n\n  markAsError(): void {\n    this.value.markAsError()\n  }\n}\n", "import { BasicBuilder, Writer } from '@prisma/ts-builders'\nimport { bold, dim, green, red } from 'kleur/colors'\n\ntype ColorFn = (str: string) => string\nexport type Colors = {\n  bold: ColorFn\n  red: ColorFn\n  green: ColorFn\n  dim: ColorFn\n  // if false, all color functions are useless\n  readonly enabled: boolean\n}\n\nconst noop = (str: string) => str\n\nexport const inactiveColors: Colors = {\n  bold: noop,\n  red: noop,\n  green: noop,\n  dim: noop,\n  enabled: false,\n}\n\nexport const activeColors: Colors = {\n  bold,\n  red,\n  green,\n  dim,\n  enabled: true,\n}\n\nexport type ErrorRenderContext = {\n  colors: Colors\n}\n\nexport type ErrorWriter = Writer<ErrorRenderContext>\nexport type ErrorBasicBuilder = BasicBuilder<ErrorRenderContext>\n\nexport const fieldsSeparator: ErrorBasicBuilder = {\n  write(writer) {\n    writer.writeLine(',')\n  },\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\n\nexport type ColorFn = (str: string) => string\n\nexport class FormattedString implements ErrorBasicBuilder {\n  private isUnderlined = false\n  private color: ColorFn = (str) => str\n  constructor(public contents: string) {}\n\n  underline(): this {\n    this.isUnderlined = true\n    return this\n  }\n\n  setColor(color: ColorFn): this {\n    this.color = color\n    return this\n  }\n\n  write(writer: ErrorWriter): void {\n    const paddingSize = writer.getCurrentLineLength()\n    writer.write(this.color(this.contents))\n    if (this.isUnderlined) {\n      writer.afterNextNewline(() => {\n        writer.write(' '.repeat(paddingSize)).writeLine(this.color('~'.repeat(this.contents.length)))\n      })\n    }\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { ObjectValue } from './ObjectValue'\n\nexport abstract class Value implements ErrorBasicBuilder {\n  abstract write(writer: ErrorWriter): void\n\n  /**\n   * Returns total width the value when it is rendered. Used\n   * for determining underline width.\n   */\n  abstract getPrintWidth(): number\n\n  public hasError = false\n\n  markAsError(): this {\n    this.hasError = true\n    return this\n  }\n\n  abstract asObject(): ObjectValue | undefined\n}\n", "import { ErrorWriter } from './base'\nimport { FormattedString } from './FormattedString'\nimport { Value } from './Value'\n\nexport class ScalarValue extends Value {\n  constructor(readonly text: string) {\n    super()\n  }\n\n  override getPrintWidth(): number {\n    return this.text.length\n  }\n\n  override write(writer: ErrorWriter): void {\n    const string = new FormattedString(this.text)\n    if (this.hasError) {\n      string.underline().setColor(writer.context.colors.red)\n    }\n    writer.write(string)\n  }\n\n  override asObject(): undefined {\n    return undefined\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter, fieldsSeparator } from './base'\n\nexport class SuggestionObjectValue implements ErrorBasicBuilder {\n  private fields: ErrorBasicBuilder[] = []\n\n  addField(name: string, value: string) {\n    this.fields.push({\n      write(writer) {\n        const { green, dim } = writer.context.colors\n        writer.write(green(dim(`${name}: ${value}`))).addMarginSymbol(green(dim('+')))\n      },\n    })\n    return this\n  }\n\n  write(writer: ErrorWriter): void {\n    const {\n      colors: { green },\n    } = writer.context\n    writer\n      .writeLine(green('{'))\n      .withIndent(() => {\n        writer.writeJoined(fieldsSeparator, this.fields).newLine()\n      })\n      .write(green('}'))\n      .addMarginSymbol(green('+'))\n  }\n}\n", "import { uncapitalize } from '@prisma/client-common'\nimport { Writer } from '@prisma/ts-builders'\n\nimport { ErrorFormat } from '../../getPrismaClient'\nimport { isValidDate } from '../../utils/date'\nimport { isDecimalJsLike } from '../../utils/decimalJsLike'\nimport { isFieldRef } from '../model/FieldRef'\nimport { ObjectEnumValue } from '../types/exported/ObjectEnums'\nimport { ArrayValue } from './ArrayValue'\nimport { activeColors, Colors, ErrorBasicBuilder, ErrorWriter, inactiveColors } from './base'\nimport { ObjectField } from './ObjectField'\nimport { ObjectValue } from './ObjectValue'\nimport { ScalarValue } from './ScalarValue'\n\ntype MessageRender = (colors: Colors) => string\n\nexport class ArgumentsRenderingTree implements ErrorBasicBuilder {\n  readonly arguments: ObjectValue\n  private errorMessages: MessageRender[] = []\n\n  constructor(args: ObjectValue) {\n    this.arguments = args\n  }\n\n  write(writer: ErrorWriter): void {\n    writer.write(this.arguments)\n  }\n\n  addErrorMessage(renderer: MessageRender) {\n    this.errorMessages.push(renderer)\n  }\n\n  renderAllMessages(colors: Colors): string {\n    return this.errorMessages.map((messageRenderer) => messageRenderer(colors)).join('\\n')\n  }\n}\n\n/**\n * Given JS call arguments, produces rendering tree for outputting rich errors into the console\n * Difference between rendering tree and plain object is that fields and values can have different attributes:\n * colors, underlines, markers on the margins. `applyValidationError` function will then apply specific formatting\n * to the rendering tree.\n *\n * @param args\n * @returns\n */\nexport function buildArgumentsRenderingTree(args: Record<PropertyKey, unknown>): ArgumentsRenderingTree {\n  return new ArgumentsRenderingTree(buildInputObject(args))\n}\n\nfunction buildInputObject(inputObject: Record<PropertyKey, unknown>) {\n  const object = new ObjectValue()\n\n  for (const [key, value] of Object.entries(inputObject)) {\n    const field = new ObjectField(key, buildInputValue(value))\n    object.addField(field)\n  }\n  return object\n}\n\nfunction buildInputValue(value: unknown) {\n  if (typeof value === 'string') {\n    return new ScalarValue(JSON.stringify(value))\n  }\n\n  if (typeof value === 'number' || typeof value === 'boolean') {\n    return new ScalarValue(String(value))\n  }\n\n  if (typeof value === 'bigint') {\n    return new ScalarValue(`${value}n`)\n  }\n\n  if (value === null) {\n    return new ScalarValue('null')\n  }\n\n  if (value === undefined) {\n    return new ScalarValue('undefined')\n  }\n\n  if (isDecimalJsLike(value)) {\n    return new ScalarValue(`new Prisma.Decimal(\"${value.toFixed()}\")`)\n  }\n\n  if (value instanceof Uint8Array) {\n    if (Buffer.isBuffer(value)) {\n      return new ScalarValue(`Buffer.alloc(${value.byteLength})`)\n    }\n    return new ScalarValue(`new Uint8Array(${value.byteLength})`)\n  }\n\n  if (value instanceof Date) {\n    const dateStr = isValidDate(value) ? value.toISOString() : 'Invalid Date'\n    return new ScalarValue(`new Date(\"${dateStr}\")`)\n  }\n\n  if (value instanceof ObjectEnumValue) {\n    return new ScalarValue(`Prisma.${value._getName()}`)\n  }\n\n  if (isFieldRef(value)) {\n    return new ScalarValue(`prisma.${uncapitalize(value.modelName)}.$fields.${value.name}`)\n  }\n\n  if (Array.isArray(value)) {\n    return buildInputArray(value)\n  }\n\n  if (typeof value === 'object') {\n    return buildInputObject(value as Record<PropertyKey, unknown>)\n  }\n\n  return new ScalarValue(Object.prototype.toString.call(value))\n}\n\nfunction buildInputArray(array: unknown[]) {\n  const result = new ArrayValue()\n  for (const item of array) {\n    result.addItem(buildInputValue(item))\n  }\n  return result\n}\n\nexport function renderArgsTree(argsTree: ArgumentsRenderingTree, errorFormat: ErrorFormat) {\n  const colors = errorFormat === 'pretty' ? activeColors : inactiveColors\n\n  const message = argsTree.renderAllMessages(colors)\n  const args = new Writer(0, { colors }).write(argsTree).toString()\n\n  return { message, args }\n}\n", "import { FieldRef } from '../types/exported/FieldRef'\n\nexport class FieldRefImpl<Model, FieldType> implements FieldRef<Model, FieldType> {\n  public readonly modelName: Model\n  public readonly name: string\n  public readonly typeName: FieldType\n  public readonly isList: boolean\n  public readonly isEnum: boolean\n\n  constructor(modelName: Model, name: string, fieldType: FieldType, isList: boolean, isEnum: boolean) {\n    this.modelName = modelName\n    this.name = name\n    this.typeName = fieldType\n    this.isList = isList\n    this.isEnum = isEnum\n  }\n\n  _toGraphQLInputType() {\n    const listPrefix = this.isList ? `List` : ''\n    const enumPrefix = this.isEnum ? 'Enum' : ''\n\n    return `${listPrefix}${enumPrefix}${this.typeName}FieldRefInput<${this.modelName}>`\n  }\n}\n\nexport function isFieldRef(value: unknown): value is FieldRef<string, unknown> {\n  return value instanceof FieldRefImpl\n}\n", "/**\n * Module-private symbol used to distinguish between instances of\n * `ObjectEnumValue` created inside and outside this module.\n */\nconst secret = Symbol()\n\n/**\n * Emulate a private property via a WeakMap manually. Using native private\n * properties is a breaking change for downstream users with minimal TypeScript\n * configs, because TypeScript uses ES3 as the default target.\n *\n * TODO: replace this with a `#representation` private property in the\n * `ObjectEnumValue` class and document minimal required `target` for TypeScript.\n */\nconst representations = new WeakMap<ObjectEnumValue, string>()\n\n/**\n * Base class for unique values of object-valued enums.\n */\nexport abstract class ObjectEnumValue {\n  constructor(arg?: symbol) {\n    if (arg === secret) {\n      representations.set(this, `Prisma.${this._getName()}`)\n    } else {\n      representations.set(this, `new Prisma.${this._getNamespace()}.${this._getName()}()`)\n    }\n  }\n\n  abstract _getNamespace(): string\n\n  _getName() {\n    return this.constructor.name\n  }\n\n  toString() {\n    return representations.get(this)!\n  }\n}\n\nclass NullTypesEnumValue extends ObjectEnumValue {\n  override _getNamespace() {\n    return 'NullTypes'\n  }\n}\n\nclass DbNull extends NullTypesEnumValue {\n  // Phantom private property to prevent structural type equality\n  // eslint-disable-next-line no-unused-private-class-members\n  readonly #_brand_DbNull!: void\n}\nsetClassName(DbNull, 'DbNull')\n\nclass JsonNull extends NullTypesEnumValue {\n  // Phantom private property to prevent structural type equality\n  // eslint-disable-next-line no-unused-private-class-members\n  readonly #_brand_JsonNull!: void\n}\nsetClassName(JsonNull, 'JsonNull')\n\nclass AnyNull extends NullTypesEnumValue {\n  // Phantom private property to prevent structural type equality\n  // eslint-disable-next-line no-unused-private-class-members\n  readonly #_brand_AnyNull!: void\n}\nsetClassName(AnyNull, 'AnyNull')\n\nexport const objectEnumValues = {\n  classes: {\n    DbNull,\n    JsonNull,\n    AnyNull,\n  },\n  instances: {\n    DbNull: new DbNull(secret),\n    JsonNull: new JsonNull(secret),\n    AnyNull: new AnyNull(secret),\n  },\n}\n\n/**\n * See helper in @internals package. Can not be used here\n * because importing internal breaks browser build.\n *\n * @param classObject\n * @param name\n */\nfunction setClassName(classObject: Function, name: string) {\n  Object.defineProperty(classObject, 'name', {\n    value: name,\n    configurable: true,\n  })\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { Field } from './Field'\nimport { FormattedString } from './FormattedString'\nimport { Value } from './Value'\n\nconst separator = ': '\nexport class ObjectField implements ErrorBasicBuilder, Field {\n  hasError = false\n  constructor(\n    readonly name: string,\n    public value: Value,\n  ) {}\n\n  markAsError() {\n    this.hasError = true\n  }\n\n  getPrintWidth() {\n    return this.name.length + this.value.getPrintWidth() + separator.length\n  }\n\n  write(writer: ErrorWriter): void {\n    const name = new FormattedString(this.name)\n    if (this.hasError) {\n      name.underline().setColor(writer.context.colors.red)\n    }\n    writer.write(name).write(separator).write(this.value)\n  }\n}\n", "import { Cache, lazyProperty } from '@prisma/client-common'\n\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { ClientArg, ExtensionArgs, ModelArg, QueryOptionsCb } from '../types/exported/ExtensionArgs'\nimport { BatchQueryOptionsCb, QueryOptionsPrivate } from '../types/internal/ExtensionsInternalArgs'\nimport { ComputedFieldsMap, getComputedFields } from './resultUtils'\n\nclass MergedExtensionsListNode {\n  private computedFieldsCache = new Cache<string, ComputedFieldsMap | undefined>()\n  private modelExtensionsCache = new Cache<string, ModelArg | undefined>()\n  private queryCallbacksCache = new Cache<string, QueryOptionsCb[]>()\n\n  private clientExtensions = lazyProperty(() => {\n    if (!this.extension.client) {\n      return this.previous?.getAllClientExtensions()\n    }\n\n    return {\n      ...this.previous?.getAllClientExtensions(),\n      ...this.extension.client,\n    }\n  })\n\n  private batchCallbacks = lazyProperty(() => {\n    const previous: BatchQueryOptionsCb[] = this.previous?.getAllBatchQueryCallbacks() ?? []\n    const newCb = (this.extension as QueryOptionsPrivate).query?.$__internalBatch\n    if (!newCb) {\n      return previous\n    }\n    return previous.concat(newCb)\n  })\n\n  constructor(\n    public extension: ExtensionArgs,\n    public previous?: MergedExtensionsListNode,\n  ) {}\n\n  getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined {\n    return this.computedFieldsCache.getOrCreate(dmmfModelName, () => {\n      return getComputedFields(this.previous?.getAllComputedFields(dmmfModelName), this.extension, dmmfModelName)\n    })\n  }\n\n  getAllClientExtensions(): ClientArg | undefined {\n    return this.clientExtensions.get()\n  }\n\n  getAllModelExtensions(dmmfModelName: string): ModelArg | undefined {\n    return this.modelExtensionsCache.getOrCreate(dmmfModelName, () => {\n      const jsModelName = dmmfToJSModelName(dmmfModelName)\n      if (!this.extension.model || !(this.extension.model[jsModelName] || this.extension.model.$allModels)) {\n        return this.previous?.getAllModelExtensions(dmmfModelName)\n      }\n\n      return {\n        ...this.previous?.getAllModelExtensions(dmmfModelName),\n        ...this.extension.model.$allModels,\n        ...this.extension.model[jsModelName],\n      }\n    })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  getAllQueryCallbacks(jsModelName: string | '$none', operation: string) {\n    return this.queryCallbacksCache.getOrCreate(`${jsModelName}:${operation}`, () => {\n      const prevCbs = this.previous?.getAllQueryCallbacks(jsModelName, operation) ?? []\n      const newCbs: QueryOptionsCb[] = []\n      const query = this.extension.query\n\n      if (!query || !(query[jsModelName] || query['$allModels'] || query[operation] || query['$allOperations'])) {\n        return prevCbs\n      }\n\n      if (query[jsModelName] !== undefined) {\n        if (query[jsModelName][operation] !== undefined) {\n          newCbs.push(query[jsModelName][operation])\n        }\n\n        // when the model-bound extension has a wildcard for the operation\n        if (query[jsModelName]['$allOperations'] !== undefined) {\n          newCbs.push(query[jsModelName]['$allOperations'])\n        }\n      }\n\n      // when the extension isn't model-bound, apply it to all models\n      // '$none' is a special case for top-level operations without model\n      if (jsModelName !== '$none' && query['$allModels'] !== undefined) {\n        if (query['$allModels'][operation] !== undefined) {\n          newCbs.push(query['$allModels'][operation])\n        }\n\n        // when the non-model-bound extension has a wildcard for the operation\n        if (query['$allModels']['$allOperations'] !== undefined) {\n          newCbs.push(query['$allModels']['$allOperations'])\n        }\n      }\n\n      // when the extension is not bound to a model & is a top-level operation\n      if (query[operation] !== undefined) {\n        newCbs.push(query[operation] as QueryOptionsCb)\n      }\n\n      // when the extension is not bound to a model & is any top-level operation\n      if (query['$allOperations'] !== undefined) {\n        newCbs.push(query['$allOperations'] as QueryOptionsCb)\n      }\n\n      return prevCbs.concat(newCbs)\n    })\n  }\n\n  getAllBatchQueryCallbacks() {\n    return this.batchCallbacks.get()\n  }\n}\n\n/**\n * Class that holds the list of all extensions, applied to particular instance,\n * as well as resolved versions of the components that need to apply on\n * different levels. Main idea of this class: avoid re-resolving as much of the\n * stuff as possible when new extensions are added while also delaying the\n * resolve until the point it is actually needed. For example, computed fields\n * of the model won't be resolved unless the model is actually queried. Neither\n * adding extensions with `client` component only cause other components to\n * recompute.\n */\nexport class MergedExtensionsList {\n  private constructor(private head?: MergedExtensionsListNode) {}\n\n  static empty() {\n    return new MergedExtensionsList()\n  }\n\n  static single(extension: ExtensionArgs) {\n    return new MergedExtensionsList(new MergedExtensionsListNode(extension))\n  }\n\n  isEmpty(): boolean {\n    return this.head === undefined\n  }\n\n  append(extension: ExtensionArgs) {\n    return new MergedExtensionsList(new MergedExtensionsListNode(extension, this.head))\n  }\n\n  getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined {\n    return this.head?.getAllComputedFields(dmmfModelName)\n  }\n\n  getAllClientExtensions() {\n    return this.head?.getAllClientExtensions()\n  }\n\n  getAllModelExtensions(dmmfModelName: string) {\n    return this.head?.getAllModelExtensions(dmmfModelName)\n  }\n\n  getAllQueryCallbacks(jsModelName: string, operation: string) {\n    return this.head?.getAllQueryCallbacks(jsModelName, operation) ?? []\n  }\n\n  getAllBatchQueryCallbacks() {\n    return this.head?.getAllBatchQueryCallbacks() ?? []\n  }\n}\n", "/**\n * Transforms a model name coming from the DMMF to a runtime model name.\n * @param name\n * @returns\n */\nexport function dmmfToJSModelName(name: string) {\n  return name.replace(/^./, (str) => str.toLowerCase())\n}\n", "import { Cache } from '@prisma/client-common'\nimport { mapObjectValues } from '@prisma/internals'\n\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { ExtensionArgs, ResultArg, ResultArgsFieldCompute } from '../types/exported/ExtensionArgs'\nimport { Omission, Selection } from '../types/exported/JsApi'\n\nexport type ComputedField = {\n  name: string\n  needs: string[]\n  compute: ResultArgsFieldCompute\n}\n\nexport type ComputedFieldsMap = {\n  [fieldName: string]: ComputedField\n}\n\n/**\n * Given the list of previously resolved computed fields, new extension and dmmf model name, produces a map\n * of all computed fields that may be applied to this model, accounting for all previous and past extensions.\n *\n * All naming conflicts which could be produced by the plain list of extensions are resolved as follows:\n * - extension, that declared later always wins\n * - in a single extension, specific model takes precedence over $allModels\n *\n * Additionally, resolves all `needs` dependencies down to the model fields. For example,\n * if `nameAndTitle` field depends on `fullName` computed field and `title` model field and\n * `fullName` field depends on `firstName` and `lastName` field, full list of `nameAndTitle` dependencies\n * would be `firstName`, `lastName`, `title`.\n * @param previousComputedFields\n * @param extension\n * @param dmmfModelName\n * @returns\n */\nexport function getComputedFields(\n  previousComputedFields: ComputedFieldsMap | undefined,\n  extension: ExtensionArgs,\n  dmmfModelName: string,\n) {\n  const jsName = dmmfToJSModelName(dmmfModelName)\n  if (!extension.result || !(extension.result.$allModels || extension.result[jsName])) {\n    return previousComputedFields\n  }\n\n  return resolveDependencies({\n    ...previousComputedFields,\n    ...getComputedFieldsFromModel(extension.name, previousComputedFields, extension.result.$allModels),\n    ...getComputedFieldsFromModel(extension.name, previousComputedFields, extension.result[jsName]),\n  })\n}\n\nexport function resolveDependencies(computedFields: ComputedFieldsMap): ComputedFieldsMap {\n  const cache = new Cache<string, string[]>()\n  const resolveNeeds = (fieldName: string, visitedFields: Set<string>) => {\n    return cache.getOrCreate(fieldName, () => {\n      if (visitedFields.has(fieldName)) {\n        return [fieldName]\n      }\n      visitedFields.add(fieldName)\n      if (!computedFields[fieldName]) {\n        return [fieldName]\n      }\n      return computedFields[fieldName].needs.flatMap((fieldDep) => resolveNeeds(fieldDep, visitedFields))\n    })\n  }\n\n  return mapObjectValues(computedFields, (field) => {\n    return {\n      ...field,\n      needs: resolveNeeds(field.name, new Set()),\n    }\n  })\n}\n\nfunction getComputedFieldsFromModel(\n  name: string | undefined,\n  previousComputedFields: ComputedFieldsMap | undefined,\n  modelResult: ResultArg | undefined,\n): ComputedFieldsMap {\n  if (!modelResult) {\n    return {}\n  }\n\n  return mapObjectValues(modelResult, ({ needs, compute }, fieldName) => ({\n    name: fieldName,\n    needs: needs ? Object.keys(needs).filter((key) => needs[key]) : [],\n    compute: composeCompute(previousComputedFields, fieldName, compute),\n  }))\n}\n\nfunction composeCompute(\n  previousComputedFields: ComputedFieldsMap | undefined,\n  fieldName: string,\n  nextCompute: ResultArgsFieldCompute,\n): ResultArgsFieldCompute {\n  const previousCompute = previousComputedFields?.[fieldName]?.compute\n  if (!previousCompute) {\n    return nextCompute\n  }\n  return (model) => {\n    return nextCompute({ ...model, [fieldName]: previousCompute(model) })\n  }\n}\n\nexport function computeEngineSideSelection(\n  selection: Selection,\n  computedFields: ComputedFieldsMap | undefined,\n): Selection {\n  if (!computedFields) {\n    return selection\n  }\n  const result = { ...selection }\n\n  for (const field of Object.values(computedFields)) {\n    if (!selection[field.name]) {\n      continue\n    }\n\n    for (const dependency of field.needs) {\n      result[dependency] = true\n    }\n  }\n  return result\n}\n\n/**\n * Given user-supplied omissions, computes the results to send to the engine, taking\n * into account dependencies of the computed field. Consider following example:\n *\n * ```\n * const xprisma = prisma.$extends({\n *       result: {\n *         user: {\n *           sanitizedPassword: {\n *             needs: { password: true },\n *             compute(user) {\n *               return sanitze(user.password)\n *             },\n *           },\n *         },\n *       },\n * })\n *\n * const user = await xprisma.user.findFirstOrThrow({\n *       omit: {\n *         password: true,\n *       },\n * })\n * ```\n *\n * In that case, user wants to omit the `password` but not `sanitizedPassword`.\n * Since `sanitizedPassword` can not be computed without `password`, we can not let\n * the engine handle omission in this case - we have to still query `password` from the\n * database and omit it on the client, after computing `sanitizedPassword`.\n *\n * This function removes the omission (thus, including the field into result set) if it is a dependency of\n * a non-omitted computed field. Client-side omission after we get a response is handled by `applyResultExtensions`\n *\n * @param omission\n * @param computedFields\n * @returns\n */\nexport function computeEngineSideOmissions(\n  omission: Omission,\n  computedFields: ComputedFieldsMap | undefined,\n): Omission {\n  if (!computedFields) {\n    return omission\n  }\n  const result = { ...omission }\n\n  for (const field of Object.values(computedFields)) {\n    if (omission[field.name]) {\n      continue\n    }\n\n    for (const dependency of field.needs) {\n      delete result[dependency]\n    }\n  }\n  return result\n}\n", "import { Param } from '../types/exported/Param'\n\nexport class ParamImpl<Type, Name extends string> implements Param<Type, Name> {\n  constructor(public readonly name: Name) {}\n}\n\nexport function isParam(value: unknown): value is Param<unknown, string> {\n  return value instanceof ParamImpl\n}\n\nexport function createParam(name: string): Param<unknown, string> {\n  return new ParamImpl(name)\n}\n", "import * as Extensions from './exported/Extensions'\nimport { OperationPayload } from './exported/Payload'\nimport * as Public from './exported/Public'\nimport * as Result from './exported/Result'\nimport * as Utils from './exported/Utils'\n\n/** Specific types */\nexport { Result }\nexport { Extensions }\nexport { Utils }\nexport { Public }\n\nexport { isSkip, Skip, skip } from './exported/Skip'\nexport { type UnknownTypedSql } from './exported/TypedSql'\n\n/** General types */\nexport { type OperationPayload as Payload }\n", "// private symbol that prevents direct construction of a class\nconst secret = Symbol()\n\nexport class Skip {\n  constructor(param?: symbol) {\n    if (param !== secret) {\n      throw new Error(`Skip instance can not be constructed directly`)\n    }\n  }\n\n  ifUndefined<T>(value: T | undefined): T | Skip {\n    if (value === undefined) {\n      return skip\n    }\n    return value\n  }\n}\n\nexport const skip = new Skip(secret)\n\nexport function isSkip(value: unknown): value is Skip {\n  return value instanceof Skip\n}\n", "import { Client } from '../../getPrismaClient'\nimport type { Metric, MetricHistogram, MetricHistogramBucket, Metrics } from '../engines'\nimport { PrismaClientValidationError } from '../errors/PrismaClientValidationError'\n\nexport type MetricsOptions = {\n  /**\n   * Labels to add to every metrics in key-value format\n   */\n  globalLabels?: Record<string, string>\n}\n\nfunction checkPreviewFeatureFlag(client: Client) {\n  if (!client._hasPreviewFlag('metrics')) {\n    throw new PrismaClientValidationError('`metrics` preview feature must be enabled in order to access metrics API', {\n      clientVersion: client._clientVersion,\n    })\n  }\n}\n\nexport class MetricsClient {\n  private _client: Client\n\n  constructor(client: Client) {\n    this._client = client\n  }\n\n  /**\n   * Returns all metrics gathered up to this point in prometheus format.\n   * Result of this call can be exposed directly to prometheus scraping endpoint\n   *\n   * @param options\n   * @returns\n   */\n  prometheus(options?: MetricsOptions): Promise<string> {\n    checkPreviewFeatureFlag(this._client)\n\n    return this._client._engine.metrics({ format: 'prometheus', ...options })\n  }\n\n  /**\n   * Returns all metrics gathered up to this point in prometheus format.\n   *\n   * @param options\n   * @returns\n   */\n  json(options?: MetricsOptions): Promise<Metrics> {\n    checkPreviewFeatureFlag(this._client)\n\n    return this._client._engine.metrics({ format: 'json', ...options })\n  }\n}\n\nexport type { Metric, MetricHistogram, MetricHistogramBucket, Metrics }\n", "import { BaseDMMF, lazyProperty, RuntimeDataModel } from '@prisma/client-common'\n\nexport function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel) {\n  const dmmfLazy = lazyProperty(() => runtimeDataModelToBaseDmmf(runtimeDataModel))\n\n  Object.defineProperty(target, 'dmmf', {\n    get: () => dmmfLazy.get(),\n  })\n}\n\nfunction runtimeDataModelToBaseDmmf(runtimeDataModel: RuntimeDataModel): BaseDMMF {\n  if (TARGET_BUILD_TYPE === 'wasm-engine-edge' || TARGET_BUILD_TYPE === 'wasm-compiler-edge') {\n    throw new Error('Prisma.dmmf is not available when running in edge runtimes.')\n  }\n\n  return {\n    datamodel: {\n      models: buildDMMFList(runtimeDataModel.models),\n      enums: buildDMMFList(runtimeDataModel.enums),\n      types: buildDMMFList(runtimeDataModel.types),\n    },\n  }\n}\n\nfunction buildDMMFList<T>(map: Record<string, T>): Array<T & { name: string }> {\n  return Object.entries(map).map(([name, props]) => ({ name, ...props }))\n}\n", "type TypedSqlInternal = {\n  sql: string\n  values: readonly unknown[]\n}\n\nconst internals = new WeakMap<TypedSql<any, any>, TypedSqlInternal>()\nconst TypedSqlMarker = '$$PrismaTypedSql'\n\nexport declare const PrivateResultType: unique symbol\n\nexport class TypedSql<Values extends readonly unknown[], Result> {\n  declare [PrivateResultType]: Result\n\n  constructor(sql: string, values: Values) {\n    internals.set(this, {\n      sql,\n      values,\n    })\n\n    Object.defineProperty(this, TypedSqlMarker, { value: TypedSqlMarker })\n  }\n\n  get sql(): string {\n    return internals.get(this)!.sql\n  }\n\n  get values(): Values {\n    return internals.get(this)!.values as Values\n  }\n}\n\nexport type UnknownTypedSql = TypedSql<unknown[], unknown>\n\nexport function makeTypedQueryFactory(sql: string) {\n  return (...values) => new TypedSql(sql, values)\n}\n\n// used so we could detect typed sql instances, created by different instance of runtime\n// or after hmr trigger\nexport function isTypedSql(value: unknown): value is UnknownTypedSql {\n  return value != null && value[TypedSqlMarker] === TypedSqlMarker\n}\n", "import type { Context } from '@opentelemetry/api'\nimport { GetPrismaClientConfig, RuntimeDataModel } from '@prisma/client-common'\nimport { clearLogs, Debug } from '@prisma/debug'\nimport type { SqlDriverAdapterFactory } from '@prisma/driver-adapter-utils'\nimport { version as enginesVersion } from '@prisma/engines-version/package.json'\nimport { ExtendedSpanOptions, logger, TracingHelper, tryLoadEnvs } from '@prisma/internals'\nimport { AsyncResource } from 'async_hooks'\nimport { EventEmitter } from 'events'\nimport fs from 'fs'\nimport path from 'path'\nimport { RawValue, Sql } from 'sql-template-tag'\n\nimport {\n  PrismaClientInitializationError,\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n  PrismaClientValidationError,\n} from '.'\nimport { addProperty, createCompositeProxy, removeProperties } from './core/compositeProxy'\nimport { BatchTransactionOptions, Engine, EngineConfig, Options } from './core/engines'\nimport { AccelerateEngineConfig } from './core/engines/accelerate/AccelerateEngine'\nimport { AccelerateExtensionFetchDecorator } from './core/engines/common/Engine'\nimport { EngineEvent, LogEmitter } from './core/engines/common/types/Events'\nimport type * as Transaction from './core/engines/common/types/Transaction'\nimport { getBatchRequestPayload } from './core/engines/common/utils/getBatchRequestPayload'\nimport { prettyPrintArguments } from './core/errorRendering/prettyPrintArguments'\nimport { prismaGraphQLToJSError } from './core/errors/utils/prismaGraphQLToJSError'\nimport { $extends } from './core/extensions/$extends'\nimport { applyAllResultExtensions } from './core/extensions/applyAllResultExtensions'\nimport { applyQueryExtensions } from './core/extensions/applyQueryExtensions'\nimport { MergedExtensionsList } from './core/extensions/MergedExtensionsList'\nimport { checkPlatformCaching } from './core/init/checkPlatformCaching'\nimport { getDatasourceOverrides } from './core/init/getDatasourceOverrides'\nimport { getEngineInstance } from './core/init/getEngineInstance'\nimport { getPreviewFeatures } from './core/init/getPreviewFeatures'\nimport { resolveDatasourceUrl } from './core/init/resolveDatasourceUrl'\nimport { GlobalOmitOptions, serializeJsonQuery } from './core/jsonProtocol/serializeJsonQuery'\nimport { MetricsClient } from './core/metrics/MetricsClient'\nimport {\n  applyModelsAndClientExtensions,\n  unApplyModelsAndClientExtensions,\n} from './core/model/applyModelsAndClientExtensions'\nimport { rawCommandArgsMapper } from './core/raw-query/rawCommandArgsMapper'\nimport {\n  checkAlter,\n  rawQueryArgsMapper,\n  sqlMiddlewareArgsMapper,\n  templateStringMiddlewareArgsMapper,\n} from './core/raw-query/rawQueryArgsMapper'\nimport { createPrismaPromiseFactory } from './core/request/createPrismaPromise'\nimport {\n  PrismaPromise,\n  PrismaPromiseInteractiveTransaction,\n  PrismaPromiseTransaction,\n} from './core/request/PrismaPromise'\nimport { UserArgs } from './core/request/UserArgs'\nimport { getTracingHelper } from './core/tracing/TracingHelper'\nimport { getLockCountPromise } from './core/transaction/utils/createLockCountPromise'\nimport { itxClientDenyList } from './core/types/exported/itxClientDenyList'\nimport { JsInputValue } from './core/types/exported/JsApi'\nimport { RawQueryArgs } from './core/types/exported/RawQueryArgs'\nimport { UnknownTypedSql } from './core/types/exported/TypedSql'\nimport { getLogLevel } from './getLogLevel'\nimport type { QueryMiddlewareParams } from './QueryMiddlewareParams'\nimport { RequestHandler } from './RequestHandler'\nimport { CallSite, getCallSite } from './utils/CallSite'\nimport { clientVersion } from './utils/clientVersion'\nimport { validatePrismaClientOptions } from './utils/validatePrismaClientOptions'\nimport { waitForBatch } from './utils/waitForBatch'\n\nconst debug = Debug('prisma:client')\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var NODE_CLIENT: true\n  const TARGET_BUILD_TYPE:\n    | 'binary'\n    | 'library'\n    | 'edge'\n    | 'wasm-engine-edge'\n    | 'wasm-compiler-edge'\n    | 'react-native'\n    | 'client'\n}\n\n// used by esbuild for tree-shaking\ntypeof globalThis === 'object' ? (globalThis.NODE_CLIENT = true) : 0\n\nexport type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n\nexport type Datasource = { url?: string }\nexport type Datasources = { [name in string]: Datasource }\n\nexport type PrismaClientOptions = {\n  /**\n   * Overwrites the primary datasource url from your schema.prisma file\n   */\n  datasourceUrl?: string\n  /**\n   * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\n   */\n  adapter?: SqlDriverAdapterFactory | null\n\n  /**\n   * Overwrites the datasource url from your schema.prisma file\n   */\n  datasources?: Datasources\n\n  /**\n   * @default \"colorless\"\n   */\n  errorFormat?: ErrorFormat\n\n  /**\n   * The default values for Transaction options\n   * maxWait ?= 2000\n   * timeout ?= 5000\n   */\n  transactionOptions?: Transaction.Options\n\n  /**\n   * @example\n   * \\`\\`\\`\n   * // Defaults to stdout\n   * log: ['query', 'info', 'warn']\n   *\n   * // Emit as events\n   * log: [\n   *  { emit: 'stdout', level: 'query' },\n   *  { emit: 'stdout', level: 'info' },\n   *  { emit: 'stdout', level: 'warn' }\n   * ]\n   * \\`\\`\\`\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n   */\n  log?: Array<LogLevel | LogDefinition>\n\n  omit?: GlobalOmitOptions\n\n  /**\n   * @internal\n   * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\n   */\n  __internal?: {\n    debug?: boolean\n    engine?: {\n      cwd?: string\n      binaryPath?: string\n      endpoint?: string\n      allowTriggerPanic?: boolean\n    }\n    /** This can be used for testing purposes */\n    configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig\n  }\n}\n\nexport type Unpacker = (data: any) => any\n\nexport type InternalRequestParams = {\n  /**\n   * The original client method being called.\n   * Even though the rootField / operation can be changed,\n   * this method stays as it is, as it's what the user's\n   * code looks like\n   */\n  clientMethod: string // TODO what is this\n  /**\n   * Name of js model that triggered the request. Might be used\n   * for warnings or error messages\n   */\n  jsModelName?: string\n  // Extra headers for data proxy.\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n  unpacker?: Unpacker // TODO what is this\n  otelParentCtx?: Context\n  /** Used to \"desugar\" a user input into an \"expanded\" one */\n  argsMapper?: (args?: UserArgs) => UserArgs\n\n  /** Used to convert args for middleware and back */\n  middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>\n  /** Used for Accelerate client extension via Data Proxy */\n  customDataProxyFetch?: AccelerateExtensionFetchDecorator\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>\n\nexport type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\n  requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs\n  middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs\n}\n\nconst noopMiddlewareArgsMapper: MiddlewareArgsMapper<unknown, unknown> = {\n  requestArgsToMiddlewareArgs: (param) => param,\n  middlewareArgsToRequestArgs: (param) => param,\n}\n\n/* Types for Logging */\nexport type LogLevel = 'info' | 'query' | 'warn' | 'error'\nexport type LogDefinition = {\n  level: LogLevel\n  emit: 'stdout' | 'event'\n}\n\nexport type QueryEvent = {\n  timestamp: Date\n  query: string\n  params: string\n  duration: number\n  target: string\n}\n\nexport type LogEvent = {\n  timestamp: Date\n  message: string\n  target: string\n}\n/* End Types for Logging */\n\ntype ExtendedEventType = LogLevel | 'beforeExit'\ntype EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit']\n  ? () => Promise<void>\n  : [E] extends [LogLevel]\n    ? (event: EngineEvent<E>) => void\n    : never\n\nconst TX_ID = Symbol.for('prisma.client.transaction.id')\n\nconst BatchTxIdCounter = {\n  id: 0,\n  nextId() {\n    return ++this.id\n  },\n}\n\nexport type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never\n\nexport function getPrismaClient(config: GetPrismaClientConfig) {\n  class PrismaClient {\n    _originalClient = this\n    _runtimeDataModel: RuntimeDataModel\n    _requestHandler: RequestHandler\n    _connectionPromise?: Promise<any>\n    _disconnectionPromise?: Promise<any>\n    _engineConfig: EngineConfig\n    _accelerateEngineConfig: AccelerateEngineConfig\n    _clientVersion: string\n    _errorFormat: ErrorFormat\n    _tracingHelper: TracingHelper\n    _previewFeatures: string[]\n    _activeProvider: string\n    _globalOmit?: GlobalOmitOptions\n    _extensions: MergedExtensionsList\n    /**\n     * @remarks This is used internally by Policy, do not rename or remove\n     */\n    _engine: Engine\n    /**\n     * A fully constructed/applied Client that references the parent\n     * PrismaClient. This is used for Client extensions only.\n     */\n    _appliedParent: PrismaClient\n    _createPrismaPromise = createPrismaPromiseFactory()\n\n    constructor(optionsArg?: PrismaClientOptions) {\n      config = optionsArg?.__internal?.configOverride?.(config) ?? config\n\n      checkPlatformCaching(config)\n\n      if (optionsArg) {\n        validatePrismaClientOptions(optionsArg, config)\n      }\n\n      // prevents unhandled error events when users do not explicitly listen to them\n      const logEmitter = new EventEmitter().on('error', () => {}) as LogEmitter\n\n      this._extensions = MergedExtensionsList.empty()\n      this._previewFeatures = getPreviewFeatures(config)\n      this._clientVersion = config.clientVersion ?? clientVersion\n      this._activeProvider = config.activeProvider\n      this._globalOmit = optionsArg?.omit\n      this._tracingHelper = getTracingHelper()\n      const envPaths = config.relativeEnvPaths && {\n        rootEnvPath:\n          config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),\n        schemaEnvPath:\n          config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath),\n      }\n\n      /**\n       * Initialise and validate the Driver Adapter, if provided.\n       */\n\n      let adapter: SqlDriverAdapterFactory | undefined\n      if (optionsArg?.adapter) {\n        adapter = optionsArg.adapter\n\n        // Note:\n        // - `getConfig(..).datasources[0].provider` can be `postgresql`, `postgres`, `mysql`, or other known providers\n        // - `getConfig(..).datasources[0].activeProvider`, stored in `config.activeProvider`, can be `postgresql`, `mysql`, or other known providers\n        // - `adapter.provider` can be `postgres`, `mysql`, or `sqlite`, and changing this requires changes to Rust as well,\n        //    see https://github.com/prisma/prisma-engines/blob/d116c37d7d27aee74fdd840fc85ab2b45407e5ce/query-engine/driver-adapters/src/types.rs#L22-L23.\n        //\n        // TODO: Normalize these provider names once and for all in Prisma 6.\n        const expectedDriverAdapterProvider =\n          config.activeProvider === 'postgresql'\n            ? 'postgres'\n            : // CockroachDB is only accessible through Postgres driver adapters\n              config.activeProvider === 'cockroachdb'\n              ? 'postgres'\n              : config.activeProvider\n\n        if (adapter.provider !== expectedDriverAdapterProvider) {\n          throw new PrismaClientInitializationError(\n            `The Driver Adapter \\`${adapter.adapterName}\\`, based on \\`${adapter.provider}\\`, is not compatible with the provider \\`${expectedDriverAdapterProvider}\\` specified in the Prisma schema.`,\n            this._clientVersion,\n          )\n        }\n\n        if (optionsArg.datasources || optionsArg.datasourceUrl !== undefined) {\n          throw new PrismaClientInitializationError(\n            `Custom datasource configuration is not compatible with Prisma Driver Adapters. Please define the database connection string directly in the Driver Adapter configuration.`,\n            this._clientVersion,\n          )\n        }\n      }\n\n      const loadedEnv = // for node we load the env from files, for edge only via env injections\n        (NODE_CLIENT && !adapter && envPaths && tryLoadEnvs(envPaths, { conflictCheck: 'none' })) ||\n        config.injectableEdgeEnv?.()\n\n      try {\n        const options: PrismaClientOptions = optionsArg ?? {}\n        const internal = options.__internal ?? {}\n\n        const useDebug = internal.debug === true\n        if (useDebug) {\n          Debug.enable('prisma:client')\n        }\n\n        let cwd = path.resolve(config.dirname, config.relativePath)\n\n        // TODO this logic should not be needed anymore #findSync\n        if (!fs.existsSync(cwd)) {\n          cwd = config.dirname\n        }\n\n        debug('dirname', config.dirname)\n        debug('relativePath', config.relativePath)\n        debug('cwd', cwd)\n\n        const engineConfig = internal.engine || {}\n\n        if (options.errorFormat) {\n          this._errorFormat = options.errorFormat\n        } else if (process.env.NODE_ENV === 'production') {\n          this._errorFormat = 'minimal'\n        } else if (process.env.NO_COLOR) {\n          this._errorFormat = 'colorless'\n        } else {\n          this._errorFormat = 'colorless' // default errorFormat\n        }\n\n        this._runtimeDataModel = config.runtimeDataModel\n\n        this._engineConfig = {\n          cwd,\n          dirname: config.dirname,\n          enableDebugLogs: useDebug,\n          allowTriggerPanic: engineConfig.allowTriggerPanic,\n          prismaPath: engineConfig.binaryPath ?? undefined,\n          engineEndpoint: engineConfig.endpoint,\n          generator: config.generator,\n          showColors: this._errorFormat === 'pretty',\n          logLevel: options.log && (getLogLevel(options.log) as any), // TODO\n          logQueries:\n            options.log &&\n            Boolean(\n              typeof options.log === 'string'\n                ? options.log === 'query'\n                : options.log.find((o) => (typeof o === 'string' ? o === 'query' : o.level === 'query')),\n            ),\n          env: loadedEnv?.parsed ?? {},\n          flags: [],\n          engineWasm: config.engineWasm,\n          compilerWasm: config.compilerWasm,\n          clientVersion: config.clientVersion,\n          engineVersion: config.engineVersion,\n          previewFeatures: this._previewFeatures,\n          activeProvider: config.activeProvider,\n          inlineSchema: config.inlineSchema,\n          overrideDatasources: getDatasourceOverrides(options, config.datasourceNames),\n          inlineDatasources: config.inlineDatasources,\n          inlineSchemaHash: config.inlineSchemaHash,\n          tracingHelper: this._tracingHelper,\n          transactionOptions: {\n            maxWait: options.transactionOptions?.maxWait ?? 2000,\n            timeout: options.transactionOptions?.timeout ?? 5000,\n            isolationLevel: options.transactionOptions?.isolationLevel,\n          },\n          logEmitter,\n          isBundled: config.isBundled,\n          adapter,\n        }\n\n        this._accelerateEngineConfig = {\n          ...this._engineConfig,\n          // share runtime utils to accelerate\n          accelerateUtils: {\n            resolveDatasourceUrl,\n            getBatchRequestPayload,\n            prismaGraphQLToJSError,\n            PrismaClientUnknownRequestError,\n            PrismaClientInitializationError,\n            PrismaClientKnownRequestError,\n            debug: Debug('prisma:client:accelerateEngine'),\n            engineVersion: enginesVersion,\n            clientVersion: config.clientVersion,\n          },\n        }\n\n        debug('clientVersion', config.clientVersion)\n\n        this._engine = getEngineInstance(config, this._engineConfig)\n        this._requestHandler = new RequestHandler(this, logEmitter)\n\n        if (options.log) {\n          for (const log of options.log) {\n            const level = typeof log === 'string' ? log : log.emit === 'stdout' ? log.level : null\n            if (level) {\n              this.$on(level, (event) => {\n                logger.log(`${logger.tags[level] ?? ''}`, (event as LogEvent).message || (event as QueryEvent).query)\n              })\n            }\n          }\n        }\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n\n      // the first client has no parent so it is its own parent client\n      // this is used for extensions to reference their parent client\n      return (this._appliedParent = applyModelsAndClientExtensions(this))\n      // this applied client is also a custom constructor return value\n    }\n\n    get [Symbol.toStringTag]() {\n      return 'PrismaClient'\n    }\n\n    $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): PrismaClient {\n      if (eventType === 'beforeExit') {\n        this._engine.onBeforeExit(callback as EventCallback<'beforeExit'>)\n      } else if (eventType) {\n        this._engineConfig.logEmitter.on(eventType, callback as EventCallback<LogLevel>)\n      }\n      return this\n    }\n\n    $connect() {\n      try {\n        return this._engine.start()\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n    }\n\n    /**\n     * Disconnect from the database\n     */\n    async $disconnect() {\n      try {\n        await this._engine.stop()\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      } finally {\n        // Debug module keeps a list of last 100 logs regardless of environment\n        // variables. This can cause a memory leak. It's especially bad in jest\n        // environment where keeping an error in this list prevents jest sandbox\n        // from being GCed. Clearing logs on disconnect helps to avoid that\n        clearLogs()\n      }\n    }\n\n    /**\n     * Executes a raw query and always returns a number\n     */\n    $executeRawInternal(\n      transaction: PrismaPromiseTransaction | undefined,\n      clientMethod: string,\n      args: RawQueryArgs,\n      middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>,\n    ): Promise<number> {\n      const activeProvider = this._activeProvider\n\n      return this._request({\n        action: 'executeRaw',\n        args,\n        transaction,\n        clientMethod,\n        argsMapper: rawQueryArgsMapper({ clientMethod, activeProvider }),\n        callsite: getCallSite(this._errorFormat),\n        dataPath: [],\n        middlewareArgsMapper,\n      })\n    }\n\n    /**\n     * Executes a raw query provided through a safe tag function\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]) {\n      return this._createPrismaPromise((transaction) => {\n        if ((query as TemplateStringsArray).raw !== undefined || (query as Sql).sql !== undefined) {\n          const [sql, argsMapper] = toSql(query, values)\n          checkAlter(\n            this._activeProvider,\n            sql.text,\n            sql.values,\n            Array.isArray(query) ? 'prisma.$executeRaw`<SQL>`' : 'prisma.$executeRaw(sql`<SQL>`)',\n          )\n          return this.$executeRawInternal(transaction, '$executeRaw', sql, argsMapper)\n        }\n\n        throw new PrismaClientValidationError(\n          `\\`$executeRaw\\` is a tag function, please use it like the following:\n\\`\\`\\`\nconst result = await prisma.$executeRaw\\`UPDATE User SET cool = \\${true} WHERE email = \\${'user@email.com'};\\`\n\\`\\`\\`\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\n`,\n          { clientVersion: this._clientVersion },\n        )\n      })\n    }\n\n    /**\n     * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $executeRawUnsafe(query: string, ...values: RawValue[]) {\n      return this._createPrismaPromise((transaction) => {\n        checkAlter(this._activeProvider, query, values, 'prisma.$executeRawUnsafe(<SQL>, [...values])')\n        return this.$executeRawInternal(transaction, '$executeRawUnsafe', [query, ...values])\n      })\n    }\n\n    /**\n     * Executes a raw command only for MongoDB\n     *\n     * @param command\n     * @returns\n     */\n    $runCommandRaw(command: Record<string, JsInputValue>) {\n      if (config.activeProvider !== 'mongodb') {\n        throw new PrismaClientValidationError(\n          `The ${config.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`,\n          { clientVersion: this._clientVersion },\n        )\n      }\n\n      return this._createPrismaPromise((transaction) => {\n        return this._request({\n          args: command,\n          clientMethod: '$runCommandRaw',\n          dataPath: [],\n          action: 'runCommandRaw',\n          argsMapper: rawCommandArgsMapper,\n          callsite: getCallSite(this._errorFormat),\n          transaction: transaction,\n        })\n      })\n    }\n\n    /**\n     * Executes a raw query and returns selected data\n     */\n    async $queryRawInternal(\n      transaction: PrismaPromiseTransaction | undefined,\n      clientMethod: string,\n      args: RawQueryArgs,\n      middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>,\n    ) {\n      const activeProvider = this._activeProvider\n\n      return this._request({\n        action: 'queryRaw',\n        args,\n        transaction,\n        clientMethod,\n        argsMapper: rawQueryArgsMapper({ clientMethod, activeProvider }),\n        callsite: getCallSite(this._errorFormat),\n        dataPath: [],\n        middlewareArgsMapper,\n      })\n    }\n\n    /**\n     * Executes a raw query provided through a safe tag function\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]) {\n      return this._createPrismaPromise((transaction) => {\n        if ((query as TemplateStringsArray).raw !== undefined || (query as Sql).sql !== undefined) {\n          return this.$queryRawInternal(transaction, '$queryRaw', ...toSql(query, values))\n        }\n\n        throw new PrismaClientValidationError(\n          `\\`$queryRaw\\` is a tag function, please use it like the following:\n\\`\\`\\`\nconst result = await prisma.$queryRaw\\`SELECT * FROM User WHERE id = \\${1} OR email = \\${'user@email.com'};\\`\n\\`\\`\\`\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\n`,\n          { clientVersion: this._clientVersion },\n        )\n      })\n    }\n\n    /**\n     * Counterpart to $queryRaw, that returns strongly typed results\n     * @param typedSql\n     */\n    $queryRawTyped(typedSql: UnknownTypedSql) {\n      return this._createPrismaPromise((transaction) => {\n        if (!this._hasPreviewFlag('typedSql')) {\n          throw new PrismaClientValidationError(\n            '`typedSql` preview feature must be enabled in order to access $queryRawTyped API',\n            { clientVersion: this._clientVersion },\n          )\n        }\n        return this.$queryRawInternal(transaction, '$queryRawTyped', typedSql)\n      })\n    }\n\n    /**\n     * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $queryRawUnsafe(query: string, ...values: RawValue[]) {\n      return this._createPrismaPromise((transaction) => {\n        return this.$queryRawInternal(transaction, '$queryRawUnsafe', [query, ...values])\n      })\n    }\n\n    /**\n     * Execute a batch of requests in a transaction\n     * @param requests\n     * @param options\n     */\n    _transactionWithArray({\n      promises,\n      options,\n    }: {\n      promises: Array<PrismaPromise<any>>\n      options?: BatchTransactionOptions\n    }): Promise<any> {\n      const id = BatchTxIdCounter.nextId()\n      const lock = getLockCountPromise(promises.length)\n\n      const requests = promises.map((request, index) => {\n        if (request?.[Symbol.toStringTag] !== 'PrismaPromise') {\n          throw new Error(\n            `All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.`,\n          )\n        }\n\n        const isolationLevel = options?.isolationLevel ?? this._engineConfig.transactionOptions.isolationLevel\n        const transaction = { kind: 'batch', id, index, isolationLevel, lock } as const\n        return request.requestTransaction?.(transaction) ?? request\n      })\n\n      return waitForBatch(requests)\n    }\n\n    /**\n     * Perform a long-running transaction\n     * @param callback\n     * @param options\n     * @returns\n     */\n    async _transactionWithCallback({\n      callback,\n      options,\n    }: {\n      callback: (client: Client) => Promise<unknown>\n      options?: Options\n    }) {\n      const headers = { traceparent: this._tracingHelper.getTraceParent() }\n\n      const optionsWithDefaults: Options = {\n        maxWait: options?.maxWait ?? this._engineConfig.transactionOptions.maxWait,\n        timeout: options?.timeout ?? this._engineConfig.transactionOptions.timeout,\n        isolationLevel: options?.isolationLevel ?? this._engineConfig.transactionOptions.isolationLevel,\n      }\n      const info = await this._engine.transaction('start', headers, optionsWithDefaults)\n\n      let result: unknown\n      try {\n        // execute user logic with a proxied the client\n        const transaction = { kind: 'itx', ...info } as const\n\n        result = await callback(this._createItxClient(transaction))\n\n        // it went well, then we commit the transaction\n        await this._engine.transaction('commit', headers, info)\n      } catch (e: any) {\n        // it went bad, then we rollback the transaction\n        await this._engine.transaction('rollback', headers, info).catch(() => {})\n\n        throw e // silent rollback, throw original error\n      }\n\n      return result\n    }\n\n    _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client {\n      return createCompositeProxy(\n        applyModelsAndClientExtensions(\n          createCompositeProxy(unApplyModelsAndClientExtensions(this), [\n            addProperty('_appliedParent', () => this._appliedParent._createItxClient(transaction)),\n            addProperty('_createPrismaPromise', () => createPrismaPromiseFactory(transaction)),\n            addProperty(TX_ID, () => transaction.id),\n          ]),\n        ),\n        [removeProperties(itxClientDenyList)],\n      )\n    }\n\n    /**\n     * Execute queries within a transaction\n     * @param input a callback or a query list\n     * @param options to set timeouts (callback)\n     * @returns\n     */\n    $transaction(input: any, options?: any) {\n      let callback: () => Promise<any>\n\n      // iTx - Interactive transaction\n      if (typeof input === 'function') {\n        if (this._engineConfig.adapter?.adapterName === '@prisma/adapter-d1') {\n          callback = () => {\n            throw new Error(\n              'Cloudflare D1 does not support interactive transactions. We recommend you to refactor your queries with that limitation in mind, and use batch transactions with `prisma.$transactions([])` where applicable.',\n            )\n          }\n        } else {\n          callback = () => this._transactionWithCallback({ callback: input, options })\n        }\n      } else {\n        // Batch transaction\n        callback = () => this._transactionWithArray({ promises: input, options })\n      }\n\n      const spanOptions = {\n        name: 'transaction',\n        attributes: { method: '$transaction' },\n      }\n\n      return this._tracingHelper.runInChildSpan(spanOptions, callback)\n    }\n\n    /**\n     * Runs the middlewares over params before executing a request\n     * @param internalParams\n     * @returns\n     */\n    _request(internalParams: InternalRequestParams): Promise<any> {\n      // this is the otel context that is active at the callsite\n      internalParams.otelParentCtx = this._tracingHelper.getActiveContext()\n      const middlewareArgsMapper = internalParams.middlewareArgsMapper ?? noopMiddlewareArgsMapper\n\n      // make sure that we don't leak extra properties to users\n      const params: QueryMiddlewareParams = {\n        args: middlewareArgsMapper.requestArgsToMiddlewareArgs(internalParams.args),\n        dataPath: internalParams.dataPath,\n        runInTransaction: Boolean(internalParams.transaction),\n        action: internalParams.action,\n        model: internalParams.model,\n      }\n\n      // span options for opentelemetry instrumentation\n      const spanOptions = {\n        operation: {\n          name: 'operation',\n          attributes: {\n            method: params.action,\n            model: params.model,\n            name: params.model ? `${params.model}.${params.action}` : params.action,\n          },\n        } as ExtendedSpanOptions,\n      }\n\n      // prepare recursive fn that will pipe params through middlewares\n      const consumer = async (changedMiddlewareParams: QueryMiddlewareParams) => {\n        // we proceed with request execution\n        // before we send the execution request, we use the changed params\n        const { runInTransaction, args, ...changedRequestParams } = changedMiddlewareParams\n        const requestParams = {\n          ...internalParams,\n          ...changedRequestParams,\n        }\n\n        if (args) {\n          requestParams.args = middlewareArgsMapper.middlewareArgsToRequestArgs(args)\n        }\n\n        // if middleware switched off `runInTransaction`, unset `transaction`\n        // property on request as well so it will be executed outside of the tx\n        if (internalParams.transaction !== undefined && runInTransaction === false) {\n          delete requestParams.transaction // client extensions check for this\n        }\n\n        const result = await applyQueryExtensions(this, requestParams) // also executes the query\n        if (!requestParams.model) {\n          return result\n        }\n        return applyAllResultExtensions({\n          result,\n          modelName: requestParams.model,\n          args: requestParams.args,\n          extensions: this._extensions,\n          runtimeDataModel: this._runtimeDataModel,\n          globalOmit: this._globalOmit,\n        })\n      }\n\n      return this._tracingHelper.runInChildSpan(spanOptions.operation, () => {\n        if (NODE_CLIENT) {\n          // https://github.com/prisma/prisma/issues/3148 not for edge client\n          const asyncRes = new AsyncResource('prisma-client-request')\n          return asyncRes.runInAsyncScope(() => consumer(params))\n        }\n\n        return consumer(params)\n      })\n    }\n\n    async _executeRequest({\n      args,\n      clientMethod,\n      dataPath,\n      callsite,\n      action,\n      model,\n      argsMapper,\n      transaction,\n      unpacker,\n      otelParentCtx,\n      customDataProxyFetch,\n    }: InternalRequestParams) {\n      try {\n        // execute argument transformation before execution\n        args = argsMapper ? argsMapper(args) : args\n\n        const spanOptions: ExtendedSpanOptions = {\n          name: 'serialize',\n        }\n\n        const message = this._tracingHelper.runInChildSpan(spanOptions, () =>\n          serializeJsonQuery({\n            modelName: model,\n            runtimeDataModel: this._runtimeDataModel,\n            action,\n            args,\n            clientMethod,\n            callsite,\n            extensions: this._extensions,\n            errorFormat: this._errorFormat,\n            clientVersion: this._clientVersion,\n            previewFeatures: this._previewFeatures,\n            globalOmit: this._globalOmit,\n          }),\n        )\n\n        // as prettyPrintArguments takes a bit of compute\n        // we only want to do it, if debug is enabled for 'prisma-client'\n        if (Debug.enabled('prisma:client')) {\n          debug(`Prisma Client call:`)\n          debug(`prisma.${clientMethod}(${prettyPrintArguments(args)})`)\n          debug(`Generated request:`)\n          debug(JSON.stringify(message, null, 2) + '\\n')\n        }\n\n        if (transaction?.kind === 'batch') {\n          /** @see {@link getLockCountPromise} */\n          await transaction.lock\n        }\n\n        return this._requestHandler.request({\n          protocolQuery: message,\n          modelName: model,\n          action,\n          clientMethod,\n          dataPath,\n          callsite,\n          args,\n          extensions: this._extensions,\n          transaction,\n          unpacker,\n          otelParentCtx,\n          otelChildCtx: this._tracingHelper.getActiveContext(),\n          globalOmit: this._globalOmit,\n          customDataProxyFetch,\n        })\n      } catch (e) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n    }\n\n    $metrics = new MetricsClient(this)\n\n    /**\n     * Shortcut for checking a preview flag\n     * @param feature preview flag\n     * @returns\n     */\n    _hasPreviewFlag(feature: string) {\n      return !!this._engineConfig.previewFeatures?.includes(feature)\n    }\n\n    $applyPendingMigrations(): Promise<void> {\n      return this._engine.applyPendingMigrations()\n    }\n\n    $extends = $extends\n  }\n\n  return PrismaClient\n}\n\nfunction toSql(query: TemplateStringsArray | Sql, values: unknown[]): [Sql, MiddlewareArgsMapper<unknown, unknown>] {\n  if (isTemplateStringArray(query)) {\n    return [new Sql(query, values), templateStringMiddlewareArgsMapper]\n  }\n\n  return [query, sqlMiddlewareArgsMapper]\n}\n\nfunction isTemplateStringArray(value: unknown): value is TemplateStringsArray {\n  return Array.isArray(value) && Array.isArray(value['raw'])\n}\n", "", "/**\n * Values supported by SQL engine.\n */\nexport type Value = unknown;\n\n/**\n * Supported value or SQL instance.\n */\nexport type RawValue = Value | Sql;\n\n/**\n * A SQL instance can be nested within each other to build SQL strings.\n */\nexport class Sql {\n  readonly values: Value[];\n  readonly strings: string[];\n\n  constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]) {\n    if (rawStrings.length - 1 !== rawValues.length) {\n      if (rawStrings.length === 0) {\n        throw new TypeError(\"Expected at least 1 string\");\n      }\n\n      throw new TypeError(\n        `Expected ${rawStrings.length} strings to have ${\n          rawStrings.length - 1\n        } values`,\n      );\n    }\n\n    const valuesLength = rawValues.reduce<number>(\n      (len, value) => len + (value instanceof Sql ? value.values.length : 1),\n      0,\n    );\n\n    this.values = new Array(valuesLength);\n    this.strings = new Array(valuesLength + 1);\n\n    this.strings[0] = rawStrings[0];\n\n    // Iterate over raw values, strings, and children. The value is always\n    // positioned between two strings, e.g. `index + 1`.\n    let i = 0,\n      pos = 0;\n    while (i < rawValues.length) {\n      const child = rawValues[i++];\n      const rawString = rawStrings[i];\n\n      // Check for nested `sql` queries.\n      if (child instanceof Sql) {\n        // Append child prefix text to current string.\n        this.strings[pos] += child.strings[0];\n\n        let childIndex = 0;\n        while (childIndex < child.values.length) {\n          this.values[pos++] = child.values[childIndex++];\n          this.strings[pos] = child.strings[childIndex];\n        }\n\n        // Append raw string to current string.\n        this.strings[pos] += rawString;\n      } else {\n        this.values[pos++] = child;\n        this.strings[pos] = rawString;\n      }\n    }\n  }\n\n  get sql() {\n    const len = this.strings.length;\n    let i = 1;\n    let value = this.strings[0];\n    while (i < len) value += `?${this.strings[i++]}`;\n    return value;\n  }\n\n  get statement() {\n    const len = this.strings.length;\n    let i = 1;\n    let value = this.strings[0];\n    while (i < len) value += `:${i}${this.strings[i++]}`;\n    return value;\n  }\n\n  get text() {\n    const len = this.strings.length;\n    let i = 1;\n    let value = this.strings[0];\n    while (i < len) value += `$${i}${this.strings[i++]}`;\n    return value;\n  }\n\n  inspect() {\n    return {\n      sql: this.sql,\n      statement: this.statement,\n      text: this.text,\n      values: this.values,\n    };\n  }\n}\n\n/**\n * Create a SQL query for a list of values.\n */\nexport function join(\n  values: readonly RawValue[],\n  separator = \",\",\n  prefix = \"\",\n  suffix = \"\",\n) {\n  if (values.length === 0) {\n    throw new TypeError(\n      \"Expected `join([])` to be called with an array of multiple elements, but got an empty array\",\n    );\n  }\n\n  return new Sql(\n    [prefix, ...Array(values.length - 1).fill(separator), suffix],\n    values,\n  );\n}\n\n/**\n * Create a SQL query for a list of structured values.\n */\nexport function bulk(\n  data: ReadonlyArray<ReadonlyArray<RawValue>>,\n  separator = \",\",\n  prefix = \"\",\n  suffix = \"\",\n) {\n  const length = data.length && data[0].length;\n\n  if (length === 0) {\n    throw new TypeError(\n      \"Expected `bulk([][])` to be called with a nested array of multiple elements, but got an empty array\",\n    );\n  }\n\n  const values = data.map((item, index) => {\n    if (item.length !== length) {\n      throw new TypeError(\n        `Expected \\`bulk([${index}][])\\` to have a length of ${length}, but got ${item.length}`,\n      );\n    }\n\n    return new Sql([\"(\", ...Array(item.length - 1).fill(separator), \")\"], item);\n  });\n\n  return new Sql(\n    [prefix, ...Array(values.length - 1).fill(separator), suffix],\n    values,\n  );\n}\n\n/**\n * Create raw SQL statement.\n */\nexport function raw(value: string) {\n  return new Sql([value], []);\n}\n\n/**\n * Placeholder value for \"no text\".\n */\nexport const empty = raw(\"\");\n\n/**\n * Create a SQL object from a template string.\n */\nexport default function sql(\n  strings: readonly string[],\n  ...values: readonly RawValue[]\n) {\n  return new Sql(strings, values);\n}\n", "export { addObjectProperties as addObjectProperties } from './addObjectProperties'\nexport { addProperty } from './addProperty'\nexport { cacheProperties } from './cacheProperties'\nexport { type CompositeProxyLayer, createCompositeProxy } from './createCompositeProxy'\nexport { removeProperties } from './removeProperties'\n", "import type { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer that forwards all reads\n * to provided object\n *\n * @param object\n * @returns\n */\nexport function addObjectProperties(object: object): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return Object.keys(object)\n    },\n\n    getPropertyValue(key) {\n      return object[key]\n    },\n  }\n}\n", "import { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer, that adds a single property to the target\n * @param key  the name of the property\n * @param factory the function that returns the value of the property\n * @returns\n */\nexport function addProperty(key: string | symbol, factory: () => unknown): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return [key]\n    },\n\n    getPropertyValue() {\n      return factory()\n    },\n  }\n}\n", "import { Cache } from '@prisma/client-common'\n\nimport { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer that adds caching to another\n * layer.\n *\n * @param baseLayer\n * @returns\n */\nexport function cacheProperties<KeyType extends string | symbol>(\n  baseLayer: CompositeProxyLayer<KeyType>,\n): CompositeProxyLayer<KeyType> {\n  const cache = new Cache<KeyType, unknown>()\n  return {\n    getKeys() {\n      return baseLayer.getKeys()\n    },\n\n    getPropertyValue(key) {\n      return cache.getOrCreate(key, () => baseLayer.getPropertyValue(key))\n    },\n\n    getPropertyDescriptor(key) {\n      return baseLayer.getPropertyDescriptor?.(key)\n    },\n  }\n}\n", "import { defaultPropertyDescriptor } from '../model/utils/defaultProxyHandlers'\n\nexport interface CompositeProxyLayer<KeyType extends string | symbol = string | symbol> {\n  /**\n   * Returns a list of keys, defined by a layer\n   */\n  getKeys(): ReadonlyArray<KeyType>\n\n  /**\n   * Returns a value for a property for a given key (one of the keys, returned\n   * from `getKeys`)\n   * @param key\n   */\n  getPropertyValue(key: KeyType): unknown\n\n  /**\n   * Gets a descriptor for given property. If not implemented or undefined is returned, { enumerable: true, writeable: true, configurable: true} is defaulted\n   * is used\n   * @param key\n   */\n  getPropertyDescriptor?(key: KeyType): PropertyDescriptor | undefined\n\n  /**\n   * Allows to override results for hasOwnProperty/in operator. If not implemented, returns true\n   * @param key\n   */\n  has?(key: KeyType): boolean\n}\n\nconst customInspect = Symbol.for('nodejs.util.inspect.custom')\n\n/**\n * Creates a proxy from a set of layers.\n * Each layer is a building for a proxy (potentially, reusable) that\n * can add or override property on top of the target.\n * When multiple layers define the same property, last one wins\n *\n * @param target\n * @param layers\n * @returns\n */\nexport function createCompositeProxy<T extends object>(target: T, layers: CompositeProxyLayer[]): T {\n  const keysToLayerMap = mapKeysToLayers(layers)\n  const overwrittenKeys = new Set<string | symbol>()\n\n  const proxy = new Proxy(target, {\n    get(target, prop) {\n      // explicit overwrites of a property have highest priority\n      if (overwrittenKeys.has(prop)) {\n        return target[prop]\n      }\n\n      // next, we see if property is defined in one of the layers\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        return layer.getPropertyValue(prop)\n      }\n\n      // finally, we read a prop from target\n      return target[prop]\n    },\n\n    has(target, prop) {\n      if (overwrittenKeys.has(prop)) {\n        return true\n      }\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        return layer.has?.(prop) ?? true\n      }\n\n      return Reflect.has(target, prop)\n    },\n\n    ownKeys(target) {\n      const targetKeys = getExistingKeys(Reflect.ownKeys(target), keysToLayerMap)\n      const layerKeys = getExistingKeys(Array.from(keysToLayerMap.keys()), keysToLayerMap)\n      return [...new Set([...targetKeys, ...layerKeys, ...overwrittenKeys])]\n    },\n\n    set(target, prop, value) {\n      const layer = keysToLayerMap.get(prop)\n      if (layer?.getPropertyDescriptor?.(prop)?.writable === false) {\n        return false\n      }\n      overwrittenKeys.add(prop)\n      return Reflect.set(target, prop, value)\n    },\n\n    getOwnPropertyDescriptor(target, prop) {\n      const original = Reflect.getOwnPropertyDescriptor(target, prop)\n      if (original && !original.configurable) {\n        // non-configurable properties can not change descriptors\n        return original\n      }\n\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        if (layer.getPropertyDescriptor) {\n          return {\n            ...defaultPropertyDescriptor,\n            ...layer?.getPropertyDescriptor(prop),\n          }\n        }\n        return defaultPropertyDescriptor\n      }\n\n      return original\n    },\n\n    defineProperty(target, property, attributes) {\n      overwrittenKeys.add(property)\n      return Reflect.defineProperty(target, property, attributes)\n    },\n\n    getPrototypeOf: () => Object.prototype,\n  })\n\n  proxy[customInspect] = function () {\n    // Default node.js console.log and util.inspect deliberately avoid triggering any proxy traps and log\n    // original target. This is not we want for our usecases: we want console.log to output the result as if\n    // the properties actually existed on the target. Using spread operator forces us to produce correct object\n    const toLog = { ...this }\n    delete toLog[customInspect]\n    return toLog\n  }\n  return proxy\n}\n\nfunction mapKeysToLayers(layers: CompositeProxyLayer[]) {\n  const keysToLayerMap = new Map<string | symbol, CompositeProxyLayer>()\n  for (const layer of layers) {\n    const keys = layer.getKeys()\n    for (const key of keys) {\n      keysToLayerMap.set(key, layer)\n    }\n  }\n  return keysToLayerMap\n}\n\nfunction getExistingKeys(keys: Array<string | symbol>, keysToLayerMap: Map<string | symbol, CompositeProxyLayer>) {\n  return keys.filter((key) => {\n    const layer = keysToLayerMap.get(key)\n    return layer?.has?.(key) ?? true\n  })\n}\n", "export const defaultPropertyDescriptor = {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n}\n\nexport function defaultProxyHandlers<T extends object>(ownKeys: (string | symbol)[]) {\n  const _ownKeys = new Set(ownKeys)\n  return {\n    getPrototypeOf: () => Object.prototype,\n    getOwnPropertyDescriptor: () => defaultPropertyDescriptor,\n    has: (target: T, prop: string | symbol) => _ownKeys.has(prop),\n    set: (target: T, prop: string | symbol, value: any) => {\n      return _ownKeys.add(prop) && Reflect.set(target, prop, value)\n    },\n    ownKeys: () => [..._ownKeys],\n  } as const\n}\n", "import { CompositeProxyLayer } from './createCompositeProxy'\n\nexport function removeProperties(keys: ReadonlyArray<string | symbol>): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return keys\n    },\n\n    has() {\n      return false\n    },\n\n    getPropertyValue() {\n      return undefined\n    },\n  }\n}\n", "import { TransactionOptions } from '../Engine'\nimport { JsonQuery } from '../types/JsonProtocol'\nimport { QueryEngineBatchRequest } from '../types/QueryEngine'\n\nexport function getBatchRequestPayload(\n  batch: JsonQuery[],\n  transaction?: TransactionOptions<unknown>,\n): QueryEngineBatchRequest {\n  return {\n    batch,\n    transaction: transaction?.kind === 'batch' ? { isolationLevel: transaction.options.isolationLevel } : undefined,\n  }\n}\n", "import { Writer } from '@prisma/ts-builders'\n\nimport { JsArgs } from '../types/exported/JsApi'\nimport { buildArgumentsRenderingTree } from './ArgumentsRenderingTree'\nimport { inactiveColors } from './base'\n\nexport function prettyPrintArguments(args?: JsArgs): string {\n  if (args === undefined) {\n    return ''\n  }\n  const tree = buildArgumentsRenderingTree(args)\n  const writer = new Writer(0, { colors: inactiveColors })\n  return writer.write(tree).toString()\n}\n", "import { RequestError } from '../../engines/common/types/RequestError'\nimport { PrismaClientKnownRequestError } from '../PrismaClientKnownRequestError'\nimport { PrismaClientUnknownRequestError } from '../PrismaClientUnknownRequestError'\n\nconst TOO_MANY_CONNECTIONS_ERROR = 'P2037'\n\nexport function prismaGraphQLToJSError(\n  { error, user_facing_error }: RequestError,\n  clientVersion: string,\n  activeProvider: string,\n): PrismaClientKnownRequestError | PrismaClientUnknownRequestError {\n  if (user_facing_error.error_code) {\n    return new PrismaClientKnownRequestError(getKnownErrorMessage(user_facing_error, activeProvider), {\n      code: user_facing_error.error_code,\n      clientVersion,\n      meta: user_facing_error.meta,\n      batchRequestIdx: user_facing_error.batch_request_idx,\n    })\n  }\n\n  return new PrismaClientUnknownRequestError(error, {\n    clientVersion,\n    batchRequestIdx: user_facing_error.batch_request_idx,\n  })\n}\n\nfunction getKnownErrorMessage(userFacingError: RequestError['user_facing_error'], activeProvider: string) {\n  let message = userFacingError.message\n  if (\n    (activeProvider === 'postgresql' || activeProvider === 'postgres' || activeProvider === 'mysql') &&\n    userFacingError.error_code === TOO_MANY_CONNECTIONS_ERROR\n  ) {\n    message +=\n      '\\nPrisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate'\n  }\n\n  return message\n}\n", "import { Client } from '../../getPrismaClient'\nimport { AccelerateEngine } from '../engines/accelerate/AccelerateEngine'\nimport { applyModelsAndClientExtensions } from '../model/applyModelsAndClientExtensions'\nimport { ExtensionArgs } from '../types/exported'\n\n/**\n * @param this\n */\nexport function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client {\n  if (typeof extension === 'function') {\n    return extension(this)\n  }\n\n  if (extension.client?.__AccelerateEngine) {\n    const Engine = extension.client.__AccelerateEngine as typeof AccelerateEngine\n    this._originalClient._engine = new Engine(this._originalClient._accelerateEngineConfig)\n  }\n\n  const newClient = Object.create(this._originalClient, {\n    _extensions: { value: this._extensions.append(extension) },\n    _appliedParent: { value: this, configurable: true },\n    $on: { value: undefined },\n  }) as Client\n\n  return applyModelsAndClientExtensions(newClient)\n}\n", "import type { Client } from '../../getPrismaClient'\nimport {\n  addObjectProperties,\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n} from '../compositeProxy'\nimport { applyModel } from './applyModel'\nimport { dmmfToJSModelName } from './utils/dmmfToJSModelName'\nimport { jsToDMMFModelName } from './utils/jsToDMMFModelName'\n\n// symbol we use for storing raw, unproxied\n// client instance, so we later can retrieve it\n// via `unapplyModels` methods\nconst rawClient = Symbol()\n\n/**\n * Dynamically creates a model proxy interface for a give name. For each prop\n * accessed on this proxy, it will lookup the dmmf to find if that model exists.\n * If it is the case, it will create a proxy for that model via {@link applyModel}.\n * @param client to create the proxy around\n * @returns a proxy to access models\n */\nexport function applyModelsAndClientExtensions(client: Client) {\n  const layers = [\n    rootLayer(client),\n    modelsLayer(client),\n    addProperty(rawClient, () => client),\n    addProperty('$parent', () => client._appliedParent),\n  ]\n  const clientExtensions = client._extensions.getAllClientExtensions()\n  if (clientExtensions) {\n    layers.push(addObjectProperties(clientExtensions))\n  }\n  return createCompositeProxy(client, layers)\n}\n\nfunction rootLayer(client: Client): CompositeProxyLayer {\n  const prototype = Object.getPrototypeOf(client._originalClient)\n  const allKeys = [...new Set(Object.getOwnPropertyNames(prototype))]\n\n  return {\n    getKeys() {\n      return allKeys\n    },\n\n    getPropertyValue(prop) {\n      return client[prop]\n    },\n  }\n}\n\nfunction modelsLayer(client: Client): CompositeProxyLayer {\n  const dmmfModelKeys = Object.keys(client._runtimeDataModel.models)\n  const jsModelKeys = dmmfModelKeys.map(dmmfToJSModelName)\n  const allKeys = [...new Set(dmmfModelKeys.concat(jsModelKeys))]\n\n  return cacheProperties({\n    getKeys() {\n      return allKeys\n    },\n\n    getPropertyValue(prop) {\n      const dmmfModelName = jsToDMMFModelName(prop)\n      // creates a new model proxy on the fly and caches it\n      if (client._runtimeDataModel.models[dmmfModelName] !== undefined) {\n        return applyModel(client, dmmfModelName)\n      }\n\n      // above silently failed if model name is lower cased\n      if (client._runtimeDataModel.models[prop] !== undefined) {\n        return applyModel(client, prop)\n      }\n\n      return undefined\n    },\n\n    getPropertyDescriptor(key) {\n      if (!jsModelKeys.includes(key)) {\n        return { enumerable: false }\n      }\n\n      return undefined\n    },\n  })\n}\n\nexport function unApplyModelsAndClientExtensions(client: Client): Client {\n  if (client[rawClient]) {\n    return client[rawClient]\n  }\n  return client\n}\n", "import * as DMMF from '@prisma/dmmf'\nimport type { O } from 'ts-toolbelt'\n\nimport { type Client, type InternalRequestParams } from '../../getPrismaClient'\nimport { getCallSite } from '../../utils/CallSite'\nimport {\n  addObjectProperties,\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n} from '../compositeProxy'\nimport type { PrismaPromise } from '../request/PrismaPromise'\nimport type { UserArgs } from '../request/UserArgs'\nimport { applyAggregates } from './applyAggregates'\nimport { applyFieldsProxy } from './applyFieldsProxy'\nimport { applyFluent } from './applyFluent'\nimport { dmmfToJSModelName } from './utils/dmmfToJSModelName'\n\nexport type ModelAction = (\n  paramOverrides: O.Optional<InternalRequestParams>,\n) => (userArgs?: UserArgs) => PrismaPromise<unknown>\n\nconst fluentProps = [\n  'findUnique',\n  'findUniqueOrThrow',\n  'findFirst',\n  'findFirstOrThrow',\n  'create',\n  'update',\n  'upsert',\n  'delete',\n] as const\nconst aggregateProps = ['aggregate', 'count', 'groupBy'] as const\n\n/**\n * Dynamically creates a model interface via a proxy.\n * @param client to trigger the request execution\n * @param dmmfModelName the dmmf name of the model\n * @returns\n */\nexport function applyModel(client: Client, dmmfModelName: string) {\n  const modelExtensions = client._extensions.getAllModelExtensions(dmmfModelName) ?? {}\n\n  const layers = [\n    modelActionsLayer(client, dmmfModelName),\n    fieldsPropertyLayer(client, dmmfModelName),\n    addObjectProperties(modelExtensions),\n    addProperty('name', () => dmmfModelName),\n    addProperty('$name', () => dmmfModelName),\n    addProperty('$parent', () => client._appliedParent),\n  ]\n\n  return createCompositeProxy({}, layers)\n}\n\n/**\n * Dynamically creates a model interface via a proxy.\n * @param client to trigger the request execution\n * @param dmmfModelName the dmmf name of the model\n * @returns\n */\nfunction modelActionsLayer(client: Client, dmmfModelName: string): CompositeProxyLayer<string> {\n  // we use the javascript model name for display purposes\n  const jsModelName = dmmfToJSModelName(dmmfModelName)\n  const ownKeys = Object.keys(DMMF.ModelAction).concat('count')\n\n  return {\n    getKeys() {\n      return ownKeys\n    },\n\n    getPropertyValue(key) {\n      const dmmfActionName = key as DMMF.ModelAction\n\n      // we return a function as the model action that we want to expose\n      // it takes user args and executes the request in a Prisma Promise\n      const action = (paramOverrides: O.Optional<InternalRequestParams>) => (userArgs?: UserArgs) => {\n        const callSite = getCallSite(client._errorFormat) // used for showing better errors\n\n        return client._createPrismaPromise(\n          (transaction) => {\n            const params: InternalRequestParams = {\n              // data and its dataPath for nested results\n              args: userArgs,\n              dataPath: [],\n\n              // action name and its related model\n              action: dmmfActionName,\n              model: dmmfModelName,\n\n              // method name for display only\n              clientMethod: `${jsModelName}.${key}`,\n              jsModelName,\n\n              // transaction information\n              transaction,\n\n              // stack trace\n              callsite: callSite,\n            }\n\n            return client._request({ ...params, ...paramOverrides })\n          },\n          {\n            action: dmmfActionName,\n            args: userArgs,\n            model: dmmfModelName,\n          },\n        )\n      }\n\n      // we give the control over action for building the fluent api\n      if ((fluentProps as readonly string[]).includes(dmmfActionName)) {\n        return applyFluent(client, dmmfModelName, action)\n      }\n\n      // we handle the edge case of aggregates that need extra steps\n      if (isValidAggregateName(key)) {\n        return applyAggregates(client, key, action)\n      }\n\n      return action({}) // and by default, don't override any params\n    },\n  }\n}\n\nfunction isValidAggregateName(action: string): action is (typeof aggregateProps)[number] {\n  return (aggregateProps as readonly string[]).includes(action)\n}\n\nfunction fieldsPropertyLayer(client: Client, dmmfModelName: string) {\n  return cacheProperties(\n    addProperty('fields', () => {\n      const model = client._runtimeDataModel.models[dmmfModelName]\n      return applyFieldsProxy(dmmfModelName, model)\n    }),\n  )\n}\n", "import { pathToPosix } from '@prisma/internals'\nimport * as stackTraceParser from 'stacktrace-parser'\n\nimport { ErrorFormat } from '../getPrismaClient'\n\ndeclare global {\n  /**\n   * a global variable that is injected by us via jest to make our snapshots\n   * work in clients that cannot read from disk (e.g. wasm or edge clients)\n   */\n  let $EnabledCallSite: typeof EnabledCallSite | undefined\n}\n\nexport type LocationInFile = {\n  fileName: string\n  lineNumber: number | null\n  columnNumber: number | null\n}\n\nexport interface CallSite {\n  getLocation(): LocationInFile | null\n}\n\nclass DisabledCallSite implements CallSite {\n  getLocation(): LocationInFile | null {\n    return null\n  }\n}\n\nexport class EnabledCallSite implements CallSite {\n  private _error: Error\n  constructor() {\n    this._error = new Error()\n  }\n  getLocation(): LocationInFile | null {\n    const stack = this._error.stack\n    if (!stack) {\n      return null\n    }\n    const stackFrames = stackTraceParser.parse(stack)\n    // TODO: more resilient logic to check that it's not relative to cwd\n    const frame = stackFrames.find((t) => {\n      // Here we are trying to find the location in the user's code which caused the error\n      if (!t.file) {\n        return false\n      }\n\n      // convert windows path to posix path\n      const posixFile = pathToPosix(t.file)\n      return (\n        posixFile !== '<anonymous>' && // Ignore as we can not read an <anonymous> file\n        !posixFile.includes('@prisma') && // Internal, unbundled code\n        !posixFile.includes('/packages/client/src/runtime/') && // Runtime sources when source maps are used\n        !posixFile.endsWith('/runtime/binary.js') && // Bundled runtimes\n        !posixFile.endsWith('/runtime/library.js') &&\n        !posixFile.endsWith('/runtime/edge.js') &&\n        !posixFile.endsWith('/runtime/edge-esm.js') &&\n        !posixFile.startsWith('internal/') && // We don't want internal nodejs files\n        !t.methodName.includes('new ') && // \"new CallSite\" call and maybe other constructors\n        !t.methodName.includes('getCallSite') && // getCallSite function from this module\n        !t.methodName.includes('Proxy.') && // Model proxies\n        t.methodName.split('.').length < 4\n      )\n    })\n\n    if (!frame || !frame.file) {\n      return null\n    }\n\n    return {\n      fileName: frame.file,\n      lineNumber: frame.lineNumber,\n      columnNumber: frame.column,\n    }\n  }\n}\n\nexport function getCallSite(errorFormat: ErrorFormat): CallSite {\n  if (\n    errorFormat === 'minimal' ||\n    TARGET_BUILD_TYPE === 'wasm-engine-edge' ||\n    TARGET_BUILD_TYPE === 'wasm-compiler-edge' ||\n    TARGET_BUILD_TYPE === 'edge'\n  ) {\n    if (typeof $EnabledCallSite === 'function' && errorFormat !== 'minimal') {\n      return new $EnabledCallSite()\n    } else {\n      return new DisabledCallSite()\n    }\n  } else {\n    return new EnabledCallSite()\n  }\n}\n", "var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nexport { parse };\n", "import type { Client } from '../../getPrismaClient'\nimport type { UserArgs } from '../request/UserArgs'\nimport { Action } from '../types/exported/JsApi'\nimport { aggregate } from './aggregates/aggregate'\nimport { count } from './aggregates/count'\nimport { groupBy } from './aggregates/groupBy'\nimport type { ModelAction } from './applyModel'\n\n/**\n * Dynamically returns the appropriate aggregate action for a given `action`.\n * With this, we are able to provide an aggregate api that has a better DX. In\n * short, we manipulate the user input which is designed to have DX to transform\n * it into something that the engines understand. Similarly, we take the engine\n * output for that input and produce something that is easier to work with.\n * @param action that tells which aggregate action to execute\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function applyAggregates(client: Client, action: Action, modelAction: ModelAction) {\n  // we effectively take over the aggregate api to perform data changes\n  if (action === 'aggregate') return (userArgs?: UserArgs) => aggregate(userArgs, modelAction)\n  if (action === 'count') return (userArgs?: UserArgs) => count(userArgs, modelAction)\n  if (action === 'groupBy') return (userArgs?: UserArgs) => groupBy(userArgs, modelAction)\n\n  return undefined\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { aggregateMap } from './utils/aggregateMap'\n\n/**\n * Transforms the `userArgs` for the `.aggregate` shorthand. It is an API sugar\n * for not having to do things like: `{select: {_avg: {select: {age: true}}}}`.\n * The goal here is to desugar it into something that is understood by the QE.\n * @param args to transform\n * @returns\n */\nexport function desugarUserArgs(args: UserArgs = {}) {\n  const _args = desugarCountInUserArgs(args)\n  const userArgsEntries = Object.entries(_args)\n\n  return userArgsEntries.reduce(\n    (aggregateArgs, [key, value]) => {\n      if (aggregateMap[key] !== undefined) {\n        // if it's an aggregate, we re-wrap into select\n        aggregateArgs['select']![key] = { select: value }\n      } else {\n        aggregateArgs[key] = value // or leave it alone\n      }\n\n      return aggregateArgs\n    },\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    { select: {} } as UserArgs & { select: UserArgs },\n  )\n}\n\n/**\n * Desugar `userArgs` when it contains `{_count: true}`.\n * @param args the user input\n * @returns\n */\nfunction desugarCountInUserArgs(args: UserArgs = {}) {\n  if (typeof args['_count'] === 'boolean') {\n    return { ...args, _count: { _all: args['_count'] } }\n  }\n\n  return args\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  return (data: object) => {\n    if (typeof args['_count'] === 'boolean') {\n      data['_count'] = data['_count']['_all']\n    }\n\n    return data\n  }\n}\n\n/**\n * Executes the `.aggregate` action on a model.\n * @see {desugarUserArgs}\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function aggregate(args: UserArgs, modelAction: ModelAction) {\n  const aggregateUnpacker = createUnpacker(args)\n\n  return modelAction({\n    action: 'aggregate',\n    unpacker: aggregateUnpacker,\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "export const aggregateMap = {\n  _avg: true,\n  _count: true,\n  _sum: true,\n  _min: true,\n  _max: true,\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { createUnpacker as createUnpackerAggregate, desugarUserArgs as desugarUserArgsAggregate } from './aggregate'\n\n/**\n * Transforms the `userArgs` for the `.count` shorthand. It is an API sugar. It\n * reuses the logic from the `.aggregate` shorthand to add additional handling.\n * The goal here is to desugar it into something that is understood by the QE.\n * @param args to transform\n * @returns\n */\nfunction desugarUserArgs(args: UserArgs = {}) {\n  const { select, ..._args } = args // exclude select\n\n  if (typeof select === 'object') {\n    return desugarUserArgsAggregate({ ..._args, _count: select })\n  } else {\n    return desugarUserArgsAggregate({ ..._args, _count: { _all: true } })\n  }\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  if (typeof args['select'] === 'object') {\n    return (data: object) => createUnpackerAggregate(args)(data)['_count']\n  } else {\n    return (data: object) => createUnpackerAggregate(args)(data)['_count']['_all']\n  }\n}\n\n/**\n * Executes the `.count` action on a model via {@link aggregate}.\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function count(args: UserArgs, modelAction: ModelAction) {\n  return modelAction({\n    action: 'count',\n    unpacker: createUnpacker(args),\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { desugarUserArgs as desugarUserArgsAggregate } from './aggregate'\n\n/**\n * Transforms the `userArgs` for the `.groupBy` shorthand. It is an API sugar.\n * It reuses the logic from the `.aggregate` shorthand and adds additional\n * handling for the `by` clause. The goal here is to desugar it into something\n * that is understood by the QE.\n * @param args to transform\n * @returns\n */\nfunction desugarUserArgs(args: UserArgs = {}) {\n  const _args = desugarUserArgsAggregate(args)\n\n  // we desugar the array into { [key]: boolean }\n  if (Array.isArray(_args['by'])) {\n    for (const key of _args['by']) {\n      if (typeof key === 'string') {\n        _args['select'][key] = true\n      }\n    }\n  } else if (typeof _args['by'] === 'string') {\n    _args['select'][_args['by']] = true\n  }\n\n  return _args\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  return (data: object[]) => {\n    if (typeof args?.['_count'] === 'boolean') {\n      data.forEach((row) => {\n        row['_count'] = row['_count']['_all']\n      })\n    }\n\n    return data\n  }\n}\n\n/**\n * Executes the `.groupBy` action on a model by reusing {@link aggregate}.\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function groupBy(args: UserArgs, modelAction: ModelAction) {\n  return modelAction({\n    action: 'groupBy',\n    unpacker: createUnpacker(args),\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "import { keyBy, RuntimeModel } from '@prisma/client-common'\n\nimport { FieldRefImpl } from './FieldRef'\nimport { defaultProxyHandlers } from './utils/defaultProxyHandlers'\n\nexport type FieldProxy = {\n  readonly [key: string]: FieldRefImpl<string, string>\n}\n\nexport function applyFieldsProxy(modelName: string, model: RuntimeModel): FieldProxy {\n  const scalarFieldsList = model.fields.filter((field) => !field.relationName)\n  const scalarFields = keyBy(scalarFieldsList, 'name')\n  return new Proxy(\n    {},\n    {\n      get(target, prop) {\n        if (prop in target || typeof prop === 'symbol') {\n          return target[prop]\n        }\n        const dmmfField = scalarFields[prop]\n        if (dmmfField) {\n          return new FieldRefImpl(modelName, prop, dmmfField.type, dmmfField.isList, dmmfField.kind === 'enum')\n        }\n\n        return undefined\n      },\n      ...defaultProxyHandlers(Object.keys(scalarFields)),\n    },\n  )\n}\n", "import type * as DMMF from '@prisma/dmmf'\n\nimport type { Client } from '../../getPrismaClient'\nimport { getCallSite } from '../../utils/CallSite'\nimport { deepSet } from '../../utils/deep-set'\nimport type { UserArgs } from '../request/UserArgs'\nimport type { ModelAction } from './applyModel'\nimport { defaultProxyHandlers } from './utils/defaultProxyHandlers'\n\n/**\n * The fluent API makes that nested relations can be retrieved at once. It's a\n * helper for writing `select` statements on relations with a chaining api.\n * Because of this, we automatically add `select` statements to the query, that\n * also means that we need to provide a `dataPath` for unpacking nested values.\n * @see {getNextUserArgs}\n * @param dmmfModelName\n * @param prevDataPath\n * @returns\n */\nfunction getNextDataPath(fluentPropName?: string, prevDataPath?: string[]) {\n  if (fluentPropName === undefined || prevDataPath === undefined) return []\n\n  return [...prevDataPath, 'select', fluentPropName]\n}\n\n/**\n * @see {getNextDataPath} for introduction. The goal of the fluent API is to\n * make it easy to retrieve nested relations. For this, we construct the query\n * args that are necessary to retrieve the nested relations. It consists of\n * nesting `select` statements each time that we access a relation.\n * @param callArgs usually passed on the last call of the chaining api\n * @param prevArgs when multiple chaining occurs, they are the previous\n * @param nextDataPath path where to set `callArgs` in `prevArgs`\n * @example\n * ```ts\n * prisma.user.findUnique().link().user()\n *\n * // will end up with an args like this:\n * // args {\n * //   \"where\": {\n * //     \"email\": \"1639498523518@gmail.com\"\n * //   },\n * //   \"select\": {\n * //     \"link\": {\n * //       \"select\": {\n * //         \"user\": true\n * //       }\n * //     }\n * //   }\n * // }\n * ```\n */\nfunction getNextUserArgs(callArgs: UserArgs, prevArgs: UserArgs, nextDataPath: string[]): UserArgs {\n  if (prevArgs === undefined) return callArgs ?? {}\n\n  return deepSet(prevArgs, nextDataPath, callArgs || true)\n}\n\n/**\n * Dynamically creates a fluent API from a `modelAction` and a `dmmfModelName`.\n * We use the current `dmmfModelName` to determine what can be chained on next.\n * The fluent API allows to chain on model relations to provide an alternative\n * way to fetch and access nested data all at once. When triggered, it calls\n * `modelActions` after having accumulated `prevDataPath` and `prevUserArgs`\n * with the chaining. You can find an example of usage at {@link applyModel}.\n * @param client to provide dmmf information\n * @param dmmfModelName the dmmf name of the model to apply the api to\n * @param modelAction a callback action that triggers request execution\n * @param fluentPropName the name of the api link that was just called\n * @param prevDataPath the dataPath from the previous api link\n * @param prevUserArgs the userArgs from the previous api link\n * @remarks optional parameters are empty on the first call via\n * {@link applyModel}\n * @returns\n */\nexport function applyFluent(\n  client: Client,\n  dmmfModelName: string,\n  modelAction: ModelAction,\n  fluentPropName?: string,\n  prevDataPath?: string[],\n  prevUserArgs?: UserArgs,\n) {\n  // we retrieve the model that is described from the DMMF\n  const dmmfModel = client._runtimeDataModel.models[dmmfModelName]\n\n  // map[field.name] === field, basically for quick access\n  const dmmfModelFieldMap = dmmfModel.fields.reduce(\n    (acc, field) => ({ ...acc, [field.name]: field }),\n    {} as { [dmmfModelFieldName: string]: DMMF.Field },\n  )\n\n  // we return a regular model action but proxy its return\n  return (userArgs?: UserArgs) => {\n    const callsite = getCallSite(client._errorFormat)\n    // ! first call: nextDataPath => [], nextUserArgs => userArgs\n    const nextDataPath = getNextDataPath(fluentPropName, prevDataPath)\n    const nextUserArgs = getNextUserArgs(userArgs, prevUserArgs, nextDataPath)\n    const prismaPromise = modelAction({ dataPath: nextDataPath, callsite })(nextUserArgs)\n    // TODO: use an unpacker here instead of ClientFetcher logic\n    // TODO: once it's done we can deprecate the use of dataPath\n    const ownKeys = getOwnKeys(client, dmmfModelName)\n\n    // we take control of the return promise to allow chaining\n    return new Proxy(prismaPromise, {\n      get(target, prop: string) {\n        // fluent api only works on fields that are relational\n        if (!ownKeys.includes(prop)) return target[prop]\n\n        // here we are sure that prop is a field of type object\n        const dmmfModelName = dmmfModelFieldMap[prop].type\n        const modelArgs = [dmmfModelName, modelAction, prop] as const\n        const dataArgs = [nextDataPath, nextUserArgs] as const\n\n        // we allow for chaining more with this recursive call\n        return applyFluent(client, ...modelArgs, ...dataArgs)\n      },\n      ...defaultProxyHandlers([...ownKeys, ...Object.getOwnPropertyNames(prismaPromise)]),\n    })\n  }\n}\n\n// the only accessible fields are relations to be chained on\nfunction getOwnKeys(client: Client, dmmfModelName: string) {\n  return client._runtimeDataModel.models[dmmfModelName].fields\n    .filter((field) => field.kind === 'object') // relations\n    .map((field) => field.name)\n}\n", "// Taken from https://gist.github.com/LukeChannings/15c92cef5a016a8b21a0\n\n// ensure the keys being passed is an array of key paths\n// example: 'a.b' becomes ['a', 'b'] unless it was already ['a', 'b']\nconst keys = (ks: string | string[]) => (Array.isArray(ks) ? ks : ks.split('.'))\n\n// traverse the set of keys left to right,\n// returning the current value in each iteration.\n// if at any point the value for the current key does not exist,\n// return the default value\nexport const deepGet = (o, kp: string[]) => keys(kp).reduce((o, k) => o && o[k], o)\n\n// traverse the set of keys right to left,\n// returning a new object containing both properties from the object\n// we were originally passed and our new property.\n//\n// Example:\n// If o = { a: { b: { c: 1 } } }\n//\n// deepSet(o, ['a', 'b', 'c'], 2) will progress thus:\n// 1. c = Object.assign({}, {c: 1}, { c: 2 })\n// 2. b = Object.assign({}, { b: { c: 1 } }, { b: c })\n// 3. returned = Object.assign({}, { a: { b: { c: 1 } } }, { a: b })\nexport const deepSet = (o: any, kp: string | string[], v: any) =>\n  keys(kp).reduceRight((v, k, i, ks) => Object.assign({}, deepGet(o, ks.slice(0, i)), { [k]: v }), v)\n", "/**\n * Transforms a model name coming from the runtime to a DMMF model name.\n * @param name\n * @returns\n */\nexport function jsToDMMFModelName(name: string) {\n  return name.replace(/^./, (str) => str.toUpperCase())\n}\n", "import { RuntimeDataModel } from '@prisma/client-common'\n\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { JsArgs } from '../types/exported/JsApi'\nimport { applyResultExtensions } from './applyResultExtensions'\nimport { MergedExtensionsList } from './MergedExtensionsList'\nimport { visitQueryResult } from './visitQueryResult'\n\ntype ApplyAllResultExtensionsParams = {\n  result: object | null\n  modelName: string\n  args: JsArgs\n  extensions: MergedExtensionsList\n  runtimeDataModel: RuntimeDataModel\n  globalOmit?: GlobalOmitOptions\n}\n\n/**\n * Walks the result of the query and applies all possible result extensions\n * to all parts of it, including nested relations\n */\nexport function applyAllResultExtensions({\n  result,\n  modelName,\n  args,\n  extensions,\n  runtimeDataModel,\n  globalOmit,\n}: ApplyAllResultExtensionsParams) {\n  // We return the result directly (not applying result extensions) if\n  // - there is no extension to apply\n  // - result is `null`\n  // - result is not an object (e.g. `.count()`)\n  if (extensions.isEmpty() || result == null || typeof result !== 'object') {\n    return result\n  }\n  const model = runtimeDataModel.models[modelName]\n  if (!model) {\n    return result\n  }\n\n  return visitQueryResult({\n    result,\n    args: args ?? {},\n    modelName,\n    runtimeDataModel,\n    visitor: (value, dmmfModelName, args) => {\n      const jsName = dmmfToJSModelName(dmmfModelName)\n      return applyResultExtensions({\n        result: value,\n        modelName: jsName,\n        select: args.select,\n        // passing omit only if explicit select is not set - those 2 options are\n        // mutually exclusive\n        omit: args.select ? undefined : { ...globalOmit?.[jsName], ...args.omit },\n        extensions,\n      })\n    },\n  })\n}\n", "import { hasOwnProperty } from '@prisma/internals'\n\nimport {\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n  removeProperties,\n} from '../compositeProxy'\nimport { Omission, Selection } from '../types/exported/JsApi'\nimport { MergedExtensionsList } from './MergedExtensionsList'\nimport { ComputedField } from './resultUtils'\n\ntype ApplyExtensionsArgs = {\n  result: object\n  select?: Selection\n  omit?: Omission\n  modelName: string\n  extensions: MergedExtensionsList\n}\n\n/**\n * Given a part of a query result, it's model name and a list of extension,\n * applies computed fields to the results. Fields are computed lazily on a first access,\n * after that the result of computation is cached. In case `select` is used, all dependencies\n * of the computed fields would be excluded from final result, unless they are also specified in the select.\n *\n * This function applies computed fields to a single object only: it does not traverse relationships.\n * For full functionality, it is meant to be combined with `visitQueryResult`.\n *\n * @param params\n * @returns\n */\nexport function applyResultExtensions({ result, modelName, select, omit, extensions }: ApplyExtensionsArgs) {\n  const computedFields = extensions.getAllComputedFields(modelName)\n  if (!computedFields) {\n    return result\n  }\n\n  const computedPropertiesLayers: CompositeProxyLayer[] = []\n  const maskingLayers: CompositeProxyLayer[] = []\n\n  for (const field of Object.values(computedFields)) {\n    if (omit) {\n      if (omit[field.name]) {\n        continue\n      }\n      const toMask = field.needs.filter((prop) => omit[prop])\n      if (toMask.length > 0) {\n        maskingLayers.push(removeProperties(toMask))\n      }\n    } else if (select) {\n      if (!select[field.name]) {\n        continue\n      }\n\n      const toMask = field.needs.filter((prop) => !select[prop])\n      if (toMask.length > 0) {\n        maskingLayers.push(removeProperties(toMask))\n      }\n    }\n\n    if (areNeedsMet(result, field.needs)) {\n      computedPropertiesLayers.push(\n        computedPropertyLayer(field, createCompositeProxy(result, computedPropertiesLayers)),\n      )\n    }\n  }\n\n  if (computedPropertiesLayers.length > 0 || maskingLayers.length > 0) {\n    return createCompositeProxy(result, [...computedPropertiesLayers, ...maskingLayers])\n  }\n  return result\n}\n\nfunction areNeedsMet(result: object, neededProperties: string[]) {\n  return neededProperties.every((property) => hasOwnProperty(result, property))\n}\n\nfunction computedPropertyLayer(field: ComputedField, result: object): CompositeProxyLayer {\n  return cacheProperties(addProperty(field.name, () => field.compute(result)))\n}\n", "import { RuntimeDataModel } from '@prisma/client-common'\n\nimport { isSkip } from '../types'\nimport { JsArgs, Selection } from '../types/exported/JsApi'\n\ntype ModelVisitor = (value: object, modelName: string, queryArgs: JsArgs) => object | undefined\n\ntype VisitParams = {\n  result: object\n  args: JsArgs\n  modelName: string\n  runtimeDataModel: RuntimeDataModel\n  visitor: ModelVisitor\n}\n\n/**\n * Function recursively walks through provided query response using `include` and `select`\n * query parameters and calls `visitor` callback for each model it encounters.\n * `visitor` receives the value of a particular response section, model it corresponds to and\n * the arguments used to query it. If visitor returns any non-undefined value that value will\n * replace corresponding part of the final result.\n *\n * @param params\n * @returns\n */\nexport function visitQueryResult({ visitor, result, args, runtimeDataModel, modelName }: VisitParams) {\n  if (Array.isArray(result)) {\n    for (let i = 0; i < result.length; i++) {\n      result[i] = visitQueryResult({\n        result: result[i],\n        args,\n        modelName,\n        runtimeDataModel,\n        visitor,\n      })\n    }\n    return result\n  }\n  const visitResult = visitor(result, modelName, args) ?? result\n  if (args.include) {\n    visitNested({\n      includeOrSelect: args.include,\n      result: visitResult,\n      parentModelName: modelName,\n      runtimeDataModel,\n      visitor,\n    })\n  }\n  if (args.select) {\n    visitNested({\n      includeOrSelect: args.select,\n      result: visitResult,\n      parentModelName: modelName,\n      runtimeDataModel,\n      visitor,\n    })\n  }\n  return visitResult\n}\n\ntype VisitNestedParams = {\n  includeOrSelect: Selection\n  result: object\n  parentModelName: string\n  runtimeDataModel: RuntimeDataModel\n  visitor: ModelVisitor\n}\n\nfunction visitNested({ includeOrSelect, result, parentModelName, runtimeDataModel, visitor }: VisitNestedParams) {\n  for (const [fieldName, subConfig] of Object.entries(includeOrSelect)) {\n    if (!subConfig || result[fieldName] == null || isSkip(subConfig)) {\n      continue\n    }\n    const parentModel = runtimeDataModel.models[parentModelName]\n    const field = parentModel.fields.find((field) => field.name === fieldName)\n    if (!field || field.kind !== 'object' || !field.relationName) {\n      continue\n    }\n    const args = typeof subConfig === 'object' ? subConfig : {}\n    result[fieldName] = visitQueryResult({\n      visitor,\n      result: result[fieldName],\n      args,\n      modelName: field.type,\n      runtimeDataModel,\n    })\n  }\n}\n", "import { Client, InternalRequestParams } from '../../getPrismaClient'\nimport { RequestParams } from '../../RequestHandler'\nimport { deepCloneArgs } from '../../utils/deepCloneArgs'\nimport { AccelerateExtensionFetchDecorator } from '../engines'\nimport { QueryOptionsCb } from '../types/exported/ExtensionArgs'\nimport { BatchInternalParams, BatchQueryOptionsCb } from '../types/internal/ExtensionsInternalArgs'\n\nfunction iterateAndCallQueryCallbacks(\n  client: Client,\n  params: InternalRequestParams,\n  queryCbs: QueryOptionsCb[],\n  i = 0,\n) {\n  return client._createPrismaPromise((transaction) => {\n    // we need to keep track of the previous customDataProxyFetch\n    const prevCustomFetch = params.customDataProxyFetch\n\n    // allow query extensions to re-wrap in transactions\n    // this will automatically discard the prev batch tx\n    if ('transaction' in params && transaction !== undefined) {\n      if (params.transaction?.kind === 'batch') {\n        void params.transaction.lock.then() // discard\n      }\n      params.transaction = transaction\n    }\n\n    // if we are done recursing, we execute the request\n    if (i === queryCbs.length) {\n      return client._executeRequest(params)\n    }\n\n    // if not, call the next query cb and recurse query\n    return queryCbs[i]({\n      model: params.model,\n      operation: params.model ? params.action : params.clientMethod,\n      args: deepCloneArgs(params.args ?? {}),\n      // @ts-expect-error because not part of public API\n      __internalParams: params,\n      query: (args, __internalParams = params) => {\n        // we need to keep track of the current customDataProxyFetch\n        // this is to cascade customDataProxyFetch like a middleware\n        const currCustomFetch = __internalParams.customDataProxyFetch\n        __internalParams.customDataProxyFetch = composeCustomDataProxyFetch(prevCustomFetch, currCustomFetch)\n        __internalParams.args = args\n\n        return iterateAndCallQueryCallbacks(client, __internalParams, queryCbs, i + 1)\n      },\n    })\n  })\n}\n\nexport function applyQueryExtensions(client: Client, params: InternalRequestParams): Promise<any> {\n  const { jsModelName, action, clientMethod } = params\n  const operation = jsModelName ? action : clientMethod\n\n  // query extensions only apply to model-bound operations\n  if (client._extensions.isEmpty()) {\n    return client._executeRequest(params)\n  }\n\n  // get the cached query cbs for a given model and action\n  const cbs = client._extensions.getAllQueryCallbacks(jsModelName ?? '$none', operation)\n\n  return iterateAndCallQueryCallbacks(client, params, cbs)\n}\n\ntype BatchExecuteCallback = (params: BatchInternalParams) => Promise<unknown[]>\n\nexport function createApplyBatchExtensionsFunction(executeBatch: BatchExecuteCallback) {\n  return (requests: RequestParams[]) => {\n    const params = { requests }\n    const callbacks = requests[0].extensions.getAllBatchQueryCallbacks()\n    if (!callbacks.length) {\n      return executeBatch(params)\n    }\n\n    return iterateAndCallBatchCallbacks(params, callbacks, 0, executeBatch)\n  }\n}\n\nexport function iterateAndCallBatchCallbacks(\n  params: BatchInternalParams,\n  callbacks: BatchQueryOptionsCb[],\n  i: number,\n  executeBatch: BatchExecuteCallback,\n) {\n  if (i === callbacks.length) {\n    return executeBatch(params)\n  }\n\n  const prevFetch = params.customDataProxyFetch\n  const transaction = params.requests[0].transaction\n  return callbacks[i]({\n    args: {\n      queries: params.requests.map((request) => ({\n        model: request.modelName,\n        operation: request.action,\n        args: request.args,\n      })),\n      transaction: transaction\n        ? {\n            isolationLevel: transaction.kind === 'batch' ? transaction.isolationLevel : undefined,\n          }\n        : undefined,\n    },\n    __internalParams: params,\n    query(_args, __internalParams = params) {\n      const nextFetch = __internalParams.customDataProxyFetch\n      __internalParams.customDataProxyFetch = composeCustomDataProxyFetch(prevFetch, nextFetch)\n      return iterateAndCallBatchCallbacks(__internalParams, callbacks, i + 1, executeBatch)\n    },\n  })\n}\n\nconst noopFetch: AccelerateExtensionFetchDecorator = (f) => f\nfunction composeCustomDataProxyFetch(prevFetch = noopFetch, nextFetch = noopFetch): AccelerateExtensionFetchDecorator {\n  return (f) => prevFetch(nextFetch(f))\n}\n", "import { assertNever } from '@prisma/internals'\nimport Decimal from 'decimal.js'\nimport { Sql } from 'sql-template-tag'\n\nimport { isFieldRef } from '../core/model/FieldRef'\nimport { isTypedSql, TypedSql, UnknownTypedSql } from '../core/types/exported'\nimport { JsArgs, JsInputValue } from '../core/types/exported/JsApi'\nimport { ObjectEnumValue } from '../core/types/exported/ObjectEnums'\nimport { RawQueryArgs } from '../core/types/exported/RawQueryArgs'\nimport { isDate } from './date'\nimport { isDecimalJsLike } from './decimalJsLike'\n\nexport function deepCloneArgs(args: JsArgs | RawQueryArgs): JsArgs | RawQueryArgs {\n  if (args instanceof Sql) {\n    return cloneSql(args)\n  }\n\n  if (isTypedSql(args)) {\n    return cloneTypedSql(args)\n  }\n\n  if (Array.isArray(args)) {\n    const clone: RawQueryArgs = [args[0]]\n\n    for (let i = 1; i < args.length; i++) {\n      clone[i] = deepCloneValue(args[i] as JsInputValue)\n    }\n\n    return clone\n  }\n  const clone: JsArgs = {}\n  for (const k in args) {\n    clone[k] = deepCloneValue(args[k])\n  }\n  return clone\n}\n\nfunction cloneSql(rawParam: Sql): Sql {\n  return new Sql(rawParam.strings, rawParam.values)\n}\n\nfunction cloneTypedSql(rawParam: UnknownTypedSql): UnknownTypedSql {\n  return new TypedSql(rawParam.sql, rawParam.values)\n}\n\n// based on https://github.com/lukeed/klona/blob/v2.0.6/src/index.js\nfunction deepCloneValue(x: JsInputValue): JsInputValue {\n  if (typeof x !== 'object' || x == null || x instanceof ObjectEnumValue || isFieldRef(x)) {\n    return x\n  }\n\n  if (isDecimalJsLike(x)) {\n    return new Decimal(x.toFixed())\n  }\n\n  if (isDate(x)) {\n    return new Date(+x)\n  }\n\n  if (ArrayBuffer.isView(x)) {\n    return x.slice(0)\n  }\n\n  if (Array.isArray(x)) {\n    let k = x.length\n    let copy\n    for (copy = Array(k); k--; ) {\n      copy[k] = deepCloneValue(x[k])\n    }\n    return copy\n  }\n\n  if (typeof x === 'object') {\n    const copy = {}\n    for (const k in x) {\n      if (k === '__proto__') {\n        Object.defineProperty(copy, k, {\n          value: deepCloneValue(x[k]),\n          configurable: true,\n          enumerable: true,\n          writable: true,\n        })\n      } else {\n        copy[k] = deepCloneValue(x[k])\n      }\n    }\n    return copy\n  }\n\n  assertNever(x, 'Unknown value')\n}\n", "const denylist = ['$connect', '$disconnect', '$on', '$transaction', '$extends'] as const\n\nexport const itxClientDenyList = denylist as ReadonlyArray<string | symbol>\n\nexport type ITXClientDenyList = (typeof denylist)[number]\n", "import { GetPrismaClientConfig } from '@prisma/client-common'\nimport { Debug } from '@prisma/debug'\n\nimport { PrismaClientInitializationError } from '../errors/PrismaClientInitializationError'\n\nconst debug = Debug('prisma:client')\n\n/**\n * Known platforms that have caching issues. Updating this list will also update\n * the error message and the link to the docs, so add docs/links as needed. The\n * key from this map comes from the `ciName` property of the `ci-info` package.\n */\nconst cachingPlatforms = {\n  Vercel: 'vercel',\n  'Netlify CI': 'netlify',\n} as const\n\ntype Config = Pick<GetPrismaClientConfig, 'postinstall' | 'ciName' | 'clientVersion'>\n\n/**\n * Throws an error if the client has been generated via auto-install and the\n * platform is known to have caching issues. In that case, we will display a\n * useful error message, and ask the user to run `prisma generate` manually.\n * @returns\n */\nexport function checkPlatformCaching({ postinstall, ciName, clientVersion }: Config) {\n  debug('checkPlatformCaching:postinstall', postinstall)\n  debug('checkPlatformCaching:ciName', ciName)\n\n  // if client was not generated manually\n  if (postinstall !== true) return\n\n  // and we generated on one a caching CI\n  if (ciName && ciName in cachingPlatforms) {\n    const message = `Prisma has detected that this project was built on ${ciName}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \\`prisma generate\\` command during the build process.\n\nLearn how: https://pris.ly/d/${cachingPlatforms[ciName]}-build`\n\n    console.error(message) // display a nice and visible error message\n\n    // also throw an error so that the user can catch it and handle it\n    throw new PrismaClientInitializationError(message, clientVersion)\n  }\n}\n", "import { Datasources, PrismaClientOptions } from '../../getPrismaClient'\n\nexport function getDatasourceOverrides(\n  options: PrismaClientOptions | undefined,\n  datasourceNames: string[],\n): Datasources {\n  if (!options) {\n    return {}\n  }\n\n  if (options.datasources) {\n    return options.datasources\n  }\n\n  if (options.datasourceUrl) {\n    const primaryDatasource = datasourceNames[0]\n    return { [primaryDatasource]: { url: options.datasourceUrl } }\n  }\n  return {}\n}\n", "import { GetPrismaClientConfig } from '@prisma/client-common'\nimport { ClientEngineType, getClientEngineType, warnOnce } from '@prisma/internals'\n\nimport { getRuntime } from '../../utils/getRuntime'\nimport { BinaryEngine, ClientEngine, DataProxyEngine, EngineConfig, LibraryEngine } from '../engines'\nimport { AccelerateEngine } from '../engines/accelerate/AccelerateEngine'\nimport { PrismaClientValidationError } from '../errors/PrismaClientValidationError'\nimport { resolveDatasourceUrl } from './resolveDatasourceUrl'\nimport { validateEngineInstanceConfig } from './validateEngineInstanceConfig'\n\n/**\n * Get the engine instance based on the engine type and the target engine type\n * (binary, library, data proxy). If the URL is a prisma:// URL, it will always\n * use the DataProxyEngine. Basically decides which engine to load.\n * @param clientConfig\n * @param engineConfig\n * @returns\n */\nexport function getEngineInstance({ copyEngine = true }: GetPrismaClientConfig, engineConfig: EngineConfig) {\n  let url: string | undefined\n\n  try {\n    url = resolveDatasourceUrl({\n      inlineDatasources: engineConfig.inlineDatasources,\n      overrideDatasources: engineConfig.overrideDatasources,\n      env: { ...engineConfig.env, ...process.env },\n      clientVersion: engineConfig.clientVersion,\n    })\n  } catch {\n    // the error does not matter, but that means we don't have a valid url which\n    // means we can't use the DataProxyEngine and will default to LibraryEngine\n  }\n\n  const { ok, isUsing, diagnostics } = validateEngineInstanceConfig({\n    url,\n    adapter: engineConfig.adapter,\n    copyEngine,\n    targetBuildType: TARGET_BUILD_TYPE,\n  })\n\n  for (const warning of diagnostics.warnings) {\n    warnOnce(...warning.value)\n  }\n\n  if (!ok) {\n    const error = diagnostics.errors[0]\n    throw new PrismaClientValidationError(error.value, { clientVersion: engineConfig.clientVersion })\n  }\n\n  const engineType = getClientEngineType(engineConfig.generator!)\n\n  const libraryEngineConfigured = engineType === ClientEngineType.Library\n  const binaryEngineConfigured = engineType === ClientEngineType.Binary\n  const clientEngineConfigured = engineType === ClientEngineType.Client\n\n  // TODO: one day we may want to completely deprecate `@prisma/client/edge` in favor of wasm build\n  // TODO: After having moved the DataProxyEngine to Accelerate\n  // - Replace DataProxyEngine with AccelerateEngine via `@prisma/extension-accelerate`\n  // - Delete DataProxyEngine and all related files\n  // - Update the DataProxy tests to use the /wasm endpoint, but keep ecosystem-tests as they are\n\n  // When a local driver adapter is configured, the URL from the datasource\n  // block in the Prisma schema is no longer relevant as driver adapters don't\n  // use it. Therefore, a configured driver adapter takes precedence over the\n  // Accelerate or PPg URL in the schema file.\n  const clientEngineUsesRemoteExecutor = (isUsing.accelerate || isUsing.ppg) && !isUsing.driverAdapters\n\n  if (TARGET_BUILD_TYPE === 'react-native') return new LibraryEngine(engineConfig)\n  else if (clientEngineConfigured && TARGET_BUILD_TYPE === 'client')\n    return new ClientEngine(engineConfig, clientEngineUsesRemoteExecutor)\n  else if (clientEngineConfigured && TARGET_BUILD_TYPE === 'wasm-compiler-edge')\n    return new ClientEngine(engineConfig, clientEngineUsesRemoteExecutor)\n  else if (isUsing.accelerate && TARGET_BUILD_TYPE !== 'wasm-engine-edge') return new DataProxyEngine(engineConfig)\n  else if (isUsing.driverAdapters && TARGET_BUILD_TYPE === 'wasm-engine-edge') return new LibraryEngine(engineConfig)\n  else if (libraryEngineConfigured && TARGET_BUILD_TYPE === 'library') return new LibraryEngine(engineConfig)\n  else if (binaryEngineConfigured && TARGET_BUILD_TYPE === 'binary') return new BinaryEngine(engineConfig)\n  else if (isUsing.accelerate && TARGET_BUILD_TYPE === 'wasm-engine-edge') return new AccelerateEngine(engineConfig)\n  // reasonable fallbacks in case the conditions above aren't met, we should still try the correct engine\n  else if (TARGET_BUILD_TYPE === 'edge') return new DataProxyEngine(engineConfig)\n  else if (TARGET_BUILD_TYPE === 'library') return new LibraryEngine(engineConfig)\n  else if (TARGET_BUILD_TYPE === 'binary') return new BinaryEngine(engineConfig)\n  else if (TARGET_BUILD_TYPE === 'client') return new ClientEngine(engineConfig, clientEngineUsesRemoteExecutor)\n  // if either accelerate or wasm library could not be loaded for some reason, we throw an error\n  else if (TARGET_BUILD_TYPE === 'wasm-engine-edge' || TARGET_BUILD_TYPE === 'wasm-compiler-edge') {\n    const message = [\n      `PrismaClient failed to initialize because it wasn't configured to run in this environment (${\n        getRuntime().prettyName\n      }).`,\n      'In order to run Prisma Client in an edge runtime, you will need to configure one of the following options:',\n      '- Enable Driver Adapters: https://pris.ly/d/driver-adapters',\n      '- Enable Accelerate: https://pris.ly/d/accelerate',\n    ]\n\n    throw new PrismaClientValidationError(message.join('\\n'), {\n      clientVersion: engineConfig.clientVersion,\n    })\n  }\n\n  return TARGET_BUILD_TYPE satisfies never\n}\n", "// https://runtime-keys.proposal.wintercg.org/\nexport type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '' /* unknown */\n\n/**\n * Indicates if running in Node.js or a Node.js compatible runtime.\n *\n * **Note:** When running code in Bun and Deno with Node.js compatibility mode, `isNode` flag will be also `true`, indicating running in a Node.js compatible runtime.\n */\nconst isNode = () => globalThis.process?.release?.name === 'node'\n\n/**\n * Indicates if running in Bun runtime.\n */\nconst isBun = () => !!globalThis.Bun || !!globalThis.process?.versions?.bun\n\n/**\n * Indicates if running in Deno runtime.\n */\nconst isDeno = () => !!globalThis.Deno\n\n/**\n * Indicates if running in Netlify runtime.\n */\nconst isNetlify = () => typeof globalThis.Netlify === 'object'\n\n/**\n * Indicates if running in EdgeLight (Vercel Edge) runtime.\n */\nconst isEdgeLight = () => typeof globalThis.EdgeRuntime === 'object'\n\n/**\n * Indicates if running in Cloudflare Workers runtime.\n * See: https://developers.cloudflare.com/workers/runtime-apis/web-standards/#navigatoruseragent\n */\nconst isWorkerd = () => globalThis.navigator?.userAgent === 'Cloudflare-Workers'\n\nfunction detectRuntime(): RuntimeName {\n  // Note: we're currently not taking 'fastly' into account. Why?\n  const runtimeChecks = [\n    [isNetlify, 'netlify'],\n    [isEdgeLight, 'edge-light'],\n    [isWorkerd, 'workerd'],\n    [isDeno, 'deno'],\n    [isBun, 'bun'],\n    [isNode, 'node'],\n  ] as const\n\n  const detectedRuntime =\n    runtimeChecks\n      // TODO: Transforming destructuring to the configured target environment ('chrome58', 'edge16', 'firefox57', 'safari11') is not supported yet,\n      // so we can't write the following code yet:\n      // ```\n      // .flatMap(([isCurrentRuntime, runtime]) => isCurrentRuntime() ? [runtime] : [])\n      // ```\n      .flatMap((check) => (check[0]() ? [check[1]] : []))\n      .at(0) ?? ''\n\n  return detectedRuntime\n}\n\nconst runtimesPrettyNames = {\n  node: 'Node.js',\n  workerd: 'Cloudflare Workers',\n  deno: 'Deno and Deno Deploy',\n  netlify: 'Netlify Edge Functions',\n  'edge-light':\n    'Edge Runtime (Vercel Edge Functions, Vercel Edge Middleware, Next.js (Pages Router) Edge API Routes, Next.js (App Router) Edge Route Handlers or Next.js Middleware)',\n} as const\n\ntype GetRuntimeOutput = {\n  id: RuntimeName\n  prettyName: string\n  isEdge: boolean\n}\n\nexport function getRuntime(): GetRuntimeOutput {\n  const runtimeId = detectRuntime()\n\n  return {\n    id: runtimeId,\n    // Fallback to the runtimeId if the runtime is not in the list\n    prettyName: runtimesPrettyNames[runtimeId] || runtimeId,\n    isEdge: ['workerd', 'deno', 'netlify', 'edge-light'].includes(runtimeId),\n  }\n}\n", "export { BinaryEngine } from './binary/BinaryEngine'\nexport { ClientEngine } from './client/ClientEngine'\nexport {\n  type AccelerateExtensionFetchDecorator,\n  type BatchTransactionOptions,\n  type Engine,\n  type EngineConfig,\n  type GraphQLQuery,\n  type InteractiveTransactionOptions,\n  type TransactionOptions,\n} from './common/Engine'\nexport * from './common/types/EngineValidationError'\nexport type { LogEmitter } from './common/types/Events'\nexport * from './common/types/JsonProtocol'\nexport type { Metric, MetricHistogram, MetricHistogramBucket, Metrics } from './common/types/Metrics'\nexport type { IsolationLevel, Options, TransactionHeaders } from './common/types/Transaction'\nexport { DataProxyEngine } from './data-proxy/DataProxyEngine'\nexport { LibraryEngine } from './library/LibraryEngine'\nexport * as NodeAPILibraryTypes from './library/types/Library'\n", "export * from './batch'\nexport type { QueryEvent } from './events'\nexport { DataMapperError } from './interpreter/data-mapper'\nexport {\n  QueryInterpreter,\n  type QueryInterpreterOptions,\n  type QueryInterpreterTransactionManager,\n} from './interpreter/query-interpreter'\nexport * from './json-protocol'\nexport * from './query-plan'\nexport * from './raw-json-protocol'\nexport type { SchemaProvider } from './schema'\nexport { noopTracingHelper, type TracingHelper } from './tracing'\nexport type { TransactionInfo, Options as TransactionOptions } from './transaction-manager/transaction'\nexport { TransactionManager } from './transaction-manager/transaction-manager'\nexport { TransactionManagerError } from './transaction-manager/transaction-manager-error'\nexport { UserFacingError } from './user-facing-error'\nexport { doKeysMatch, isDeepStrictEqual, safeJsonStringify } from './utils'\n", "import { Decimal } from 'decimal.js'\n\nimport { assertNever } from './utils'\n\nexport type DateTaggedValue = { $type: 'DateTime'; value: string }\nexport type DecimalTaggedValue = { $type: 'Decimal'; value: string }\nexport type BytesTaggedValue = { $type: 'Bytes'; value: string }\nexport type BigIntTaggedValue = { $type: 'BigInt'; value: string }\nexport type FieldRefTaggedValue = { $type: 'FieldRef'; value: { _ref: string } }\nexport type EnumTaggedValue = { $type: 'Enum'; value: string }\nexport type JsonTaggedValue = { $type: 'Json'; value: string }\n\nexport type JsonInputTaggedValue =\n  | DateTaggedValue\n  | DecimalTaggedValue\n  | BytesTaggedValue\n  | BigIntTaggedValue\n  | FieldRefTaggedValue\n  | JsonTaggedValue\n  | EnumTaggedValue\n\nexport type JsonOutputTaggedValue =\n  | DateTaggedValue\n  | DecimalTaggedValue\n  | BytesTaggedValue\n  | BigIntTaggedValue\n  | JsonTaggedValue\n\nexport type JsOutputValue =\n  | null\n  | string\n  | number\n  | boolean\n  | bigint\n  | Uint8Array\n  | Date\n  | Decimal\n  | JsOutputValue[]\n  | { [key: string]: JsOutputValue }\n\nexport function normalizeJsonProtocolValues(result: unknown): unknown {\n  if (result === null) {\n    return result\n  }\n\n  if (Array.isArray(result)) {\n    return result.map(normalizeJsonProtocolValues)\n  }\n\n  if (typeof result === 'object') {\n    if (isTaggedValue(result)) {\n      return normalizeTaggedValue(result)\n    }\n\n    // avoid mapping class instances\n    if (result.constructor !== null && result.constructor.name !== 'Object') {\n      return result\n    }\n\n    return mapObjectValues(result, normalizeJsonProtocolValues)\n  }\n\n  return result\n}\n\nfunction isTaggedValue(value: unknown): value is JsonOutputTaggedValue {\n  return value !== null && typeof value == 'object' && typeof value['$type'] === 'string'\n}\n\n/**\n * Normalizes the value inside a tagged value to match the snapshots in tests.\n * Sometimes there are multiple equally valid representations of the same value\n * (e.g. a decimal string may contain an arbitrary number of trailing zeros,\n * datetime strings may specify the UTC offset as either '+00:00' or 'Z', etc).\n * Since these differences have no effect on the actual values received from the\n * Prisma Client once the response is deserialized to JavaScript values, we don't\n * spend extra CPU cycles on normalizing them in the data mapper. Instead, we\n * patch and normalize them here to ensure they are consistent with the snapshots\n * in the query engine tests.\n */\nfunction normalizeTaggedValue({ $type, value }: JsonOutputTaggedValue): JsonOutputTaggedValue {\n  switch ($type) {\n    case 'BigInt':\n      return { $type, value: String(value) }\n    case 'Bytes':\n      return { $type, value: Buffer.from(value, 'base64').toString('base64') }\n    case 'DateTime':\n      return { $type, value: new Date(value).toISOString() }\n    case 'Decimal':\n      return { $type, value: String(new Decimal(value)) }\n    case 'Json':\n      return { $type, value: JSON.stringify(JSON.parse(value)) }\n    default:\n      assertNever(value, 'Unknown tagged value')\n  }\n}\n\nfunction mapObjectValues<K extends PropertyKey, T, U>(\n  object: Record<K, T>,\n  mapper: (value: T, key: K) => U,\n): Record<K, U> {\n  const result = {} as Record<K, U>\n\n  for (const key of Object.keys(object)) {\n    result[key] = mapper(object[key] as T, key as K)\n  }\n\n  return result\n}\n\nexport function deserializeJsonResponse(result: unknown): unknown {\n  if (result === null) {\n    return result\n  }\n\n  if (Array.isArray(result)) {\n    return result.map(deserializeJsonResponse)\n  }\n\n  if (typeof result === 'object') {\n    if (isTaggedValue(result)) {\n      return deserializeTaggedValue(result)\n    }\n\n    // avoid mapping class instances\n    if (result.constructor !== null && result.constructor.name !== 'Object') {\n      return result\n    }\n\n    return mapObjectValues(result, deserializeJsonResponse)\n  }\n\n  return result\n}\n\nfunction deserializeTaggedValue({ $type, value }: JsonOutputTaggedValue): JsOutputValue {\n  switch ($type) {\n    case 'BigInt':\n      return BigInt(value)\n    case 'Bytes': {\n      const { buffer, byteOffset, byteLength } = Buffer.from(value, 'base64')\n      return new Uint8Array(buffer, byteOffset, byteLength)\n    }\n    case 'DateTime':\n      return new Date(value)\n    case 'Decimal':\n      return new Decimal(value)\n    case 'Json':\n      return JSON.parse(value)\n    default:\n      assertNever(value, 'Unknown tagged value')\n  }\n}\n", "import Decimal from 'decimal.js'\n\n// Copied over to avoid the heavy dependency on `@prisma/internals` with its\n// transitive dependencies that are not needed for other query plan executor\n// implementations outside of Prisma Client (e.g. test executor for query\n// engine tests and query plan executor for Accelerate) that also depend on\n// `@prisma/client-engine-runtime`.\nexport function assertNever(_: never, message: string): never {\n  throw new Error(message)\n}\n\n/**\n * Checks if two objects are deeply equal, recursively checking all properties for strict equality.\n */\nexport function isDeepStrictEqual(a: unknown, b: unknown): boolean {\n  return (\n    a === b ||\n    (a !== null &&\n      b !== null &&\n      typeof a === 'object' &&\n      typeof b === 'object' &&\n      Object.keys(a).length === Object.keys(b).length &&\n      Object.keys(a).every((key) => isDeepStrictEqual(a[key], b[key])))\n  )\n}\n\n/**\n * Checks if two objects representing the names and values of key columns match. A match is\n * defined by one of the sets of keys being a subset of the other. This function also\n * converts arguments to the types used by driver adapters if necessary.\n */\nexport function doKeysMatch(lhs: {}, rhs: {}): boolean {\n  const lhsKeys = Object.keys(lhs)\n  const rhsKeys = Object.keys(rhs)\n  const smallerKeyList = lhsKeys.length < rhsKeys.length ? lhsKeys : rhsKeys\n\n  return smallerKeyList.every((key) => {\n    if (typeof lhs[key] === typeof rhs[key] && typeof lhs[key] !== 'object') {\n      // fast path for primitive types\n      return lhs[key] === rhs[key]\n    }\n\n    if (Decimal.isDecimal(lhs[key]) || Decimal.isDecimal(rhs[key])) {\n      const lhsDecimal = asDecimal(lhs[key])\n      const rhsDecimal = asDecimal(rhs[key])\n      return lhsDecimal && rhsDecimal && lhsDecimal.equals(rhsDecimal)\n    } else if (lhs[key] instanceof Uint8Array || rhs[key] instanceof Uint8Array) {\n      const lhsBuffer = asBuffer(lhs[key])\n      const rhsBuffer = asBuffer(rhs[key])\n      return lhsBuffer && rhsBuffer && lhsBuffer.equals(rhsBuffer)\n    } else if (lhs[key] instanceof Date || rhs[key] instanceof Date) {\n      return asDate(lhs[key])?.getTime() === asDate(rhs[key])?.getTime()\n    } else if (typeof lhs[key] === 'bigint' || typeof rhs[key] === 'bigint') {\n      return asBigInt(lhs[key]) === asBigInt(rhs[key])\n    } else if (typeof lhs[key] === 'number' || typeof rhs[key] === 'number') {\n      return asNumber(lhs[key]) === asNumber(rhs[key])\n    }\n\n    return isDeepStrictEqual(lhs[key], rhs[key])\n  })\n}\n\nfunction asDecimal(value: unknown): Decimal | undefined {\n  if (Decimal.isDecimal(value)) {\n    return value\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    return new Decimal(value)\n  } else {\n    return\n  }\n}\n\nfunction asBuffer(value: unknown): Buffer | undefined {\n  if (Buffer.isBuffer(value)) {\n    return value\n  } else if (value instanceof Uint8Array) {\n    return Buffer.from(value.buffer, value.byteOffset, value.byteLength)\n  } else if (typeof value === 'string') {\n    return Buffer.from(value, 'base64')\n  } else {\n    return\n  }\n}\n\nfunction asDate(value: unknown): Date | undefined {\n  if (value instanceof Date) {\n    return value\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    return new Date(value)\n  } else {\n    return\n  }\n}\n\nfunction asBigInt(value: unknown): bigint | undefined {\n  if (typeof value === 'bigint') {\n    return value\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    return BigInt(value)\n  } else {\n    return\n  }\n}\n\nfunction asNumber(value: unknown): number | undefined {\n  if (typeof value === 'number') {\n    return value\n  } else if (typeof value === 'string') {\n    return Number(value)\n  } else {\n    return\n  }\n}\n\n/**\n * `JSON.stringify` wrapper with custom replacer function that handles nested\n * BigInt and Uint8Array values.\n */\nexport function safeJsonStringify(obj: unknown): string {\n  return JSON.stringify(obj, (_key, val) => {\n    if (typeof val === 'bigint') {\n      return val.toString()\n    } else if (val instanceof Uint8Array) {\n      return Buffer.from(val).toString('base64')\n    }\n    return val\n  })\n}\n", "{\n  \"name\": \"@prisma/client\",\n  \"version\": \"6.15.0\",\n  \"description\": \"Prisma Client is an auto-generated, type-safe and modern JavaScript/TypeScript ORM for Node.js that's tailored to your data. Supports PostgreSQL, CockroachDB, MySQL, MariaDB, SQL Server, SQLite & MongoDB databases.\",\n  \"keywords\": [\n    \"ORM\",\n    \"Prisma\",\n    \"prisma2\",\n    \"Prisma Client\",\n    \"client\",\n    \"query\",\n    \"query-builder\",\n    \"database\",\n    \"db\",\n    \"JavaScript\",\n    \"JS\",\n    \"TypeScript\",\n    \"TS\",\n    \"SQL\",\n    \"SQLite\",\n    \"pg\",\n    \"Postgres\",\n    \"PostgreSQL\",\n    \"CockroachDB\",\n    \"MySQL\",\n    \"MariaDB\",\n    \"MSSQL\",\n    \"SQL Server\",\n    \"SQLServer\",\n    \"MongoDB\",\n    \"react-native\"\n  ],\n  \"main\": \"default.js\",\n  \"types\": \"default.d.ts\",\n  \"browser\": \"index-browser.js\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"require\": {\n        \"types\": \"./default.d.ts\",\n        \"node\": \"./default.js\",\n        \"edge-light\": \"./default.js\",\n        \"workerd\": \"./default.js\",\n        \"worker\": \"./default.js\",\n        \"browser\": \"./index-browser.js\"\n      },\n      \"import\": {\n        \"types\": \"./default.d.ts\",\n        \"node\": \"./default.js\",\n        \"edge-light\": \"./default.js\",\n        \"workerd\": \"./default.js\",\n        \"worker\": \"./default.js\",\n        \"browser\": \"./index-browser.js\"\n      },\n      \"default\": \"./default.js\"\n    },\n    \"./edge\": {\n      \"types\": \"./edge.d.ts\",\n      \"require\": \"./edge.js\",\n      \"import\": \"./edge.js\",\n      \"default\": \"./edge.js\"\n    },\n    \"./react-native\": {\n      \"types\": \"./react-native.d.ts\",\n      \"require\": \"./react-native.js\",\n      \"import\": \"./react-native.js\",\n      \"default\": \"./react-native.js\"\n    },\n    \"./extension\": {\n      \"types\": \"./extension.d.ts\",\n      \"require\": \"./extension.js\",\n      \"import\": \"./extension.js\",\n      \"default\": \"./extension.js\"\n    },\n    \"./index-browser\": {\n      \"types\": \"./index.d.ts\",\n      \"require\": \"./index-browser.js\",\n      \"import\": \"./index-browser.js\",\n      \"default\": \"./index-browser.js\"\n    },\n    \"./index\": {\n      \"types\": \"./index.d.ts\",\n      \"require\": \"./index.js\",\n      \"import\": \"./index.js\",\n      \"default\": \"./index.js\"\n    },\n    \"./wasm\": {\n      \"types\": \"./wasm.d.ts\",\n      \"require\": \"./wasm.js\",\n      \"import\": \"./wasm.mjs\",\n      \"default\": \"./wasm.mjs\"\n    },\n    \"./runtime/client\": {\n      \"types\": \"./runtime/client.d.ts\",\n      \"node\": {\n        \"require\": \"./runtime/client.js\",\n        \"default\": \"./runtime/client.js\"\n      },\n      \"require\": \"./runtime/client.js\",\n      \"import\": \"./runtime/client.mjs\",\n      \"default\": \"./runtime/client.mjs\"\n    },\n    \"./runtime/library\": {\n      \"types\": \"./runtime/library.d.ts\",\n      \"require\": \"./runtime/library.js\",\n      \"import\": \"./runtime/library.mjs\",\n      \"default\": \"./runtime/library.mjs\"\n    },\n    \"./runtime/binary\": {\n      \"types\": \"./runtime/binary.d.ts\",\n      \"require\": \"./runtime/binary.js\",\n      \"import\": \"./runtime/binary.mjs\",\n      \"default\": \"./runtime/binary.mjs\"\n    },\n    \"./runtime/wasm-engine-edge\": {\n      \"types\": \"./runtime/wasm-engine-edge.d.ts\",\n      \"require\": \"./runtime/wasm-engine-edge.js\",\n      \"import\": \"./runtime/wasm-engine-edge.mjs\",\n      \"default\": \"./runtime/wasm-engine-edge.mjs\"\n    },\n    \"./runtime/wasm-compiler-edge\": {\n      \"types\": \"./runtime/wasm-compiler-edge.d.ts\",\n      \"require\": \"./runtime/wasm-compiler-edge.js\",\n      \"import\": \"./runtime/wasm-compiler-edge.mjs\",\n      \"default\": \"./runtime/wasm-compiler-edge.mjs\"\n    },\n    \"./runtime/edge\": {\n      \"types\": \"./runtime/edge.d.ts\",\n      \"require\": \"./runtime/edge.js\",\n      \"import\": \"./runtime/edge-esm.js\",\n      \"default\": \"./runtime/edge-esm.js\"\n    },\n    \"./runtime/react-native\": {\n      \"types\": \"./runtime/react-native.d.ts\",\n      \"require\": \"./runtime/react-native.js\",\n      \"import\": \"./runtime/react-native.js\",\n      \"default\": \"./runtime/react-native.js\"\n    },\n    \"./generator-build\": {\n      \"require\": \"./generator-build/index.js\",\n      \"import\": \"./generator-build/index.js\",\n      \"default\": \"./generator-build/index.js\"\n    },\n    \"./sql\": {\n      \"require\": {\n        \"types\": \"./sql.d.ts\",\n        \"node\": \"./sql.js\",\n        \"default\": \"./sql.js\"\n      },\n      \"import\": {\n        \"types\": \"./sql.d.ts\",\n        \"node\": \"./sql.mjs\",\n        \"default\": \"./sql.mjs\"\n      },\n      \"default\": \"./sql.js\"\n    },\n    \"./*\": \"./*\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"engines\": {\n    \"node\": \">=18.18\"\n  },\n  \"homepage\": \"https://www.prisma.io\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/prisma/prisma.git\",\n    \"directory\": \"packages/client\"\n  },\n  \"author\": \"Tim Suchanek <suchanek@prisma.io>\",\n  \"bugs\": \"https://github.com/prisma/prisma/issues\",\n  \"scripts\": {\n    \"dev\": \"DEV=true tsx helpers/build.ts\",\n    \"build\": \"tsx helpers/build.ts\",\n    \"test\": \"dotenv -e ../../.db.env -- jest --silent\",\n    \"test:e2e\": \"dotenv -e ../../.db.env -- tsx tests/e2e/_utils/run.ts\",\n    \"test:functional\": \"dotenv -e ../../.db.env -- tsx helpers/functional-test/run-tests.ts\",\n    \"test:functional:client\": \"pnpm run test:functional --client-runtime client --preview-features driverAdapters,queryCompiler --engine-type client --runInBand --json --outputFile tests/functional/results.json\",\n    \"test:memory\": \"dotenv -e ../../.db.env -- tsx helpers/memory-tests.ts\",\n    \"test:functional:code\": \"dotenv -e ../../.db.env -- tsx helpers/functional-test/run-tests.ts --no-types\",\n    \"test:functional:types\": \"dotenv -e ../../.db.env -- tsx helpers/functional-test/run-tests.ts --types-only\",\n    \"test:knownQueryCompilerFailures:check\": \"tsx helpers/functional-test/check-known-failures.ts\",\n    \"test:knownQueryCompilerFailures:record\": \"tsx helpers/functional-test/check-known-failures.ts --record\",\n    \"test-notypes\": \"dotenv -e ../../.db.env -- jest --testPathIgnorePatterns src/__tests__/types/types.test.ts\",\n    \"generate\": \"node scripts/postinstall.js\",\n    \"postinstall\": \"node scripts/postinstall.js\",\n    \"prepublishOnly\": \"pnpm run build\",\n    \"new-test\": \"tsx ./helpers/new-test/new-test.ts\"\n  },\n  \"files\": [\n    \"README.md\",\n    \"runtime\",\n    \"scripts\",\n    \"generator-build\",\n    \"edge.js\",\n    \"edge.d.ts\",\n    \"wasm.js\",\n    \"wasm.d.ts\",\n    \"index.js\",\n    \"index.d.ts\",\n    \"react-native.js\",\n    \"react-native.d.ts\",\n    \"default.js\",\n    \"default.d.ts\",\n    \"index-browser.js\",\n    \"extension.js\",\n    \"extension.d.ts\",\n    \"sql.d.ts\",\n    \"sql.js\",\n    \"sql.mjs\"\n  ],\n  \"devDependencies\": {\n    \"@cloudflare/workers-types\": \"4.20250214.0\",\n    \"@codspeed/benchmark.js-plugin\": \"4.0.0\",\n    \"@faker-js/faker\": \"9.6.0\",\n    \"@fast-check/jest\": \"2.0.3\",\n    \"@inquirer/prompts\": \"7.3.3\",\n    \"@jest/create-cache-key-function\": \"29.7.0\",\n    \"@jest/globals\": \"29.7.0\",\n    \"@jest/test-sequencer\": \"29.7.0\",\n    \"@libsql/client\": \"0.8.0\",\n    \"@neondatabase/serverless\": \"0.10.2\",\n    \"@opentelemetry/api\": \"1.9.0\",\n    \"@opentelemetry/context-async-hooks\": \"2.0.0\",\n    \"@opentelemetry/instrumentation\": \"0.57.2\",\n    \"@opentelemetry/resources\": \"1.30.1\",\n    \"@opentelemetry/sdk-trace-base\": \"1.30.1\",\n    \"@opentelemetry/semantic-conventions\": \"1.30.0\",\n    \"@planetscale/database\": \"1.19.0\",\n    \"@prisma/adapter-better-sqlite3\": \"workspace:*\",\n    \"@prisma/adapter-d1\": \"workspace:*\",\n    \"@prisma/adapter-libsql\": \"workspace:*\",\n    \"@prisma/adapter-mariadb\": \"workspace:*\",\n    \"@prisma/adapter-mssql\": \"workspace:*\",\n    \"@prisma/adapter-neon\": \"workspace:*\",\n    \"@prisma/adapter-pg\": \"workspace:*\",\n    \"@prisma/adapter-planetscale\": \"workspace:*\",\n    \"@prisma/client-common\": \"workspace:*\",\n    \"@prisma/client-engine-runtime\": \"workspace:*\",\n    \"@prisma/client-generator-js\": \"workspace:*\",\n    \"@prisma/client-generator-ts\": \"workspace:*\",\n    \"@prisma/config\": \"workspace:*\",\n    \"@prisma/debug\": \"workspace:*\",\n    \"@prisma/dmmf\": \"workspace:*\",\n    \"@prisma/driver-adapter-utils\": \"workspace:*\",\n    \"@prisma/engines\": \"workspace:*\",\n    \"@prisma/engines-version\": \"6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb\",\n    \"@prisma/fetch-engine\": \"workspace:*\",\n    \"@prisma/generator\": \"workspace:*\",\n    \"@prisma/generator-helper\": \"workspace:*\",\n    \"@prisma/get-platform\": \"workspace:*\",\n    \"@prisma/instrumentation\": \"workspace:*\",\n    \"@prisma/internals\": \"workspace:*\",\n    \"@prisma/migrate\": \"workspace:*\",\n    \"@prisma/mini-proxy\": \"0.9.5\",\n    \"@prisma/query-compiler-wasm\": \"6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb\",\n    \"@prisma/query-engine-wasm\": \"6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb\",\n    \"@prisma/ts-builders\": \"workspace:*\",\n    \"@snaplet/copycat\": \"6.0.0\",\n    \"@swc-node/register\": \"1.10.9\",\n    \"@swc/core\": \"1.11.5\",\n    \"@swc/jest\": \"0.2.37\",\n    \"@timsuchanek/copy\": \"1.4.5\",\n    \"@types/debug\": \"4.1.12\",\n    \"@types/fs-extra\": \"11.0.4\",\n    \"@types/jest\": \"29.5.14\",\n    \"@types/js-levenshtein\": \"1.1.3\",\n    \"@types/mssql\": \"9.1.5\",\n    \"@types/node\": \"18.19.76\",\n    \"@types/pg\": \"8.11.11\",\n    \"arg\": \"5.0.2\",\n    \"benchmark\": \"2.1.4\",\n    \"cookie-es\": \"2.0.0\",\n    \"decimal.js\": \"10.5.0\",\n    \"esbuild\": \"0.25.5\",\n    \"execa\": \"5.1.1\",\n    \"expect-type\": \"1.2.2\",\n    \"fs-extra\": \"11.3.0\",\n    \"get-stream\": \"6.0.1\",\n    \"globby\": \"11.1.0\",\n    \"indent-string\": \"4.0.0\",\n    \"jest\": \"29.7.0\",\n    \"jest-extended\": \"4.0.2\",\n    \"jest-junit\": \"16.0.0\",\n    \"jest-serializer-ansi-escapes\": \"4.0.0\",\n    \"jest-snapshot\": \"29.7.0\",\n    \"js-levenshtein\": \"1.1.6\",\n    \"kleur\": \"4.1.5\",\n    \"klona\": \"2.0.6\",\n    \"mariadb\": \"3.4.0\",\n    \"memfs\": \"4.17.2\",\n    \"mssql\": \"11.0.1\",\n    \"new-github-issue-url\": \"0.2.1\",\n    \"p-retry\": \"4.6.2\",\n    \"pg\": \"8.14.1\",\n    \"resolve\": \"1.22.10\",\n    \"rimraf\": \"6.0.1\",\n    \"simple-statistics\": \"7.8.8\",\n    \"sort-keys\": \"5.1.0\",\n    \"source-map-support\": \"0.5.21\",\n    \"sql-template-tag\": \"5.2.1\",\n    \"stacktrace-parser\": \"0.1.11\",\n    \"strip-ansi\": \"6.0.1\",\n    \"strip-indent\": \"4.0.0\",\n    \"tempy\": \"3.0.0\",\n    \"ts-node\": \"10.9.2\",\n    \"ts-pattern\": \"5.6.2\",\n    \"tsd\": \"0.31.2\",\n    \"typescript\": \"5.4.5\",\n    \"undici\": \"7.4.0\",\n    \"wrangler\": \"3.111.0\",\n    \"zx\": \"8.4.1\"\n  },\n  \"peerDependencies\": {\n    \"prisma\": \"*\",\n    \"typescript\": \">=5.1.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"prisma\": {\n      \"optional\": true\n    },\n    \"typescript\": {\n      \"optional\": true\n    }\n  },\n  \"sideEffects\": false\n}", "import { GetPrismaClientConfig } from '@prisma/client-common'\n\nimport { Datasources } from '../../getPrismaClient'\nimport { getRuntime } from '../../utils/getRuntime'\nimport { PrismaClientInitializationError } from '../errors/PrismaClientInitializationError'\n\nexport function resolveDatasourceUrl({\n  inlineDatasources,\n  overrideDatasources,\n  env,\n  clientVersion,\n}: {\n  inlineDatasources: GetPrismaClientConfig['inlineDatasources']\n  overrideDatasources: Datasources\n  env: Record<string, string | undefined>\n  clientVersion: string\n}) {\n  let resolvedUrl: string | undefined\n  const datasourceName = Object.keys(inlineDatasources)[0]\n  const datasourceUrl = inlineDatasources[datasourceName]?.url\n  const overrideUrl = overrideDatasources[datasourceName]?.url\n\n  if (datasourceName === undefined) {\n    resolvedUrl = undefined\n  } else if (overrideUrl) {\n    resolvedUrl = overrideUrl\n  } else if (datasourceUrl?.value) {\n    resolvedUrl = datasourceUrl.value\n  } else if (datasourceUrl?.fromEnvVar) {\n    resolvedUrl = env[datasourceUrl.fromEnvVar]\n  }\n\n  // env var is set for use but url is undefined\n  if (datasourceUrl?.fromEnvVar !== undefined && resolvedUrl === undefined) {\n    if (\n      (TARGET_BUILD_TYPE === 'edge' ||\n        TARGET_BUILD_TYPE === 'wasm-engine-edge' ||\n        TARGET_BUILD_TYPE === 'wasm-compiler-edge') &&\n      getRuntime().id === 'workerd'\n    ) {\n      throw new PrismaClientInitializationError(\n        `error: Environment variable not found: ${datasourceUrl.fromEnvVar}.\n\nIn Cloudflare module Workers, environment variables are available only in the Worker's \\`env\\` parameter of \\`fetch\\`.\nTo solve this, provide the connection string directly: https://pris.ly/d/cloudflare-datasource-url`,\n        clientVersion,\n      )\n    }\n\n    // error matches as much as possible the usual engine error\n    throw new PrismaClientInitializationError(\n      `error: Environment variable not found: ${datasourceUrl.fromEnvVar}.`,\n      clientVersion,\n    )\n  }\n\n  // should not happen: no override, no env, no direct value\n  if (resolvedUrl === undefined) {\n    throw new PrismaClientInitializationError(\n      `error: Missing URL environment variable, value, or override.`,\n      clientVersion,\n    )\n  }\n\n  return resolvedUrl\n}\n", "import { QueryEngineConstructor, QueryEngineInstance, QueryEngineLogLevel } from '@prisma/client-common'\nimport { Debug } from '@prisma/debug'\nimport { bindAdapter, ErrorCapturingSqlDriverAdapter, ErrorRecord, ErrorRegistry } from '@prisma/driver-adapter-utils'\nimport type { BinaryTarget } from '@prisma/get-platform'\nimport { assertNodeAPISupported, binaryTargets, getBinaryTargetForCurrentPlatform } from '@prisma/get-platform'\nimport { assertAlways, EngineTrace, TracingHelper } from '@prisma/internals'\nimport { bold, green, red } from 'kleur/colors'\n\nimport { PrismaClientInitializationError } from '../../errors/PrismaClientInitializationError'\nimport { PrismaClientKnownRequestError } from '../../errors/PrismaClientKnownRequestError'\nimport { PrismaClientRustPanicError } from '../../errors/PrismaClientRustPanicError'\nimport { PrismaClientUnknownRequestError } from '../../errors/PrismaClientUnknownRequestError'\nimport { prismaGraphQLToJSError } from '../../errors/utils/prismaGraphQLToJSError'\nimport type { BatchQueryEngineResult, EngineConfig, RequestBatchOptions, RequestOptions } from '../common/Engine'\nimport { Engine } from '../common/Engine'\nimport { LogEmitter, LogEventType } from '../common/types/Events'\nimport { JsonQuery } from '../common/types/JsonProtocol'\nimport { EngineMetricsOptions, Metrics, MetricsOptionsJson, MetricsOptionsPrometheus } from '../common/types/Metrics'\nimport type {\n  QueryEngineEvent,\n  QueryEnginePanicEvent,\n  QueryEngineQueryEvent,\n  RustRequestError,\n  SyncRustError,\n} from '../common/types/QueryEngine'\nimport { RequestError } from '../common/types/RequestError'\nimport type * as Tx from '../common/types/Transaction'\nimport { getBatchRequestPayload } from '../common/utils/getBatchRequestPayload'\nimport { getErrorMessageWithLink as genericGetErrorMessageWithLink } from '../common/utils/getErrorMessageWithLink'\nimport { getInteractiveTransactionId } from '../common/utils/getInteractiveTransactionId'\nimport { defaultLibraryLoader } from './DefaultLibraryLoader'\nimport { reactNativeLibraryLoader } from './ReactNativeLibraryLoader'\nimport type { Library, LibraryLoader } from './types/Library'\nimport { wasmLibraryLoader } from './WasmLibraryLoader'\n\nconst DRIVER_ADAPTER_EXTERNAL_ERROR = 'P2036'\nconst debug = Debug('prisma:client:libraryEngine')\n\nfunction isQueryEvent(event: QueryEngineEvent): event is QueryEngineQueryEvent {\n  return event['item_type'] === 'query' && 'query' in event\n}\nfunction isPanicEvent(event: QueryEngineEvent): event is QueryEnginePanicEvent {\n  if ('level' in event) {\n    return event.level === 'error' && event['message'] === 'PANIC'\n  } else {\n    return false\n  }\n}\n\nconst knownBinaryTargets: BinaryTarget[] = [...binaryTargets, 'native']\n\nconst MAX_REQUEST_ID = 0xffffffffffffffffn\nlet NEXT_REQUEST_ID = 1n\n\nfunction nextRequestId(): bigint {\n  const requestId = NEXT_REQUEST_ID++\n  if (NEXT_REQUEST_ID > MAX_REQUEST_ID) {\n    NEXT_REQUEST_ID = 1n\n  }\n  return requestId\n}\n\nexport class LibraryEngine implements Engine<undefined> {\n  name = 'LibraryEngine' as const\n  engine?: ReturnType<typeof this.wrapEngine>\n  libraryInstantiationPromise?: Promise<void>\n  libraryStartingPromise?: Promise<void>\n  libraryStoppingPromise?: Promise<void>\n  libraryStarted: boolean\n  executingQueryPromise?: Promise<any>\n  config: EngineConfig\n  QueryEngineConstructor?: QueryEngineConstructor\n  libraryLoader: LibraryLoader\n  library?: Library\n  logEmitter: LogEmitter\n  libQueryEnginePath?: string\n  binaryTarget?: BinaryTarget\n  datasourceOverrides?: Record<string, string>\n  datamodel: string\n  logQueries: boolean\n  logLevel: QueryEngineLogLevel\n  lastQuery?: string\n  loggerRustPanic?: any\n  tracingHelper: TracingHelper\n  adapterPromise: Promise<ErrorCapturingSqlDriverAdapter> | undefined\n\n  versionInfo?: {\n    commit: string\n    version: string\n  }\n\n  constructor(config: EngineConfig, libraryLoader?: LibraryLoader) {\n    if (TARGET_BUILD_TYPE === 'react-native') {\n      this.libraryLoader = reactNativeLibraryLoader\n    } else if (TARGET_BUILD_TYPE === 'library') {\n      this.libraryLoader = libraryLoader ?? defaultLibraryLoader\n\n      // this can only be true if PRISMA_CLIENT_FORCE_WASM=true\n      if (config.engineWasm !== undefined) {\n        this.libraryLoader = libraryLoader ?? wasmLibraryLoader\n      }\n    } else if (TARGET_BUILD_TYPE === 'wasm-engine-edge') {\n      this.libraryLoader = libraryLoader ?? wasmLibraryLoader\n    } else {\n      throw new Error(`Invalid TARGET_BUILD_TYPE: ${TARGET_BUILD_TYPE}`)\n    }\n\n    this.config = config\n    this.libraryStarted = false\n    this.logQueries = config.logQueries ?? false\n    this.logLevel = config.logLevel ?? 'error'\n    this.logEmitter = config.logEmitter\n    this.datamodel = config.inlineSchema\n    this.tracingHelper = config.tracingHelper\n\n    if (config.enableDebugLogs) {\n      this.logLevel = 'debug'\n    }\n\n    // compute the datasource override for library engine\n    const dsOverrideName = Object.keys(config.overrideDatasources)[0]\n    const dsOverrideUrl = config.overrideDatasources[dsOverrideName]?.url\n    if (dsOverrideName !== undefined && dsOverrideUrl !== undefined) {\n      this.datasourceOverrides = { [dsOverrideName]: dsOverrideUrl }\n    }\n\n    this.libraryInstantiationPromise = this.instantiateLibrary()\n  }\n\n  private wrapEngine(engine: QueryEngineInstance) {\n    return {\n      applyPendingMigrations: engine.applyPendingMigrations?.bind(engine),\n      commitTransaction: this.withRequestId(engine.commitTransaction.bind(engine)),\n      connect: this.withRequestId(engine.connect.bind(engine)),\n      disconnect: this.withRequestId(engine.disconnect.bind(engine)),\n      metrics: engine.metrics?.bind(engine),\n      query: this.withRequestId(engine.query.bind(engine)),\n      rollbackTransaction: this.withRequestId(engine.rollbackTransaction.bind(engine)),\n      sdlSchema: engine.sdlSchema?.bind(engine),\n      startTransaction: this.withRequestId(engine.startTransaction.bind(engine)),\n      trace: engine.trace.bind(engine),\n      free: engine.free?.bind(engine),\n    }\n  }\n\n  private withRequestId<T extends unknown[], U>(\n    fn: (...args: [...T, string]) => Promise<U>,\n  ): (...args: T) => Promise<U> {\n    return async (...args) => {\n      const requestId = nextRequestId().toString()\n      try {\n        return await fn(...args, requestId)\n      } finally {\n        if (this.tracingHelper.isEnabled()) {\n          const traceJson = await this.engine?.trace(requestId)\n          if (traceJson) {\n            const trace = JSON.parse(traceJson) as EngineTrace\n            this.tracingHelper.dispatchEngineSpans(trace.spans)\n          }\n        }\n      }\n    }\n  }\n\n  async applyPendingMigrations(): Promise<void> {\n    if (TARGET_BUILD_TYPE === 'react-native') {\n      await this.start()\n      await this.engine?.applyPendingMigrations!()\n    } else {\n      throw new Error('Cannot call this method from this type of engine instance')\n    }\n  }\n\n  async transaction(\n    action: 'start',\n    headers: Tx.TransactionHeaders,\n    options: Tx.Options,\n  ): Promise<Tx.InteractiveTransactionInfo<undefined>>\n  async transaction(\n    action: 'commit',\n    headers: Tx.TransactionHeaders,\n    info: Tx.InteractiveTransactionInfo<undefined>,\n  ): Promise<undefined>\n  async transaction(\n    action: 'rollback',\n    headers: Tx.TransactionHeaders,\n    info: Tx.InteractiveTransactionInfo<undefined>,\n  ): Promise<undefined>\n  async transaction(action: any, headers: Tx.TransactionHeaders, arg?: any) {\n    await this.start()\n    const adapter = await this.adapterPromise\n\n    const headerStr = JSON.stringify(headers)\n\n    let result: string | undefined\n    if (action === 'start') {\n      const jsonOptions = JSON.stringify({\n        max_wait: arg.maxWait,\n        timeout: arg.timeout,\n        isolation_level: arg.isolationLevel,\n      })\n\n      result = await this.engine?.startTransaction(jsonOptions, headerStr)\n    } else if (action === 'commit') {\n      result = await this.engine?.commitTransaction(arg.id, headerStr)\n    } else if (action === 'rollback') {\n      result = await this.engine?.rollbackTransaction(arg.id, headerStr)\n    }\n\n    const response = this.parseEngineResponse<{ [K: string]: unknown }>(result)\n\n    if (isUserFacingError(response)) {\n      const externalError = this.getExternalAdapterError(response, adapter?.errorRegistry)\n      if (externalError) {\n        throw externalError.error\n      }\n      throw new PrismaClientKnownRequestError(response.message, {\n        code: response.error_code as string,\n        clientVersion: this.config.clientVersion as string,\n        meta: response.meta,\n      })\n    } else if (typeof response.message === 'string') {\n      throw new PrismaClientUnknownRequestError(response.message, {\n        clientVersion: this.config.clientVersion!,\n      })\n    }\n\n    return response as Tx.InteractiveTransactionInfo<undefined> | undefined\n  }\n\n  private async instantiateLibrary(): Promise<void> {\n    debug('internalSetup')\n    if (this.libraryInstantiationPromise) {\n      return this.libraryInstantiationPromise\n    }\n\n    if (TARGET_BUILD_TYPE === 'library') {\n      assertNodeAPISupported()\n    }\n\n    this.binaryTarget = await this.getCurrentBinaryTarget()\n\n    await this.tracingHelper.runInChildSpan('load_engine', () => this.loadEngine())\n\n    this.version()\n  }\n\n  private async getCurrentBinaryTarget() {\n    if (TARGET_BUILD_TYPE === 'library') {\n      if (this.binaryTarget) return this.binaryTarget\n      const binaryTarget = await this.tracingHelper.runInChildSpan('detect_platform', () =>\n        getBinaryTargetForCurrentPlatform(),\n      )\n      if (!knownBinaryTargets.includes(binaryTarget)) {\n        throw new PrismaClientInitializationError(\n          `Unknown ${red('PRISMA_QUERY_ENGINE_LIBRARY')} ${red(bold(binaryTarget))}. Possible binaryTargets: ${green(\n            knownBinaryTargets.join(', '),\n          )} or a path to the query engine library.\nYou may have to run ${green('prisma generate')} for your changes to take effect.`,\n          this.config.clientVersion!,\n        )\n      }\n\n      return binaryTarget\n    }\n\n    return undefined\n  }\n\n  private parseEngineResponse<T>(response?: string): T {\n    if (!response) {\n      throw new PrismaClientUnknownRequestError(`Response from the Engine was empty`, {\n        clientVersion: this.config.clientVersion!,\n      })\n    }\n\n    try {\n      return JSON.parse(response) as T\n    } catch (err) {\n      throw new PrismaClientUnknownRequestError(`Unable to JSON.parse response from engine`, {\n        clientVersion: this.config.clientVersion!,\n      })\n    }\n  }\n\n  private async loadEngine(): Promise<void> {\n    if (this.engine) {\n      return\n    }\n\n    if (!this.QueryEngineConstructor) {\n      this.library = await this.libraryLoader.loadLibrary(this.config)\n      this.QueryEngineConstructor = this.library.QueryEngine\n    }\n    try {\n      // Using strong reference to `this` inside of log callback will prevent\n      // this instance from being GCed while native engine is alive. At the\n      // same time, `this.engine` field will prevent native instance from\n      // being GCed. Using weak ref helps to avoid this cycle\n      const weakThis = new WeakRef(this)\n\n      if (!this.adapterPromise) {\n        this.adapterPromise = this.config.adapter?.connect()?.then(bindAdapter)\n      }\n      const adapter = await this.adapterPromise\n\n      if (adapter) {\n        debug('Using driver adapter: %O', adapter)\n      }\n\n      this.engine = this.wrapEngine(\n        new this.QueryEngineConstructor(\n          {\n            datamodel: this.datamodel,\n            env: process.env,\n            logQueries: this.config.logQueries ?? false,\n            ignoreEnvVarErrors: true,\n            datasourceOverrides: this.datasourceOverrides ?? {},\n            logLevel: this.logLevel,\n            configDir: this.config.cwd,\n            engineProtocol: 'json',\n            enableTracing: this.tracingHelper.isEnabled(),\n          },\n          (log) => {\n            weakThis.deref()?.logger(log)\n          },\n          adapter,\n        ),\n      )\n    } catch (_e) {\n      const e = _e as Error\n      const error = this.parseInitError(e.message)\n      if (typeof error === 'string') {\n        throw e\n      } else {\n        throw new PrismaClientInitializationError(error.message, this.config.clientVersion!, error.error_code)\n      }\n    }\n  }\n\n  private logger(log: string) {\n    const event = this.parseEngineResponse<QueryEngineEvent | null>(log)\n    if (!event) return\n\n    event.level = event?.level.toLowerCase() ?? 'unknown'\n    if (isQueryEvent(event)) {\n      this.logEmitter.emit('query', {\n        timestamp: new Date(),\n        query: event.query,\n        params: event.params,\n        duration: Number(event.duration_ms),\n        target: event.module_path,\n      })\n    } else if (isPanicEvent(event) && TARGET_BUILD_TYPE !== 'wasm-engine-edge') {\n      // The error built is saved to be thrown later\n      this.loggerRustPanic = new PrismaClientRustPanicError(\n        getErrorMessageWithLink(\n          this,\n          `${event.message}: ${event.reason} in ${event.file}:${event.line}:${event.column}`,\n        ),\n        this.config.clientVersion!,\n      )\n    } else {\n      this.logEmitter.emit(event.level as LogEventType, {\n        timestamp: new Date(),\n        message: event.message,\n        target: event.module_path,\n      })\n    }\n  }\n\n  private parseInitError(str: string): SyncRustError | string {\n    try {\n      const error = JSON.parse(str)\n      return error\n    } catch (e) {\n      //\n    }\n    return str\n  }\n\n  private parseRequestError(str: string): RustRequestError | string {\n    try {\n      const error = JSON.parse(str)\n      return error\n    } catch (e) {\n      //\n    }\n    return str\n  }\n\n  onBeforeExit() {\n    throw new Error(\n      '\"beforeExit\" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.',\n    )\n  }\n\n  async start(): Promise<void> {\n    if (!this.libraryInstantiationPromise) {\n      this.libraryInstantiationPromise = this.instantiateLibrary()\n    }\n    await this.libraryInstantiationPromise\n    await this.libraryStoppingPromise\n\n    if (this.libraryStartingPromise) {\n      debug(`library already starting, this.libraryStarted: ${this.libraryStarted}`)\n      return this.libraryStartingPromise\n    }\n\n    if (this.libraryStarted) {\n      return\n    }\n\n    const startFn = async () => {\n      debug('library starting')\n\n      try {\n        const headers = {\n          traceparent: this.tracingHelper.getTraceParent(),\n        }\n\n        await this.engine?.connect(JSON.stringify(headers))\n\n        this.libraryStarted = true\n\n        if (!this.adapterPromise) {\n          this.adapterPromise = this.config.adapter?.connect()?.then(bindAdapter)\n        }\n        await this.adapterPromise\n\n        debug('library started')\n      } catch (err) {\n        const error = this.parseInitError(err.message as string)\n\n        // The error message thrown by the query engine should be a stringified JSON\n        // if parsing fails then we just reject the error\n        if (typeof error === 'string') {\n          throw err\n        } else {\n          throw new PrismaClientInitializationError(error.message, this.config.clientVersion!, error.error_code)\n        }\n      } finally {\n        this.libraryStartingPromise = undefined\n      }\n    }\n\n    this.libraryStartingPromise = this.tracingHelper.runInChildSpan('connect', startFn)\n\n    return this.libraryStartingPromise\n  }\n\n  async stop(): Promise<void> {\n    await this.libraryInstantiationPromise\n    await this.libraryStartingPromise\n    await this.executingQueryPromise\n\n    if (this.libraryStoppingPromise) {\n      debug('library is already stopping')\n      return this.libraryStoppingPromise\n    }\n\n    if (!this.libraryStarted) {\n      await (await this.adapterPromise)?.dispose()\n      this.adapterPromise = undefined\n      return\n    }\n\n    const stopFn = async () => {\n      await new Promise((r) => setImmediate(r)) // defer to next tick\n\n      debug('library stopping')\n\n      const headers = {\n        traceparent: this.tracingHelper.getTraceParent(),\n      }\n\n      await this.engine?.disconnect(JSON.stringify(headers))\n      // Only the WASM engine has a free method that we need to call to ensure the engine is freed upon disconnect.\n      // Otherwise it causes memory leaks as the WASM engine instance still references this LibraryEngine.\n      if (this.engine?.free) {\n        this.engine.free()\n      }\n      this.engine = undefined\n\n      this.libraryStarted = false\n      this.libraryStoppingPromise = undefined\n      this.libraryInstantiationPromise = undefined\n\n      await (await this.adapterPromise)?.dispose()\n      this.adapterPromise = undefined\n\n      debug('library stopped')\n    }\n\n    this.libraryStoppingPromise = this.tracingHelper.runInChildSpan('disconnect', stopFn)\n\n    return this.libraryStoppingPromise\n  }\n\n  version(): string {\n    this.versionInfo = this.library?.version()\n    return this.versionInfo?.version ?? 'unknown'\n  }\n  /**\n   * Triggers an artificial panic\n   */\n  debugPanic(message?: string): Promise<never> {\n    return this.library?.debugPanic(message) as Promise<never>\n  }\n\n  async request<T>(\n    query: JsonQuery,\n    { traceparent, interactiveTransaction }: RequestOptions<undefined>,\n  ): Promise<{ data: T }> {\n    debug(`sending request, this.libraryStarted: ${this.libraryStarted}`)\n    const headerStr = JSON.stringify({ traceparent }) // object equivalent to http headers for the library\n    const queryStr = JSON.stringify(query)\n\n    try {\n      await this.start()\n      const adapter = await this.adapterPromise\n\n      this.executingQueryPromise = this.engine?.query(queryStr, headerStr, interactiveTransaction?.id)\n\n      this.lastQuery = queryStr\n      const data = this.parseEngineResponse<any>(await this.executingQueryPromise)\n\n      if (data.errors) {\n        if (data.errors.length === 1) {\n          throw this.buildQueryError(data.errors[0], adapter?.errorRegistry)\n        }\n        // this case should not happen, as the query engine only returns one error\n        throw new PrismaClientUnknownRequestError(JSON.stringify(data.errors), {\n          clientVersion: this.config.clientVersion!,\n        })\n      } else if (this.loggerRustPanic) {\n        throw this.loggerRustPanic\n      }\n      return { data }\n    } catch (e: any) {\n      if (e instanceof PrismaClientInitializationError) {\n        throw e\n      }\n      if (e.code === 'GenericFailure' && e.message?.startsWith('PANIC:') && TARGET_BUILD_TYPE !== 'wasm-engine-edge') {\n        throw new PrismaClientRustPanicError(getErrorMessageWithLink(this, e.message), this.config.clientVersion!)\n      }\n      const error = this.parseRequestError(e.message)\n      if (typeof error === 'string') {\n        throw e\n      } else {\n        throw new PrismaClientUnknownRequestError(`${error.message}\\n${error.backtrace}`, {\n          clientVersion: this.config.clientVersion!,\n        })\n      }\n    }\n  }\n\n  async requestBatch<T>(\n    queries: JsonQuery[],\n    { transaction, traceparent }: RequestBatchOptions<undefined>,\n  ): Promise<BatchQueryEngineResult<T>[]> {\n    debug('requestBatch')\n    const request = getBatchRequestPayload(queries, transaction)\n    await this.start()\n    const adapter = await this.adapterPromise\n\n    this.lastQuery = JSON.stringify(request)\n\n    this.executingQueryPromise = this.engine?.query(\n      this.lastQuery,\n      JSON.stringify({ traceparent }),\n      getInteractiveTransactionId(transaction),\n    )\n\n    const result = await this.executingQueryPromise\n    const data = this.parseEngineResponse<any>(result)\n\n    if (data.errors) {\n      if (data.errors.length === 1) {\n        throw this.buildQueryError(data.errors[0], adapter?.errorRegistry)\n      }\n      // this case should not happen, as the query engine only returns one error\n      throw new PrismaClientUnknownRequestError(JSON.stringify(data.errors), {\n        clientVersion: this.config.clientVersion!,\n      })\n    }\n\n    const { batchResult, errors } = data\n    if (Array.isArray(batchResult)) {\n      return batchResult.map((result) => {\n        if (result.errors && result.errors.length > 0) {\n          return this.loggerRustPanic ?? this.buildQueryError(result.errors[0], adapter?.errorRegistry)\n        }\n        return {\n          data: result,\n        }\n      })\n    } else {\n      if (errors && errors.length === 1) {\n        throw new Error(errors[0].error)\n      }\n      throw new Error(JSON.stringify(data))\n    }\n  }\n\n  private buildQueryError(error: RequestError, registry?: ErrorRegistry) {\n    if (error.user_facing_error.is_panic && TARGET_BUILD_TYPE !== 'wasm-engine-edge') {\n      return new PrismaClientRustPanicError(\n        getErrorMessageWithLink(this, error.user_facing_error.message),\n        this.config.clientVersion!,\n      )\n    }\n\n    const externalError = this.getExternalAdapterError(error.user_facing_error, registry)\n\n    return externalError\n      ? externalError.error\n      : prismaGraphQLToJSError(error, this.config.clientVersion!, this.config.activeProvider!)\n  }\n\n  private getExternalAdapterError(\n    error: RequestError['user_facing_error'],\n    registry?: ErrorRegistry,\n  ): ErrorRecord | undefined {\n    if (error.error_code === DRIVER_ADAPTER_EXTERNAL_ERROR && registry) {\n      const id = error.meta?.id\n      assertAlways(typeof id === 'number', 'Malformed external JS error received from the engine')\n      const errorRecord = registry.consumeError(id)\n      assertAlways(errorRecord, `External error with reported id was not registered`)\n      return errorRecord\n    }\n    return undefined\n  }\n\n  async metrics(options: MetricsOptionsJson): Promise<Metrics>\n  async metrics(options: MetricsOptionsPrometheus): Promise<string>\n  async metrics(options: EngineMetricsOptions): Promise<Metrics | string> {\n    await this.start()\n    // TODO: add `metrics` method stub in c-abi engine and make it non-optional.\n    // The stub should return an error like in WASM so we handle this gracefully.\n    const responseString = await this.engine!.metrics!(JSON.stringify(options))\n    if (options.format === 'prometheus') {\n      return responseString\n    }\n    return this.parseEngineResponse(responseString)\n  }\n}\n\nfunction isUserFacingError(e: unknown): e is RequestError['user_facing_error'] {\n  return typeof e === 'object' && e !== null && e['error_code'] !== undefined\n}\n\nfunction getErrorMessageWithLink(engine: LibraryEngine, title: string) {\n  return genericGetErrorMessageWithLink({\n    binaryTarget: engine.binaryTarget,\n    title,\n    version: engine.config.clientVersion!,\n    engineVersion: engine.versionInfo?.commit,\n    database: engine.config.activeProvider as any,\n    query: engine.lastQuery!,\n  })\n}\n", "import { TransactionOptions } from '../Engine'\n\nexport function getInteractiveTransactionId(transaction?: TransactionOptions<unknown>): string | undefined {\n  if (transaction?.kind === 'itx') {\n    return transaction.options.id\n  }\n  return undefined\n}\n", "// this import points directly to ./query_engine_bg.js it is generated with >>>\n// wasm-bindgen --browser. --browser is the leanest and most agnostic option\n// that is also easy to integrate with our bundling.\n// import * as wasmBindgenRuntime from '@prisma/query-engine-wasm/query_engine_bg.js'\nimport { QueryEngineConstructor } from '@prisma/client-common'\n\nimport { getRuntime } from '../../../utils/getRuntime'\nimport { PrismaClientInitializationError } from '../../errors/PrismaClientInitializationError'\nimport { LibraryLoader } from './types/Library'\n\nlet loadedWasmInstance: Promise<QueryEngineConstructor>\nexport const wasmLibraryLoader: LibraryLoader = {\n  async loadLibrary(config) {\n    const { clientVersion, adapter, engineWasm } = config\n\n    if (adapter === undefined) {\n      throw new PrismaClientInitializationError(\n        `The \\`adapter\\` option for \\`PrismaClient\\` is required in this context (${getRuntime().prettyName})`,\n        clientVersion,\n      )\n    }\n\n    if (engineWasm === undefined) {\n      throw new PrismaClientInitializationError('WASM engine was unexpectedly `undefined`', clientVersion)\n    }\n\n    // we only create the instance once for efficiency and also because wasm\n    // bindgen keeps an internal cache of its instance already, when the wasm\n    // engine is loaded more than once it crashes with `unwrap_throw failed`.\n    if (loadedWasmInstance === undefined) {\n      loadedWasmInstance = (async () => {\n        const runtime = await engineWasm.getRuntime()\n        const wasmModule = await engineWasm.getQueryEngineWasmModule()\n\n        if (wasmModule === undefined || wasmModule === null) {\n          throw new PrismaClientInitializationError(\n            'The loaded wasm module was unexpectedly `undefined` or `null` once loaded',\n            clientVersion,\n          )\n        }\n\n        // from https://developers.cloudflare.com/workers/runtime-apis/webassembly/rust/#javascript-plumbing-wasm-bindgen\n        const options = { './query_engine_bg.js': runtime }\n        const instance = new WebAssembly.Instance(wasmModule, options)\n        const wbindgen_start = instance.exports.__wbindgen_start as () => void\n        runtime.__wbg_set_wasm(instance.exports)\n        wbindgen_start()\n        return runtime.QueryEngine\n      })()\n    }\n\n    const QueryEngine = await loadedWasmInstance\n\n    return {\n      debugPanic() {\n        return Promise.reject('{}') // not used\n      },\n      dmmf() {\n        return Promise.resolve('{}') // not used\n      },\n      version() {\n        return { commit: 'unknown', version: 'unknown' } // not used\n      },\n      QueryEngine,\n    }\n  },\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-asserted-optional-chain */\nimport { PrismaClientInitializationError } from '../../errors/PrismaClientInitializationError'\nimport { BatchQueryEngineResult, Engine, EngineConfig, RequestBatchOptions, RequestOptions } from '../common/Engine'\nimport { JsonQuery } from '../common/types/JsonProtocol'\nimport { Metrics, MetricsOptionsJson, MetricsOptionsPrometheus } from '../common/types/Metrics'\nimport { QueryEngineResultData } from '../common/types/QueryEngine'\nimport { InteractiveTransactionInfo as ITXInfo, Options, TransactionHeaders } from '../common/types/Transaction'\n\nconst ERROR_MESSAGE = `Accelerate has not been setup correctly. Make sure your client is using \\`.$extends(withAccelerate())\\`. See https://pris.ly/d/accelerate-getting-started`\n\ntype AccelerateUtils = EngineConfig['accelerateUtils']\n\nexport type AccelerateEngineConfig = {\n  inlineSchema: EngineConfig['inlineSchema']\n  inlineSchemaHash: EngineConfig['inlineSchemaHash']\n  env: EngineConfig['env']\n  generator?: { previewFeatures: string[] }\n  inlineDatasources: EngineConfig['inlineDatasources']\n  overrideDatasources: EngineConfig['overrideDatasources']\n  clientVersion: EngineConfig['clientVersion']\n  engineVersion: EngineConfig['engineVersion']\n  logEmitter: EngineConfig['logEmitter']\n  logQueries?: EngineConfig['logQueries']\n  logLevel?: EngineConfig['logLevel']\n  tracingHelper: EngineConfig['tracingHelper']\n  accelerateUtils?: AccelerateUtils\n}\n\n/**\n * This is an empty implementation of the AccelerateEngine.\n * It is used when the user has not setup Accelerate correctly.\n */\nexport class AccelerateEngine implements Engine<any> {\n  name = 'AccelerateEngine' as const\n\n  /** Additional utilities that are trampolined from the received config */\n  resolveDatasourceUrl?: NonNullable<AccelerateUtils>['resolveDatasourceUrl']\n  getBatchRequestPayload?: NonNullable<AccelerateUtils>['getBatchRequestPayload']\n  prismaGraphQLToJSError?: NonNullable<AccelerateUtils>['prismaGraphQLToJSError']\n  PrismaClientUnknownRequestError?: NonNullable<AccelerateUtils>['PrismaClientUnknownRequestError']\n  PrismaClientInitializationError?: NonNullable<AccelerateUtils>['PrismaClientInitializationError']\n  PrismaClientKnownRequestError?: NonNullable<AccelerateUtils>['PrismaClientKnownRequestError']\n  debug?: NonNullable<AccelerateUtils>['debug']\n  engineVersion?: NonNullable<AccelerateUtils>['engineVersion']\n  clientVersion?: NonNullable<AccelerateUtils>['clientVersion']\n\n  constructor(public config: AccelerateEngineConfig) {\n    this.resolveDatasourceUrl = this.config.accelerateUtils?.resolveDatasourceUrl\n    this.getBatchRequestPayload = this.config.accelerateUtils?.getBatchRequestPayload\n    this.prismaGraphQLToJSError = this.config.accelerateUtils?.prismaGraphQLToJSError\n    this.PrismaClientUnknownRequestError = this.config.accelerateUtils?.PrismaClientUnknownRequestError\n    this.PrismaClientInitializationError = this.config.accelerateUtils?.PrismaClientInitializationError\n    this.PrismaClientKnownRequestError = this.config.accelerateUtils?.PrismaClientKnownRequestError\n    this.debug = this.config.accelerateUtils?.debug\n    this.engineVersion = this.config.accelerateUtils?.engineVersion\n    this.clientVersion = this.config.accelerateUtils?.clientVersion\n  }\n\n  onBeforeExit(_callback: () => Promise<void>): void {}\n  async start(): Promise<void> {}\n  async stop(): Promise<void> {}\n\n  version(_forceRun?: boolean): Promise<string> | string {\n    return 'unknown'\n  }\n\n  transaction(action: 'start', headers: TransactionHeaders, options?: Options): Promise<ITXInfo>\n  transaction(action: 'commit', headers: TransactionHeaders, info: ITXInfo): Promise<void>\n  transaction(action: 'rollback', headers: TransactionHeaders, info: ITXInfo): Promise<void>\n  transaction(_action: unknown, _headers: unknown, _info?: unknown): Promise<void | ITXInfo> {\n    throw new PrismaClientInitializationError(ERROR_MESSAGE, this.config.clientVersion)\n  }\n\n  metrics(options: MetricsOptionsJson): Promise<Metrics>\n  metrics(options: MetricsOptionsPrometheus): Promise<string>\n  metrics(_options: unknown): Promise<string | Metrics> {\n    throw new PrismaClientInitializationError(ERROR_MESSAGE, this.config.clientVersion)\n  }\n\n  request<T>(_query: JsonQuery, _options: RequestOptions<unknown>): Promise<QueryEngineResultData<T>> {\n    throw new PrismaClientInitializationError(ERROR_MESSAGE, this.config.clientVersion)\n  }\n\n  requestBatch<T>(_queries: JsonQuery[], _options: RequestBatchOptions<unknown>): Promise<BatchQueryEngineResult<T>[]> {\n    throw new PrismaClientInitializationError(ERROR_MESSAGE, this.config.clientVersion)\n  }\n\n  applyPendingMigrations(): Promise<void> {\n    throw new PrismaClientInitializationError(ERROR_MESSAGE, this.config.clientVersion)\n  }\n}\n\nexport type {\n  BatchQueryEngineResult,\n  Engine,\n  EngineConfig,\n  InteractiveTransactionOptions,\n  RequestBatchOptions,\n  RequestOptions,\n} from '../common/Engine'\nexport type { LogEmitter } from '../common/types/Events'\nexport type { JsonQuery } from '../common/types/JsonProtocol'\nexport type { Metrics, MetricsOptionsJson, MetricsOptionsPrometheus } from '../common/types/Metrics'\nexport type { QueryEngineBatchResult } from '../common/types/QueryEngine'\nexport type { QueryEngineResultData } from '../common/types/QueryEngine'\nexport type { InteractiveTransactionInfo, Options, TransactionHeaders } from '../common/types/Transaction'\nexport type { LogLevel } from '../common/utils/log'\nexport type { EngineSpan, TracingHelper } from '@prisma/internals'\n", "import type { SqlDriverAdapterFactory } from '@prisma/driver-adapter-utils'\nimport { isPrismaPostgres } from '@prisma/internals'\n\n/**\n * - `copyEngine === false` implies Prisma Accelerate usage\n * - If we detect Prisma Accelerate usage, we want to recommend using `--no-engine` in production.\n * - Driver Adapters should NOT be used with `prisma generate `--no-engine`\n * - Driver Adapters should NOT be imported from `@prisma/client/edge` endpoint\n * - Accelerate should NOT be used with Driver Adapters\n * - Prisma Postgres can be used with either Accelerate or Driver Adapters\n */\n\ntype WarningDiagnostic = { _tag: 'warning'; value: [key: string, message: string, ...args: unknown[]] }\ntype ErrorDiagnostic = { _tag: 'error'; value: string }\n\ntype ValidateEngineInstanceConfigParams = {\n  url?: string\n  adapter?: SqlDriverAdapterFactory\n  copyEngine: boolean\n\n  /**\n   * The type indicates that {@link validateEngineInstanceConfig} only cares about\n   * the {@link targetBuildType} being `edge`. If all other input options are fixed,\n   * changing the value of this param to something else will exhibit no different\n   * validation behavior.\n   */\n  targetBuildType: 'edge' | (string & {}) // typeof TARGET_BUILD_TYPE\n}\n\ntype WithDiagnostics =\n  | {\n      ok: true\n\n      diagnostics: {\n        warnings: WarningDiagnostic[]\n        errors?: never\n      }\n    }\n  | {\n      ok: false\n\n      diagnostics: {\n        warnings: WarningDiagnostic[]\n        errors: [ErrorDiagnostic, ...ErrorDiagnostic[]]\n      }\n    }\n\ntype ValidateEngineInstanceConfigOutput = WithDiagnostics & {\n  isUsing: {\n    accelerate: boolean\n    ppg: boolean\n    driverAdapters: boolean\n  }\n}\n\n/**\n * Validates the engine instance configuration, without side effects.\n * @param url The URL passed to the Prisma Client constructor\n * @param adapter The driver adapter passed to the Prisma Client constructor\n * @param copyEngine Whether the engine was copied. `prisma generate --no-engine` implies `copyEngine: false`\n * @param targetBuildType The target build type\n */\nexport function validateEngineInstanceConfig({\n  url,\n  adapter,\n  copyEngine,\n  targetBuildType,\n}: ValidateEngineInstanceConfigParams): ValidateEngineInstanceConfigOutput {\n  const warnings = [] as WarningDiagnostic[]\n  const errors = [] as ErrorDiagnostic[]\n\n  const pushWarning = (input: WarningDiagnostic['value']) => {\n    warnings.push({ _tag: 'warning', value: input })\n  }\n\n  const pushError = (input: string[]) => {\n    const value = input.join('\\n')\n    errors.push({ _tag: 'error', value })\n  }\n\n  const isUsingPrismaAccelerate = Boolean(url?.startsWith('prisma://'))\n  const isUsingPrismaPostgres = isPrismaPostgres(url)\n  const isUsingDriverAdapters = Boolean(adapter)\n  const isAccelerateUrlScheme = isUsingPrismaAccelerate || isUsingPrismaPostgres\n\n  if (!isUsingDriverAdapters && copyEngine && isAccelerateUrlScheme) {\n    pushWarning([\n      'recommend--no-engine',\n      'In production, we recommend using `prisma generate --no-engine` (See: `prisma generate --help`)',\n    ])\n  }\n\n  const isAccelerateConfigured = isAccelerateUrlScheme || !copyEngine\n\n  // Note: we're explicitly allowing the `isUsingDriverAdapters && isUsingPrismaPostgres` case to pass through.\n  if (isUsingDriverAdapters && (isAccelerateConfigured || targetBuildType === 'edge')) {\n    if (targetBuildType === 'edge') {\n      pushError([\n        `Prisma Client was configured to use the \\`adapter\\` option but it was imported via its \\`/edge\\` endpoint.`,\n        `Please either remove the \\`/edge\\` endpoint or remove the \\`adapter\\` from the Prisma Client constructor.`,\n      ])\n    } else if (!copyEngine) {\n      pushError([\n        `Prisma Client was configured to use the \\`adapter\\` option but \\`prisma generate\\` was run with \\`--no-engine\\`.`,\n        `Please run \\`prisma generate\\` without \\`--no-engine\\` to be able to use Prisma Client with the adapter.`,\n      ])\n    } else if (isUsingPrismaAccelerate) {\n      pushError([\n        `Prisma Client was configured to use the \\`adapter\\` option but the URL was a \\`prisma://\\` URL.`,\n        `Please either use the \\`prisma://\\` URL or remove the \\`adapter\\` from the Prisma Client constructor.`,\n      ])\n    }\n  }\n\n  const isUsing = {\n    accelerate: isAccelerateConfigured,\n    ppg: isUsingPrismaPostgres,\n    driverAdapters: isUsingDriverAdapters,\n  }\n\n  function isNonEmptyArray<T>(arr: T[]): arr is [T, ...T[]] {\n    return arr.length > 0\n  }\n\n  if (isNonEmptyArray(errors)) {\n    return {\n      ok: false,\n      diagnostics: {\n        warnings,\n        errors,\n      },\n      isUsing,\n    }\n  }\n\n  return {\n    ok: true,\n    diagnostics: { warnings },\n    isUsing,\n  }\n}\n", "import { GetPrismaClientConfig } from '@prisma/client-common'\n\ntype Config = Pick<GetPrismaClientConfig, 'generator'>\n\n/**\n * Get preview features from the configuration stored in the generated client.\n */\nexport function getPreviewFeatures({ generator }: Config): string[] {\n  return generator?.previewFeatures ?? []\n}\n", "export const rawCommandArgsMapper = (command: object) => ({\n  command,\n})\n", "import { Debug } from '@prisma/debug'\nimport { Sql } from 'sql-template-tag'\n\nimport { MiddlewareArgsMapper } from '../../getPrismaClient'\nimport { mssqlPreparedStatement } from '../../utils/mssqlPreparedStatement'\nimport { serializeRawParameters } from '../../utils/serializeRawParameters'\nimport { isTypedSql } from '../types/exported'\nimport { RawQueryArgs } from '../types/exported/RawQueryArgs'\n\nconst ALTER_RE = /^(\\s*alter\\s)/i\n\nconst debug = Debug('prisma:client')\n\n// TODO also check/disallow for CREATE, DROP\nexport function checkAlter(activeProvider: string, query: string, values: unknown[], invalidCall: string) {\n  if (activeProvider !== 'postgresql' && activeProvider !== 'cockroachdb') {\n    return\n  }\n  if (values.length > 0 && ALTER_RE.exec(query)) {\n    // See https://github.com/prisma/prisma-client-js/issues/940 for more info\n    throw new Error(`Running ALTER using ${invalidCall} is not supported\nUsing the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.\n\nExample:\n  await prisma.$executeRawUnsafe(\\`ALTER USER prisma WITH PASSWORD '\\${password}'\\`)\n\nMore Information: https://pris.ly/d/execute-raw\n`)\n  }\n}\n\ntype RawQueryArgsMapperInput = {\n  clientMethod: string\n  activeProvider: string\n}\n\nexport const rawQueryArgsMapper =\n  ({ clientMethod, activeProvider }: RawQueryArgsMapperInput) =>\n  (args: RawQueryArgs) => {\n    // TODO Clean up types\n    let queryString = ''\n    let parameters: { values: string; __prismaRawParameters__: true } | undefined\n    if (isTypedSql(args)) {\n      queryString = args.sql\n      parameters = {\n        values: serializeRawParameters(args.values),\n        __prismaRawParameters__: true,\n      }\n    } else if (Array.isArray(args)) {\n      // If this was called as prisma.$executeRaw(<SQL>, [...values]), assume it is a pre-prepared SQL statement, and forward it without any changes\n      const [query, ...values] = args\n      queryString = query\n      parameters = {\n        values: serializeRawParameters(values || []),\n        __prismaRawParameters__: true,\n      }\n    } else {\n      // If this was called as prisma.$executeRaw`<SQL>` try to generate a SQL prepared statement\n      switch (activeProvider) {\n        case 'sqlite':\n        case 'mysql': {\n          queryString = args.sql\n          parameters = {\n            values: serializeRawParameters(args.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n\n        case 'cockroachdb':\n        case 'postgresql':\n        case 'postgres': {\n          queryString = args.text\n\n          parameters = {\n            values: serializeRawParameters(args.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n\n        case 'sqlserver': {\n          queryString = mssqlPreparedStatement(args)\n          parameters = {\n            values: serializeRawParameters(args.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n        default: {\n          throw new Error(`The ${activeProvider} provider does not support ${clientMethod}`)\n        }\n      }\n    }\n\n    if (parameters?.values) {\n      debug(`prisma.${clientMethod}(${queryString}, ${parameters.values})`)\n    } else {\n      debug(`prisma.${clientMethod}(${queryString})`)\n    }\n\n    return { query: queryString, parameters }\n  }\n\ntype MiddlewareRawArgsTemplateString = [string[], ...unknown[]]\ntype MiddlewareRawArgsSql = [Sql]\n\nexport const templateStringMiddlewareArgsMapper: MiddlewareArgsMapper<Sql, MiddlewareRawArgsTemplateString> = {\n  requestArgsToMiddlewareArgs(sql) {\n    return [sql.strings, ...sql.values]\n  },\n\n  middlewareArgsToRequestArgs(requestArgs) {\n    const [strings, ...values] = requestArgs\n    return new Sql(strings, values)\n  },\n}\n\nexport const sqlMiddlewareArgsMapper: MiddlewareArgsMapper<Sql, MiddlewareRawArgsSql> = {\n  requestArgsToMiddlewareArgs(sql) {\n    return [sql]\n  },\n\n  middlewareArgsToRequestArgs(requestArgs) {\n    return requestArgs[0]\n  },\n}\n", "import type { Sql } from 'sql-template-tag'\n\n// Generate something like: SELECT * FROM User WHERE name = @P1 AND email = @P2 ...\nexport const mssqlPreparedStatement = (sql: Sql) => {\n  return sql.strings.reduce((acc, str, idx) => `${acc}@P${idx}${str}`)\n}\n", "import Decimal from 'decimal.js'\n\nimport { isDate } from './date'\n\nexport function serializeRawParameters(parameters: any[]): string {\n  try {\n    return serializeRawParametersInternal(parameters, 'fast')\n  } catch (error) {\n    // Got TypeError, try replacing values unsupported by JSON (i.e., BigInts)\n    // with strings inside arrays and objects.\n    return serializeRawParametersInternal(parameters, 'slow')\n  }\n}\n\nfunction serializeRawParametersInternal(parameters: any[], objectSerialization: 'fast' | 'slow'): string {\n  return JSON.stringify(parameters.map((parameter) => encodeParameter(parameter, objectSerialization)))\n}\n\nfunction encodeParameter(parameter: any, objectSerialization: 'fast' | 'slow'): unknown {\n  if (Array.isArray(parameter)) {\n    return parameter.map((item) => encodeParameter(item, objectSerialization))\n  }\n  if (typeof parameter === 'bigint') {\n    return {\n      prisma__type: 'bigint',\n      prisma__value: parameter.toString(),\n    }\n  }\n\n  if (isDate(parameter)) {\n    return {\n      prisma__type: 'date',\n      prisma__value: parameter.toJSON(),\n    }\n  }\n\n  if (Decimal.isDecimal(parameter)) {\n    return {\n      prisma__type: 'decimal',\n      prisma__value: parameter.toJSON(),\n    }\n  }\n\n  if (Buffer.isBuffer(parameter)) {\n    return {\n      prisma__type: 'bytes',\n      prisma__value: parameter.toString('base64'),\n    }\n  }\n\n  if (isArrayBufferLike(parameter)) {\n    return {\n      prisma__type: 'bytes',\n      prisma__value: Buffer.from(parameter).toString('base64'),\n    }\n  }\n\n  if (ArrayBuffer.isView(parameter)) {\n    const { buffer, byteOffset, byteLength } = parameter\n    return {\n      prisma__type: 'bytes',\n      prisma__value: Buffer.from(buffer, byteOffset, byteLength).toString('base64'),\n    }\n  }\n\n  if (typeof parameter === 'object' && objectSerialization === 'slow') {\n    return preprocessObject(parameter)\n  }\n\n  return parameter\n}\n\nfunction isArrayBufferLike(value: any): value is ArrayBufferLike {\n  if (value instanceof ArrayBuffer || value instanceof SharedArrayBuffer) {\n    return true\n  }\n\n  if (typeof value === 'object' && value !== null) {\n    return value[Symbol.toStringTag] === 'ArrayBuffer' || value[Symbol.toStringTag] === 'SharedArrayBuffer'\n  }\n\n  return false\n}\n\nfunction preprocessObject(obj: any): unknown {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n\n  if (typeof obj.toJSON === 'function') {\n    return obj.toJSON()\n  }\n\n  // TODO: map from blaze would've been convenient here to map arrays and objects uniformly,\n  // but importing it in this file causes compilation errors in tsd tests.\n\n  if (Array.isArray(obj)) {\n    return obj.map(preprocessValueInObject)\n  }\n\n  const result = {} as any\n\n  for (const key of Object.keys(obj as object)) {\n    result[key] = preprocessValueInObject(obj[key])\n  }\n\n  return result\n}\n\nfunction preprocessValueInObject(value: any): unknown {\n  if (typeof value === 'bigint') {\n    return value.toString()\n  }\n\n  return preprocessObject(value)\n}\n", "import type { PrismaOperationSpec, PrismaPromise, PrismaPromiseTransaction } from './PrismaPromise'\n\nexport type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>\n\n/**\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\n * is essentially a proxy for `Promise`. All the transaction-compatible client\n * methods return one, this allows for pre-preparing queries without executing\n * them until `.then` is called. It's the foundation of Prisma's query batching.\n * @param callback that will be wrapped within our promise implementation\n * @see [[PrismaPromise]]\n * @returns\n */\nexport type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(\n  callback: PrismaPromiseCallback,\n  op?: T,\n) => PrismaPromise<unknown>\n\n/**\n * Creates a factory, that allows creating PrismaPromises, bound to a specific transactions\n * @param transaction\n * @returns\n */\nexport function createPrismaPromiseFactory(transaction?: PrismaPromiseTransaction): PrismaPromiseFactory {\n  return function createPrismaPromise<TSpec extends PrismaOperationSpec<unknown>>(\n    callback: PrismaPromiseCallback,\n    op?: TSpec,\n  ): PrismaPromise<unknown, TSpec> {\n    let promise: PrismaPromise<unknown> | undefined\n    const _callback = (callbackTransaction = transaction): PrismaPromise<unknown> => {\n      try {\n        // promises cannot be triggered twice after resolving\n        if (callbackTransaction === undefined || callbackTransaction?.kind === 'itx') {\n          return (promise ??= valueToPromise(callback(callbackTransaction)))\n        }\n\n        // but for batch tx we can trigger them again & again\n        return valueToPromise(callback(callbackTransaction))\n      } catch (error) {\n        // if the callback throws, then we reject the promise\n        // and that is because exceptions are not always async\n        return Promise.reject(error) as PrismaPromise<unknown>\n      }\n    }\n\n    return {\n      get spec() {\n        return op!\n      },\n\n      then(onFulfilled, onRejected) {\n        return _callback().then(onFulfilled, onRejected)\n      },\n      catch(onRejected) {\n        return _callback().catch(onRejected)\n      },\n      finally(onFinally) {\n        return _callback().finally(onFinally)\n      },\n\n      requestTransaction(batchTransaction) {\n        const promise = _callback(batchTransaction)\n\n        if (promise.requestTransaction) {\n          // we want to have support for nested promises\n          return promise.requestTransaction(batchTransaction)\n        }\n\n        return promise\n      },\n      [Symbol.toStringTag]: 'PrismaPromise',\n    }\n  }\n}\n\nfunction valueToPromise<T>(thing: T): PrismaPromise<T> {\n  if (typeof thing['then'] === 'function') {\n    return thing as PrismaPromise<T>\n  }\n\n  return Promise.resolve(thing) as PrismaPromise<T>\n}\n", "import type { Context } from '@opentelemetry/api'\nimport { EngineSpan, ExtendedSpanOptions, SpanCallback, TracingHelper, version } from '@prisma/internals'\n\nconst majorVersion = version.split('.')[0]\n\nexport const disabledTracingHelper: TracingHelper = {\n  isEnabled() {\n    return false\n  },\n  getTraceParent() {\n    // https://www.w3.org/TR/trace-context/#examples-of-http-traceparent-headers\n    // If traceparent ends with -00 this trace will not be sampled\n    // the query engine needs the `10` for the span and trace id otherwise it does not parse this\n    return `00-10-10-00`\n  },\n\n  dispatchEngineSpans() {},\n\n  getActiveContext() {\n    return undefined\n  },\n\n  runInChildSpan<R>(options: string | ExtendedSpanOptions, callback: SpanCallback<R>): R {\n    return callback()\n  },\n}\n\n/**\n * Tracing helper that can dynamically switch between enabled/disabled states\n * Needed because tracing can be disabled and enabled with the calls to\n * PrismaInstrumentation::disable/enable at any point\n */\nclass DynamicTracingHelper implements TracingHelper {\n  isEnabled(): boolean {\n    return this.getGlobalTracingHelper().isEnabled()\n  }\n  getTraceParent(context: Context) {\n    return this.getGlobalTracingHelper().getTraceParent(context)\n  }\n\n  dispatchEngineSpans(spans: EngineSpan[]) {\n    return this.getGlobalTracingHelper().dispatchEngineSpans(spans)\n  }\n\n  getActiveContext() {\n    return this.getGlobalTracingHelper().getActiveContext()\n  }\n  runInChildSpan<R>(options: string | ExtendedSpanOptions, callback: SpanCallback<R>): R {\n    return this.getGlobalTracingHelper().runInChildSpan(options, callback)\n  }\n\n  private getGlobalTracingHelper(): TracingHelper {\n    // These globals are defined in `@prisma/instrumentation`\n    const versionedPrismaInstrumentationGlobal = globalThis[`V${majorVersion}_PRISMA_INSTRUMENTATION`]\n    const fallbackPrismaInstrumentationGlobal = globalThis.PRISMA_INSTRUMENTATION\n\n    return (\n      versionedPrismaInstrumentationGlobal?.helper ??\n      // TODO(v7): In future major versions, the tracing helper should only be read from the versioned global field.\n      // This is to ensure that instrumentation libraries (including `@prisma/instrumentation`) can register tracing helpers with compatible interfaces for each major version - thus preventing potential crashes in case instrumentation libraries are not yet updated for a new major, allowing for easier migration.\n      // Currently, the versioned helper is preferred and the fallback helper is picked up for backwards compatibility.\n      fallbackPrismaInstrumentationGlobal?.helper ??\n      disabledTracingHelper\n    )\n  }\n}\n\nexport function getTracingHelper(): TracingHelper {\n  return new DynamicTracingHelper()\n}\n", "/**\n * Creates an exotic promise that opens after x `await`s.\n * @remarks\n * This is currently used for locking regular transactions.\n * This ensures that all queries are executed at once/batched.\n * Even if middlewares are in use, they'll all execute at once.\n * @param knock the amount of awaits to open the promise\n * @param cb the callback to execute and value to return\n * @returns\n */\nexport function getLockCountPromise<V = void>(knock: number, cb: () => V | void = () => {}) {\n  let resolve: (v: V | void) => void\n  const lock = new Promise<V | void>((res) => (resolve = res))\n\n  return {\n    then(onFulfilled) {\n      if (--knock === 0) resolve(cb())\n\n      return onFulfilled?.(lock as unknown as V | void)\n    },\n  } as PromiseLike<V | void>\n}\n", "type LogLevel = 'info' | 'query' | 'warn' | 'error'\ntype LogDefinition = {\n  level: LogLevel\n  emit: 'stdout' | 'event'\n}\n\nexport function getLogLevel(log: LogLevel | Array<LogLevel | LogDefinition>): LogLevel | undefined {\n  if (typeof log === 'string') {\n    return log\n  }\n  return log.reduce<LogLevel | undefined>((acc, curr) => {\n    const currentLevel = typeof curr === 'string' ? curr : curr.level\n    if (currentLevel === 'query') {\n      return acc\n    }\n    if (!acc) {\n      return currentLevel\n    }\n    if (curr === 'info' || acc === 'info') {\n      // info has precedence\n      return 'info'\n    }\n    return currentLevel\n  }, undefined)\n}\n", "import { Context } from '@opentelemetry/api'\nimport { deserializeJsonResponse } from '@prisma/client-engine-runtime'\nimport { Debug } from '@prisma/debug'\nimport { assertNever } from '@prisma/internals'\nimport stripAnsi from 'strip-ansi'\n\nimport {\n  EngineValidationError,\n  InteractiveTransactionOptions,\n  JsonQuery,\n  LogEmitter,\n  TransactionOptions,\n} from '../runtime/core/engines'\nimport {\n  PrismaClientInitializationError,\n  PrismaClientKnownRequestError,\n  PrismaClientRustPanicError,\n  PrismaClientUnknownRequestError,\n} from '.'\nimport { AccelerateExtensionFetchDecorator } from './core/engines/common/Engine'\nimport { QueryEngineResultData } from './core/engines/common/types/QueryEngine'\nimport { throwValidationException } from './core/errorRendering/throwValidationException'\nimport { hasBatchIndex } from './core/errors/ErrorWithBatchIndex'\nimport { createApplyBatchExtensionsFunction } from './core/extensions/applyQueryExtensions'\nimport { MergedExtensionsList } from './core/extensions/MergedExtensionsList'\nimport { getBatchId } from './core/jsonProtocol/getBatchId'\nimport { isWrite } from './core/jsonProtocol/isWrite'\nimport { GlobalOmitOptions } from './core/jsonProtocol/serializeJsonQuery'\nimport { PrismaPromiseInteractiveTransaction, PrismaPromiseTransaction } from './core/request/PrismaPromise'\nimport { Action, JsArgs } from './core/types/exported/JsApi'\nimport { DataLoader } from './DataLoader'\nimport type { Client, Unpacker } from './getPrismaClient'\nimport { CallSite } from './utils/CallSite'\nimport { createErrorMessageWithContext } from './utils/createErrorMessageWithContext'\nimport { deepGet } from './utils/deep-set'\nimport { deserializeRawResult, RawResponse } from './utils/deserializeRawResults'\n\nconst debug = Debug('prisma:client:request_handler')\n\nexport type RequestParams = {\n  modelName?: string\n  action: Action\n  protocolQuery: JsonQuery\n  dataPath: string[]\n  clientMethod: string\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n  extensions: MergedExtensionsList\n  args?: any\n  headers?: Record<string, string>\n  unpacker?: Unpacker\n  otelParentCtx?: Context\n  otelChildCtx?: Context\n  globalOmit?: GlobalOmitOptions\n  customDataProxyFetch?: AccelerateExtensionFetchDecorator\n}\n\nexport type HandleErrorParams = {\n  args: JsArgs\n  error: any\n  clientMethod: string\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n  modelName?: string\n  globalOmit?: GlobalOmitOptions\n}\n\nexport class RequestHandler {\n  client: Client\n  dataloader: DataLoader<RequestParams>\n  private logEmitter?: LogEmitter\n\n  constructor(client: Client, logEmitter?: LogEmitter) {\n    this.logEmitter = logEmitter\n    this.client = client\n\n    this.dataloader = new DataLoader({\n      batchLoader: createApplyBatchExtensionsFunction(async ({ requests, customDataProxyFetch }) => {\n        const { transaction, otelParentCtx } = requests[0]\n        const queries = requests.map((r) => r.protocolQuery)\n        const traceparent = this.client._tracingHelper.getTraceParent(otelParentCtx)\n\n        // TODO: pass the child information to QE for it to issue links to queries\n        // const links = requests.map((r) => trace.getSpanContext(r.otelChildCtx!))\n\n        const containsWrite = requests.some((r) => isWrite(r.protocolQuery.action))\n\n        const results = await this.client._engine.requestBatch(queries, {\n          traceparent,\n          transaction: getTransactionOptions(transaction),\n          containsWrite,\n          customDataProxyFetch,\n        })\n\n        return results.map((result, i) => {\n          if (result instanceof Error) {\n            return result\n          }\n\n          try {\n            return this.mapQueryEngineResult(requests[i], result)\n          } catch (error) {\n            return error\n          }\n        })\n      }),\n\n      singleLoader: async (request) => {\n        const interactiveTransaction =\n          request.transaction?.kind === 'itx' ? getItxTransactionOptions(request.transaction) : undefined\n\n        const response = await this.client._engine.request(request.protocolQuery, {\n          traceparent: this.client._tracingHelper.getTraceParent(),\n          interactiveTransaction,\n          isWrite: isWrite(request.protocolQuery.action),\n          customDataProxyFetch: request.customDataProxyFetch,\n        })\n        return this.mapQueryEngineResult(request, response)\n      },\n\n      batchBy: (request) => {\n        if (request.transaction?.id) {\n          return `transaction-${request.transaction.id}`\n        }\n\n        return getBatchId(request.protocolQuery)\n      },\n\n      batchOrder(requestA, requestB) {\n        if (requestA.transaction?.kind === 'batch' && requestB.transaction?.kind === 'batch') {\n          return requestA.transaction.index - requestB.transaction.index\n        }\n        return 0\n      },\n    })\n  }\n\n  async request(params: RequestParams) {\n    try {\n      return await this.dataloader.request(params)\n    } catch (error) {\n      const { clientMethod, callsite, transaction, args, modelName } = params\n      this.handleAndLogRequestError({\n        error,\n        clientMethod,\n        callsite,\n        transaction,\n        args,\n        modelName,\n        globalOmit: params.globalOmit,\n      })\n    }\n  }\n\n  mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>) {\n    const data = response?.data\n\n    /**\n     * Unpack\n     */\n    const result = this.unpack(data, dataPath, unpacker)\n    if (process.env.PRISMA_CLIENT_GET_TIME) {\n      return { data: result }\n    }\n    return result\n  }\n\n  /**\n   * Handles the error and logs it, logging the error is done synchronously waiting for the event\n   * handlers to finish.\n   */\n  handleAndLogRequestError(params: HandleErrorParams): never {\n    try {\n      this.handleRequestError(params)\n    } catch (err) {\n      if (this.logEmitter) {\n        this.logEmitter.emit('error', { message: err.message, target: params.clientMethod, timestamp: new Date() })\n      }\n      throw err\n    }\n  }\n\n  handleRequestError({\n    error,\n    clientMethod,\n    callsite,\n    transaction,\n    args,\n    modelName,\n    globalOmit,\n  }: HandleErrorParams): never {\n    debug(error)\n\n    if (isMismatchingBatchIndex(error, transaction)) {\n      // if this is batch error and current request was not it's cause, we don't add\n      // context information to the error: this wasn't a request that caused batch to fail\n      throw error\n    }\n\n    if (error instanceof PrismaClientKnownRequestError && isValidationError(error)) {\n      const validationError = convertValidationError(error.meta as EngineValidationError)\n      throwValidationException({\n        args,\n        errors: [validationError],\n        callsite,\n        errorFormat: this.client._errorFormat,\n        originalMethod: clientMethod,\n        clientVersion: this.client._clientVersion,\n        globalOmit,\n      })\n    }\n\n    let message = error.message\n    if (callsite) {\n      message = createErrorMessageWithContext({\n        callsite,\n        originalMethod: clientMethod,\n        isPanic: error.isPanic,\n        showColors: this.client._errorFormat === 'pretty',\n        message,\n      })\n    }\n\n    message = this.sanitizeMessage(message)\n    // TODO: Do request with callsite instead, so we don't need to rethrow\n    if (error.code) {\n      const meta = modelName ? { modelName, ...error.meta } : error.meta\n      throw new PrismaClientKnownRequestError(message, {\n        code: error.code,\n        clientVersion: this.client._clientVersion,\n        meta,\n        batchRequestIdx: error.batchRequestIdx,\n      })\n    } else if (error.isPanic) {\n      throw new PrismaClientRustPanicError(message, this.client._clientVersion)\n    } else if (error instanceof PrismaClientUnknownRequestError) {\n      throw new PrismaClientUnknownRequestError(message, {\n        clientVersion: this.client._clientVersion,\n        batchRequestIdx: error.batchRequestIdx,\n      })\n    } else if (error instanceof PrismaClientInitializationError) {\n      throw new PrismaClientInitializationError(message, this.client._clientVersion)\n    } else if (error instanceof PrismaClientRustPanicError) {\n      throw new PrismaClientRustPanicError(message, this.client._clientVersion)\n    }\n\n    error.clientVersion = this.client._clientVersion\n\n    throw error\n  }\n\n  sanitizeMessage(message) {\n    if (this.client._errorFormat && this.client._errorFormat !== 'pretty') {\n      return stripAnsi(message)\n    }\n    return message\n  }\n\n  unpack(data: unknown, dataPath: string[], unpacker?: Unpacker) {\n    if (!data) {\n      return data\n    }\n    if (data['data']) {\n      data = data['data']\n    }\n\n    if (!data) {\n      return data\n    }\n    const operation = Object.keys(data)[0]\n    const response = Object.values(data)[0]\n    const pathForGet = dataPath.filter((key) => key !== 'select' && key !== 'include')\n    const extractedResponse = deepGet(response, pathForGet)\n    const deserializedResponse =\n      operation === 'queryRaw'\n        ? deserializeRawResult(extractedResponse as RawResponse)\n        : (deserializeJsonResponse(extractedResponse) as unknown)\n\n    return unpacker ? unpacker(deserializedResponse) : deserializedResponse\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'RequestHandler'\n  }\n}\n\nfunction getTransactionOptions<PayloadType>(\n  transaction?: PrismaPromiseTransaction<PayloadType>,\n): TransactionOptions<PayloadType> | undefined {\n  if (!transaction) {\n    return undefined\n  }\n\n  if (transaction.kind === 'batch') {\n    return {\n      kind: 'batch',\n      options: {\n        isolationLevel: transaction.isolationLevel,\n      },\n    }\n  }\n\n  if (transaction.kind === 'itx') {\n    return {\n      kind: 'itx',\n      options: getItxTransactionOptions(transaction),\n    }\n  }\n\n  assertNever(transaction, 'Unknown transaction kind')\n}\n\nfunction getItxTransactionOptions<PayloadType>(\n  transaction: PrismaPromiseInteractiveTransaction<PayloadType>,\n): InteractiveTransactionOptions<PayloadType> {\n  return {\n    id: transaction.id,\n    payload: transaction.payload,\n  }\n}\n\nfunction isMismatchingBatchIndex(error: any, transaction: PrismaPromiseTransaction | undefined) {\n  return hasBatchIndex(error) && transaction?.kind === 'batch' && error.batchRequestIdx !== transaction.index\n}\n\nfunction isValidationError(error: PrismaClientKnownRequestError) {\n  return (\n    error.code === 'P2009' || // validation error\n    error.code === 'P2012' // required argument missing\n  )\n}\n\n/**\n * Engine validation errors include extra segment for selectionPath - root query field.\n * This function removes it (since it does not exist on js arguments). In case of `Union`\n * error type, removes heading element from selectionPath of nested errors as well.\n * @param error\n * @returns\n */\nfunction convertValidationError(error: EngineValidationError): EngineValidationError {\n  if (error.kind === 'Union') {\n    return {\n      kind: 'Union',\n      errors: error.errors.map(convertValidationError),\n    }\n  }\n\n  if (Array.isArray(error['selectionPath'])) {\n    const [, ...selectionPath] = error['selectionPath']\n\n    return {\n      ...error,\n      selectionPath,\n    } as EngineValidationError\n  }\n\n  return error\n}\n", "export interface ErrorWithBatchIndex {\n  batchRequestIdx?: number\n}\n\nexport function hasBatchIndex(value: object): value is Required<ErrorWithBatchIndex> {\n  return typeof value['batchRequestIdx'] === 'number'\n}\n", "import { JsonQuery } from '../engines'\n\nexport function getBatchId(query: JsonQuery): string | undefined {\n  if (query.action !== 'findUnique' && query.action !== 'findUniqueOrThrow') {\n    return undefined\n  }\n  const parts: string[] = []\n  if (query.modelName) {\n    parts.push(query.modelName)\n  }\n\n  if (query.query.arguments) {\n    parts.push(buildKeysString(query.query.arguments))\n  }\n  parts.push(buildKeysString(query.query.selection))\n\n  return parts.join('')\n}\n\nfunction buildKeysString(obj: object): string {\n  const keysArray = Object.keys(obj)\n    .sort()\n    .map((key) => {\n      const value = obj[key]\n      if (typeof value === 'object' && value !== null) {\n        return `(${key} ${buildKeysString(value)})`\n      }\n      return key\n    })\n\n  return `(${keysArray.join(' ')})`\n}\n", "import { JsonQueryAction } from '../engines'\n\nconst writeMap: Record<JsonQueryAction, boolean> = {\n  aggregate: false,\n  aggregateRaw: false,\n  createMany: true,\n  createManyAndReturn: true,\n  createOne: true,\n  deleteMany: true,\n  deleteOne: true,\n  executeRaw: true,\n  findFirst: false,\n  findFirstOrThrow: false,\n  findMany: false,\n  findRaw: false,\n  findUnique: false,\n  findUniqueOrThrow: false,\n  groupBy: false,\n  queryRaw: false,\n  runCommandRaw: true,\n  updateMany: true,\n  updateManyAndReturn: true,\n  updateOne: true,\n  upsertOne: true,\n}\n\nexport function isWrite(action: JsonQueryAction): boolean {\n  return writeMap[action]\n}\n", "interface Job {\n  resolve: (data: any) => void\n  reject: (data: any) => void\n  request: any\n}\n\nexport type DataLoaderOptions<T> = {\n  singleLoader: (request: T) => Promise<any>\n  batchLoader: (request: T[]) => Promise<any[]>\n  batchBy: (request: T) => string | undefined\n  // Specifies the order in which requests in a batch would\n  // be sorted. See Array.prototype.sort callback\n  batchOrder: (requestA: T, requestB: T) => number\n}\n\nexport class DataLoader<T = unknown> {\n  batches: { [key: string]: Job[] }\n  private tickActive = false\n  constructor(private options: DataLoaderOptions<T>) {\n    this.batches = {}\n  }\n\n  request(request: T): Promise<any> {\n    const hash = this.options.batchBy(request)\n    if (!hash) {\n      return this.options.singleLoader(request)\n    }\n    if (!this.batches[hash]) {\n      this.batches[hash] = []\n\n      // make sure, that we only tick once at a time\n      if (!this.tickActive) {\n        this.tickActive = true\n        process.nextTick(() => {\n          this.dispatchBatches()\n          this.tickActive = false\n        })\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      this.batches[hash].push({\n        request,\n        resolve,\n        reject,\n      })\n    })\n  }\n\n  private dispatchBatches() {\n    for (const key in this.batches) {\n      const batch = this.batches[key]\n      delete this.batches[key]\n\n      // only batch if necessary\n      // this might occur, if there's e.g. only 1 findUnique in the batch\n      if (batch.length === 1) {\n        this.options\n          .singleLoader(batch[0].request)\n          .then((result) => {\n            if (result instanceof Error) {\n              batch[0].reject(result)\n            } else {\n              batch[0].resolve(result)\n            }\n          })\n          .catch((e) => {\n            batch[0].reject(e)\n          })\n      } else {\n        batch.sort((a, b) => this.options.batchOrder(a.request, b.request))\n        this.options\n          .batchLoader(batch.map((j) => j.request))\n          .then((results) => {\n            if (results instanceof Error) {\n              for (let i = 0; i < batch.length; i++) {\n                batch[i].reject(results)\n              }\n            } else {\n              for (let i = 0; i < batch.length; i++) {\n                const value = results[i]\n                if (value instanceof Error) {\n                  batch[i].reject(value)\n                } else {\n                  batch[i].resolve(value)\n                }\n              }\n            }\n          })\n          .catch((e) => {\n            for (let i = 0; i < batch.length; i++) {\n              batch[i].reject(e)\n            }\n          })\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'DataLoader'\n  }\n}\n", "import type { QueryIntrospectionBuiltinType } from '@prisma/generator'\nimport Decimal from 'decimal.js'\n\nexport type RawResponse = {\n  columns: string[]\n  types: QueryIntrospectionBuiltinType[]\n  rows: unknown[][]\n}\n\nfunction deserializeValue(type: QueryIntrospectionBuiltinType, value: unknown): unknown {\n  if (value === null) {\n    return value\n  }\n\n  switch (type) {\n    case 'bigint':\n      return BigInt(value as string)\n\n    case 'bytes': {\n      const { buffer, byteOffset, byteLength } = Buffer.from(value as string, 'base64')\n      return new Uint8Array(buffer, byteOffset, byteLength)\n    }\n\n    case 'decimal':\n      return new Decimal(value as string)\n\n    case 'datetime':\n    case 'date':\n      return new Date(value as string)\n\n    case 'time':\n      return new Date(`1970-01-01T${value}Z`)\n\n    case 'bigint-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('bigint', v))\n    case 'bytes-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('bytes', v))\n    case 'decimal-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('decimal', v))\n    case 'datetime-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('datetime', v))\n    case 'date-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('date', v))\n    case 'time-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('time', v))\n\n    default:\n      return value\n  }\n}\n\ntype DeserializedResponse = Array<Record<string, unknown>>\n\nexport function deserializeRawResult(response: RawResponse): DeserializedResponse {\n  const deserializedResponse: DeserializedResponse = []\n  // Performance optimization. See https://github.com/brianc/node-postgres/issues/3042\n  const prebuiltEmptyObject = createPrebuiltEmptyResultObject(response)\n\n  for (let i = 0; i < response.rows.length; i++) {\n    const row = response.rows[i]\n    const mappedRow = { ...prebuiltEmptyObject } as Record<string, unknown>\n\n    for (let j = 0; j < row.length; j++) {\n      mappedRow[response.columns[j]] = deserializeValue(response.types[j], row[j])\n    }\n\n    deserializedResponse.push(mappedRow)\n  }\n\n  return deserializedResponse\n}\n\nfunction createPrebuiltEmptyResultObject(response: RawResponse): Record<string, null> {\n  const row = {}\n\n  for (let i = 0; i < response.columns.length; i++) {\n    row[response.columns[i]] = null\n  }\n\n  return row\n}\n", "import { version } from '../../../package.json'\n\nexport const clientVersion = version as string\n", "import { GetPrismaClientConfig, RuntimeDataModel, RuntimeModel, uncapitalize } from '@prisma/client-common'\nimport { ClientEngineType, getClientEngineType } from '@prisma/internals'\nimport leven from 'js-levenshtein'\n\nimport { buildArgumentsRenderingTree, renderArgsTree } from '../core/errorRendering/ArgumentsRenderingTree'\nimport { PrismaClientConstructorValidationError } from '../core/errors/PrismaClientConstructorValidationError'\nimport { getPreviewFeatures } from '../core/init/getPreviewFeatures'\nimport type { ErrorFormat, LogLevel, PrismaClientOptions } from '../getPrismaClient'\n\nconst knownProperties = [\n  'datasources',\n  'datasourceUrl',\n  'errorFormat',\n  'adapter',\n  'log',\n  'transactionOptions',\n  'omit',\n  '__internal',\n]\nconst errorFormats: ErrorFormat[] = ['pretty', 'colorless', 'minimal']\nconst logLevels: LogLevel[] = ['info', 'query', 'warn', 'error']\n\ntype OmitValidationError =\n  | { kind: 'UnknownModel'; modelKey: string }\n  | { kind: 'UnknownField'; modelKey: string; fieldName: string }\n  | { kind: 'RelationInOmit'; modelKey: string; fieldName: string }\n  | { kind: 'InvalidFieldValue'; modelKey: string; fieldName: string }\n\n/**\n * Subset of `GetPrismaClientConfig` which is used during validation.\n * Feel free to allow more properties when necessary but don't forget to add\n * them in the mock config in `validatePrismaClientOptions.test.ts`.\n */\ntype ClientConfig = Pick<GetPrismaClientConfig, 'datasourceNames' | 'generator' | 'runtimeDataModel'>\n\nconst validators: {\n  [K in keyof PrismaClientOptions]-?: (\n    option: PrismaClientOptions[K],\n    config: ClientConfig,\n    dataModel: RuntimeDataModel,\n  ) => void\n} = {\n  datasources: (options, { datasourceNames }) => {\n    if (!options) {\n      return\n    }\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"datasources\" provided to PrismaClient constructor`,\n      )\n    }\n\n    for (const [key, value] of Object.entries(options)) {\n      if (!datasourceNames.includes(key)) {\n        const didYouMean =\n          getDidYouMean(key, datasourceNames) || ` Available datasources: ${datasourceNames.join(', ')}`\n        throw new PrismaClientConstructorValidationError(\n          `Unknown datasource ${key} provided to PrismaClient constructor.${didYouMean}`,\n        )\n      }\n      if (typeof value !== 'object' || Array.isArray(value)) {\n        throw new PrismaClientConstructorValidationError(\n          `Invalid value ${JSON.stringify(options)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n        )\n      }\n      if (value && typeof value === 'object') {\n        for (const [key1, value1] of Object.entries(value)) {\n          if (key1 !== 'url') {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(options)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n            )\n          }\n          if (typeof value1 !== 'string') {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(value1)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n            )\n          }\n        }\n      }\n    }\n  },\n  adapter: (adapter, config) => {\n    if (!adapter && getClientEngineType(config.generator) === ClientEngineType.Client) {\n      throw new PrismaClientConstructorValidationError(\n        `Using engine type \"client\" requires a driver adapter to be provided to PrismaClient constructor.`,\n      )\n    }\n\n    if (adapter === null) {\n      return\n    }\n\n    if (adapter === undefined) {\n      throw new PrismaClientConstructorValidationError(\n        `\"adapter\" property must not be undefined, use null to conditionally disable driver adapters.`,\n      )\n    }\n    const previewFeatures = getPreviewFeatures(config)\n    if (!previewFeatures.includes('driverAdapters')) {\n      throw new PrismaClientConstructorValidationError(\n        '\"adapter\" property can only be provided to PrismaClient constructor when \"driverAdapters\" preview feature is enabled.',\n      )\n    }\n\n    if (getClientEngineType(config.generator) === ClientEngineType.Binary) {\n      throw new PrismaClientConstructorValidationError(\n        `Cannot use a driver adapter with the \"binary\" Query Engine. Please use the \"library\" Query Engine.`,\n      )\n    }\n  },\n  datasourceUrl: (options) => {\n    if (typeof options !== 'undefined' && typeof options !== 'string') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"datasourceUrl\" provided to PrismaClient constructor.\nExpected string or undefined.`,\n      )\n    }\n  },\n  errorFormat: (options) => {\n    if (!options) {\n      return\n    }\n    if (typeof options !== 'string') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"errorFormat\" provided to PrismaClient constructor.`,\n      )\n    }\n    if (!errorFormats.includes(options as ErrorFormat)) {\n      const didYouMean = getDidYouMean(options, errorFormats)\n      throw new PrismaClientConstructorValidationError(\n        `Invalid errorFormat ${options} provided to PrismaClient constructor.${didYouMean}`,\n      )\n    }\n  },\n  log: (options) => {\n    if (!options) {\n      return\n    }\n    if (!Array.isArray(options)) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"log\" provided to PrismaClient constructor.`,\n      )\n    }\n\n    function validateLogLevel(level: any) {\n      if (typeof level === 'string') {\n        if (!logLevels.includes(level as LogLevel)) {\n          const didYouMean = getDidYouMean(level, logLevels)\n          throw new PrismaClientConstructorValidationError(\n            `Invalid log level \"${level}\" provided to PrismaClient constructor.${didYouMean}`,\n          )\n        }\n      }\n    }\n\n    for (const option of options) {\n      validateLogLevel(option)\n\n      const logValidators = {\n        level: validateLogLevel,\n        emit: (value) => {\n          const emits = ['stdout', 'event']\n          if (!emits.includes(value)) {\n            const didYouMean = getDidYouMean(value, emits)\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(\n                value,\n              )} for \"emit\" in logLevel provided to PrismaClient constructor.${didYouMean}`,\n            )\n          }\n        },\n      }\n\n      if (option && typeof option === 'object') {\n        for (const [key, value] of Object.entries(option)) {\n          if (logValidators[key]) {\n            logValidators[key](value)\n          } else {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid property ${key} for \"log\" provided to PrismaClient constructor`,\n            )\n          }\n        }\n      }\n    }\n  },\n  transactionOptions: (options: any) => {\n    if (!options) {\n      return\n    }\n\n    const maxWait = options.maxWait\n    if (maxWait != null && maxWait <= 0) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${maxWait} for maxWait in \"transactionOptions\" provided to PrismaClient constructor. maxWait needs to be greater than 0`,\n      )\n    }\n\n    const timeout = options.timeout\n    if (timeout != null && timeout <= 0) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${timeout} for timeout in \"transactionOptions\" provided to PrismaClient constructor. timeout needs to be greater than 0`,\n      )\n    }\n  },\n  omit: (options: unknown, config) => {\n    if (typeof options !== 'object') {\n      throw new PrismaClientConstructorValidationError(`\"omit\" option is expected to be an object.`)\n    }\n    if (options === null) {\n      throw new PrismaClientConstructorValidationError(`\"omit\" option can not be \\`null\\``)\n    }\n\n    const validationErrors: OmitValidationError[] = []\n    for (const [modelKey, modelConfig] of Object.entries(options)) {\n      const modelOrType = getModelOrTypeByKey(modelKey, config.runtimeDataModel)\n      if (!modelOrType) {\n        validationErrors.push({ kind: 'UnknownModel', modelKey: modelKey })\n        continue\n      }\n      for (const [fieldName, value] of Object.entries(modelConfig)) {\n        const field = modelOrType.fields.find((field) => field.name === fieldName)\n        if (!field) {\n          validationErrors.push({ kind: 'UnknownField', modelKey, fieldName })\n          continue\n        }\n        if (field.relationName) {\n          validationErrors.push({ kind: 'RelationInOmit', modelKey, fieldName })\n          continue\n        }\n        if (typeof value !== 'boolean') {\n          validationErrors.push({ kind: 'InvalidFieldValue', modelKey, fieldName })\n        }\n      }\n    }\n    if (validationErrors.length > 0) {\n      throw new PrismaClientConstructorValidationError(\n        renderOmitValidationErrors(options as Record<string, unknown>, validationErrors),\n      )\n    }\n  },\n  __internal: (value) => {\n    if (!value) {\n      return\n    }\n    const knownKeys = ['debug', 'engine', 'configOverride']\n    if (typeof value !== 'object') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(value)} for \"__internal\" to PrismaClient constructor`,\n      )\n    }\n    for (const [key] of Object.entries(value)) {\n      if (!knownKeys.includes(key)) {\n        const didYouMean = getDidYouMean(key, knownKeys)\n        throw new PrismaClientConstructorValidationError(\n          `Invalid property ${JSON.stringify(key)} for \"__internal\" provided to PrismaClient constructor.${didYouMean}`,\n        )\n      }\n    }\n    // TODO: Add more validation here\n    // but as this is an internal, non user-facing api, it's not urgent\n  },\n}\n\nexport function validatePrismaClientOptions(options: PrismaClientOptions, config: ClientConfig) {\n  for (const [key, value] of Object.entries(options)) {\n    if (!knownProperties.includes(key)) {\n      const didYouMean = getDidYouMean(key, knownProperties)\n      throw new PrismaClientConstructorValidationError(\n        `Unknown property ${key} provided to PrismaClient constructor.${didYouMean}`,\n      )\n    }\n    validators[key](value, config)\n  }\n\n  if (options.datasourceUrl && options.datasources) {\n    throw new PrismaClientConstructorValidationError(\n      'Can not use \"datasourceUrl\" and \"datasources\" options at the same time. Pick one of them',\n    )\n  }\n}\n\nfunction getDidYouMean(str: string, options: string[]): string {\n  if (options.length === 0) {\n    return ''\n  }\n\n  if (typeof str !== 'string') {\n    return ''\n  }\n\n  const alternative = getAlternative(str, options)\n  if (!alternative) {\n    return ''\n  }\n\n  return ` Did you mean \"${alternative}\"?`\n}\n\nfunction getAlternative(str: string, options: string[]): null | string {\n  if (options.length === 0) {\n    return null\n  }\n\n  const optionsWithDistances = options.map((value) => ({\n    value,\n    distance: leven(str, value),\n  }))\n\n  optionsWithDistances.sort((a, b) => {\n    return a.distance < b.distance ? -1 : 1\n  })\n\n  const bestAlternative = optionsWithDistances[0]\n  if (bestAlternative.distance < 3) {\n    return bestAlternative.value\n  }\n\n  return null\n}\n\nfunction getModelOrTypeByKey(modelKey: string, runtimeDataModel: RuntimeDataModel): RuntimeModel | undefined {\n  return findByKey(runtimeDataModel.models, modelKey) ?? findByKey(runtimeDataModel.types, modelKey)\n}\n\nfunction findByKey<T>(map: Record<string, T>, key: string): T | undefined {\n  const foundKey = Object.keys(map).find((mapKey) => uncapitalize(mapKey) === key)\n  if (foundKey) {\n    return map[foundKey]\n  }\n  return undefined\n}\n\nfunction renderOmitValidationErrors(\n  omitConfig: Record<PropertyKey, unknown>,\n  validationErrors: OmitValidationError[],\n): string {\n  const argsTree = buildArgumentsRenderingTree(omitConfig)\n  for (const error of validationErrors) {\n    switch (error.kind) {\n      case 'UnknownModel':\n        argsTree.arguments.getField(error.modelKey)?.markAsError()\n        argsTree.addErrorMessage(() => `Unknown model name: ${error.modelKey}.`)\n        break\n      case 'UnknownField':\n        argsTree.arguments.getDeepField([error.modelKey, error.fieldName])?.markAsError()\n        argsTree.addErrorMessage(() => `Model \"${error.modelKey}\" does not have a field named \"${error.fieldName}\".`)\n        break\n      case 'RelationInOmit':\n        argsTree.arguments.getDeepField([error.modelKey, error.fieldName])?.markAsError()\n        argsTree.addErrorMessage(() => `Relations are already excluded by default and can not be specified in \"omit\".`)\n        break\n      case 'InvalidFieldValue':\n        argsTree.arguments.getDeepFieldValue([error.modelKey, error.fieldName])?.markAsError()\n        argsTree.addErrorMessage(() => `Omit field option value must be a boolean.`)\n        break\n    }\n  }\n  const { message, args } = renderArgsTree(argsTree, 'colorless')\n  return `Error validating \"omit\" option:\\n\\n${args}\\n\\n${message}`\n}\n", "import { setClassName } from '@prisma/internals'\n\nexport class PrismaClientConstructorValidationError extends Error {\n  constructor(message: string) {\n    super(message + `\\nRead more at https://pris.ly/d/client-constructor`)\n    this.name = 'PrismaClientConstructorValidationError'\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientConstructorValidationError'\n  }\n}\nsetClassName(PrismaClientConstructorValidationError, 'PrismaClientConstructorValidationError')\n", "import { hasBatchIndex } from '../core/errors/ErrorWithBatchIndex'\n\n/**\n * Waits for result of batch $transaction and picks the best possible error to report if any\n * of the request fails. Best error is determined as follows:\n *\n * - if engine have reported an error without batch request index, then the batch is immediately rejected\n * with this error without waiting for other promises\n * - if engine have reported and index of failed request in the batch and that index matches the position of the\n * particular request in the batch, batch is rejected with that error\n * - if batch request index is reported and it does not match current request position, wait for other requests. If no indices\n * match request positions, reject with the earliest error in the batch\n *\n * @param promises\n * @returns\n */\nexport function waitForBatch<T extends PromiseLike<unknown>[]>(\n  promises: T,\n): Promise<{ [K in keyof T]: Awaited<T[K]> }> {\n  if (promises.length === 0) {\n    return Promise.resolve([] as { [K in keyof T]: Awaited<T[K]> })\n  }\n  return new Promise((resolve, reject) => {\n    const successfulResults = new Array(promises.length) as { [K in keyof T]: Awaited<T[K]> }\n    let bestError: unknown = null\n    let done = false\n    let settledPromisesCount = 0\n\n    const settleOnePromise = () => {\n      if (done) {\n        return\n      }\n      settledPromisesCount++\n      if (settledPromisesCount === promises.length) {\n        done = true\n        if (bestError) {\n          reject(bestError)\n        } else {\n          resolve(successfulResults)\n        }\n      }\n    }\n\n    const immediatelyReject = (error: unknown) => {\n      if (!done) {\n        done = true\n        reject(error)\n      }\n    }\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i].then(\n        (result) => {\n          successfulResults[i] = result\n          settleOnePromise()\n        },\n        (error) => {\n          if (!hasBatchIndex(error)) {\n            immediatelyReject(error)\n            return\n          }\n\n          if (error.batchRequestIdx === i) {\n            immediatelyReject(error)\n          } else {\n            if (!bestError) {\n              bestError = error\n            }\n            settleOnePromise()\n          }\n        },\n      )\n    }\n  })\n}\n", "/**\n * List of properties that won't throw exception on access and return undefined instead\n */\nconst allowList = new Set([\n  'toJSON', // used by JSON.stringify\n  '$$typeof', // used by old React tooling\n  'asymmetricMatch', // used by Jest\n  Symbol.iterator, // used by various JS constructs/methods\n  Symbol.toStringTag, // Used by .toString()\n  Symbol.isConcatSpreadable, // Used by Array#concat,\n  Symbol.toPrimitive, // Used when getting converted to primitive values\n])\n/**\n * Generates more strict variant of an enum which, unlike regular enum,\n * throws on non-existing property access. This can be useful in following situations:\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\n * - enum values are generated dynamically from DMMF.\n *\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\n * will result in `undefined` value being used, which will be accepted. Using strict enum\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\n *\n * Note: if you need to check for existence of a value in the enum you can still use either\n * `in` operator or `hasOwnProperty` function.\n *\n * @param definition\n * @returns\n */\nexport function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T {\n  return new Proxy(definition, {\n    get(target, property) {\n      if (property in target) {\n        return target[property]\n      }\n      if (allowList.has(property)) {\n        return undefined\n      }\n      throw new TypeError(`Invalid enum value: ${String(property)}`)\n    },\n  })\n}\n", "", "\"use strict\";var S=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var B=(e,t)=>{for(var n in t)S(e,n,{get:t[n],enumerable:!0})},U=(e,t,n,o)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let _ of D(t))!R.call(e,_)&&_!==n&&S(e,_,{get:()=>t[_],enumerable:!(o=k(t,_))||o.enumerable});return e};var L=e=>U(S({},\"__esModule\",{value:!0}),e);var Et={};B(Et,{QueryEngine:()=>Q,__wbg_String_8f0eb39a4a4c2f66:()=>H,__wbg_buffer_609cc3eee51ed158:()=>J,__wbg_call_672a4d21634d4a24:()=>K,__wbg_call_7cccdd69e0791ae2:()=>X,__wbg_crypto_805be4ce92f1e370:()=>Y,__wbg_done_769e5ede4b31c67b:()=>Z,__wbg_entries_3265d4158b33e5dc:()=>ee,__wbg_getRandomValues_f6a868620c8bab49:()=>te,__wbg_getTime_46267b1c24877e30:()=>ne,__wbg_get_67b2ba62fc30de12:()=>re,__wbg_get_b9b93047fe3cf45b:()=>oe,__wbg_get_ece95cf6585650d9:()=>_e,__wbg_getwithrefkey_1dc361bd10053bfe:()=>ce,__wbg_has_a5ea9117f258a0ec:()=>ie,__wbg_instanceof_ArrayBuffer_e14585432e3737fc:()=>ue,__wbg_instanceof_Map_f3469ce2244d2430:()=>se,__wbg_instanceof_Promise_935168b8f4b49db3:()=>fe,__wbg_instanceof_Uint8Array_17156bcf118086a9:()=>ae,__wbg_isArray_a1eab7e0d067391b:()=>be,__wbg_isSafeInteger_343e2beeeece1bb0:()=>le,__wbg_iterator_9a24c88df860dc65:()=>ge,__wbg_keys_5c77a08ddc2fb8a6:()=>de,__wbg_length_a446193dc22c12f8:()=>we,__wbg_length_e2d2a49132c1b256:()=>pe,__wbg_msCrypto_2ac4d17c4748234a:()=>xe,__wbg_new0_f788a2397c7ca929:()=>ye,__wbg_new_23a2665fac83c611:()=>me,__wbg_new_405e22f390576ce2:()=>he,__wbg_new_5e0be73521bc8c17:()=>Te,__wbg_new_78feb108b6472713:()=>qe,__wbg_new_a12002a7f91c75be:()=>Se,__wbg_newnoargs_105ed471475aaf50:()=>Ae,__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a:()=>Ie,__wbg_newwithlength_a381634e90c276d4:()=>Ee,__wbg_next_25feadfc0913fea9:()=>Oe,__wbg_next_6574e1a8a62d1055:()=>Fe,__wbg_node_ecc8306b9857f33d:()=>Me,__wbg_now_7fd00a794a07d388:()=>je,__wbg_now_807e54c39636c349:()=>ke,__wbg_now_b3f7572f6ef3d3a9:()=>De,__wbg_process_5cff2739921be718:()=>Re,__wbg_push_737cfc8c1432c2c6:()=>Be,__wbg_queueMicrotask_5a8a9131f3f0b37b:()=>Ue,__wbg_queueMicrotask_6d79674585219521:()=>Le,__wbg_randomFillSync_d3c85af7e31cf1f8:()=>ve,__wbg_require_0c566c6f2eef6c79:()=>Ne,__wbg_resolve_4851785c9c5f573d:()=>$e,__wbg_setTimeout_5d6a1d4fc51ea450:()=>Ce,__wbg_set_37837023f3d740e8:()=>Ve,__wbg_set_3f1d0b984ed272ed:()=>ze,__wbg_set_65595bdd868b3009:()=>We,__wbg_set_8fc6bf8a5b1071d1:()=>Pe,__wbg_set_bb8cecf6a62b9f46:()=>Ge,__wbg_set_wasm:()=>v,__wbg_static_accessor_GLOBAL_88a902d13a557d07:()=>Qe,__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0:()=>He,__wbg_static_accessor_SELF_37c5d418e4bf5819:()=>Je,__wbg_static_accessor_WINDOW_5de37043a91a9c40:()=>Ke,__wbg_subarray_aa9065fa9dc5df96:()=>Xe,__wbg_then_44b73946d2fb3e7d:()=>Ye,__wbg_then_48b406749878a531:()=>Ze,__wbg_valueOf_7392193dd78c6b97:()=>et,__wbg_value_cd1ffa7b1ab794f1:()=>tt,__wbg_versions_a8e5a362e1f16442:()=>nt,__wbindgen_as_number:()=>rt,__wbindgen_bigint_from_i64:()=>ot,__wbindgen_bigint_from_u64:()=>_t,__wbindgen_bigint_get_as_i64:()=>ct,__wbindgen_boolean_get:()=>it,__wbindgen_cb_drop:()=>ut,__wbindgen_closure_wrapper7409:()=>st,__wbindgen_debug_string:()=>ft,__wbindgen_error_new:()=>at,__wbindgen_in:()=>bt,__wbindgen_init_externref_table:()=>lt,__wbindgen_is_bigint:()=>gt,__wbindgen_is_function:()=>dt,__wbindgen_is_object:()=>wt,__wbindgen_is_string:()=>pt,__wbindgen_is_undefined:()=>xt,__wbindgen_jsval_eq:()=>yt,__wbindgen_jsval_loose_eq:()=>mt,__wbindgen_memory:()=>ht,__wbindgen_number_get:()=>Tt,__wbindgen_number_new:()=>qt,__wbindgen_string_get:()=>St,__wbindgen_string_new:()=>At,__wbindgen_throw:()=>It,debug_panic:()=>W,getBuildTimeInfo:()=>z});module.exports=L(Et);var y=()=>{};y.prototype=y;let r;function v(e){r=e}let s=0,m=null;function h(){return(m===null||m.byteLength===0)&&(m=new Uint8Array(r.memory.buffer)),m}const N=typeof TextEncoder>\"u\"?(0,module.require)(\"util\").TextEncoder:TextEncoder;let T=new N(\"utf-8\");const $=typeof T.encodeInto==\"function\"?function(e,t){return T.encodeInto(e,t)}:function(e,t){const n=T.encode(e);return t.set(n),{read:e.length,written:n.length}};function f(e,t,n){if(n===void 0){const u=T.encode(e),a=t(u.length,1)>>>0;return h().subarray(a,a+u.length).set(u),s=u.length,a}let o=e.length,_=t(o,1)>>>0;const i=h();let c=0;for(;c<o;c++){const u=e.charCodeAt(c);if(u>127)break;i[_+c]=u}if(c!==o){c!==0&&(e=e.slice(c)),_=n(_,o,o=c+e.length*3,1)>>>0;const u=h().subarray(_+c,_+o),a=$(e,u);c+=a.written,_=n(_,o,c,1)>>>0}return s=c,_}let w=null;function g(){return(w===null||w.buffer.detached===!0||w.buffer.detached===void 0&&w.buffer!==r.memory.buffer)&&(w=new DataView(r.memory.buffer)),w}function p(e){const t=r.__externref_table_alloc();return r.__wbindgen_export_4.set(t,e),t}function b(e,t){try{return e.apply(this,t)}catch(n){const o=p(n);r.__wbindgen_exn_store(o)}}const C=typeof TextDecoder>\"u\"?(0,module.require)(\"util\").TextDecoder:TextDecoder;let I=new C(\"utf-8\",{ignoreBOM:!0,fatal:!0});I.decode();function q(e,t){return e=e>>>0,I.decode(h().subarray(e,e+t))}function l(e){return e==null}const E=typeof FinalizationRegistry>\"u\"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>{r.__wbindgen_export_5.get(e.dtor)(e.a,e.b)});function V(e,t,n,o){const _={a:e,b:t,cnt:1,dtor:n},i=(...c)=>{_.cnt++;const u=_.a;_.a=0;try{return o(u,_.b,...c)}finally{--_.cnt===0?(r.__wbindgen_export_5.get(_.dtor)(u,_.b),E.unregister(_)):_.a=u}};return i.original=_,E.register(i,_,_),i}function A(e){const t=typeof e;if(t==\"number\"||t==\"boolean\"||e==null)return`${e}`;if(t==\"string\")return`\"${e}\"`;if(t==\"symbol\"){const _=e.description;return _==null?\"Symbol\":`Symbol(${_})`}if(t==\"function\"){const _=e.name;return typeof _==\"string\"&&_.length>0?`Function(${_})`:\"Function\"}if(Array.isArray(e)){const _=e.length;let i=\"[\";_>0&&(i+=A(e[0]));for(let c=1;c<_;c++)i+=\", \"+A(e[c]);return i+=\"]\",i}const n=/\\[object ([^\\]]+)\\]/.exec(toString.call(e));let o;if(n&&n.length>1)o=n[1];else return toString.call(e);if(o==\"Object\")try{return\"Object(\"+JSON.stringify(e)+\")\"}catch{return\"Object\"}return e instanceof Error?`${e.name}: ${e.message}\n${e.stack}`:o}function O(e){const t=r.__wbindgen_export_4.get(e);return r.__externref_table_dealloc(e),t}function z(){return r.getBuildTimeInfo()}function W(e){var t=l(e)?0:f(e,r.__wbindgen_malloc,r.__wbindgen_realloc),n=s;const o=r.debug_panic(t,n);if(o[1])throw O(o[0])}function P(e,t,n){r.closure577_externref_shim(e,t,n)}function G(e,t,n,o){r.closure129_externref_shim(e,t,n,o)}const F=typeof FinalizationRegistry>\"u\"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_queryengine_free(e>>>0,1));class Q{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,F.unregister(this),t}free(){const t=this.__destroy_into_raw();r.__wbg_queryengine_free(t,0)}constructor(t,n,o){const _=r.queryengine_new(t,n,o);if(_[2])throw O(_[1]);return this.__wbg_ptr=_[0]>>>0,F.register(this,this.__wbg_ptr,this),this}connect(t,n){const o=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),_=s,i=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),c=s;return r.queryengine_connect(this.__wbg_ptr,o,_,i,c)}disconnect(t,n){const o=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),_=s,i=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),c=s;return r.queryengine_disconnect(this.__wbg_ptr,o,_,i,c)}query(t,n,o,_){const i=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),c=s,u=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),a=s;var d=l(o)?0:f(o,r.__wbindgen_malloc,r.__wbindgen_realloc),x=s;const M=f(_,r.__wbindgen_malloc,r.__wbindgen_realloc),j=s;return r.queryengine_query(this.__wbg_ptr,i,c,u,a,d,x,M,j)}startTransaction(t,n,o){const _=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),i=s,c=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),u=s,a=f(o,r.__wbindgen_malloc,r.__wbindgen_realloc),d=s;return r.queryengine_startTransaction(this.__wbg_ptr,_,i,c,u,a,d)}commitTransaction(t,n,o){const _=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),i=s,c=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),u=s,a=f(o,r.__wbindgen_malloc,r.__wbindgen_realloc),d=s;return r.queryengine_commitTransaction(this.__wbg_ptr,_,i,c,u,a,d)}rollbackTransaction(t,n,o){const _=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),i=s,c=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),u=s,a=f(o,r.__wbindgen_malloc,r.__wbindgen_realloc),d=s;return r.queryengine_rollbackTransaction(this.__wbg_ptr,_,i,c,u,a,d)}metrics(t){const n=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),o=s;return r.queryengine_metrics(this.__wbg_ptr,n,o)}trace(t){const n=f(t,r.__wbindgen_malloc,r.__wbindgen_realloc),o=s;return r.queryengine_trace(this.__wbg_ptr,n,o)}}function H(e,t){const n=String(t),o=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),_=s;g().setInt32(e+4*1,_,!0),g().setInt32(e+4*0,o,!0)}function J(e){return e.buffer}function K(){return b(function(e,t){return e.call(t)},arguments)}function X(){return b(function(e,t,n){return e.call(t,n)},arguments)}function Y(e){return e.crypto}function Z(e){return e.done}function ee(e){return Object.entries(e)}function te(){return b(function(e,t){e.getRandomValues(t)},arguments)}function ne(e){return e.getTime()}function re(){return b(function(e,t){return Reflect.get(e,t)},arguments)}function oe(e,t){return e[t>>>0]}function _e(){return b(function(e,t){return e[t]},arguments)}function ce(e,t){return e[t]}function ie(){return b(function(e,t){return Reflect.has(e,t)},arguments)}function ue(e){let t;try{t=e instanceof ArrayBuffer}catch{t=!1}return t}function se(e){let t;try{t=e instanceof Map}catch{t=!1}return t}function fe(e){let t;try{t=e instanceof Promise}catch{t=!1}return t}function ae(e){let t;try{t=e instanceof Uint8Array}catch{t=!1}return t}function be(e){return Array.isArray(e)}function le(e){return Number.isSafeInteger(e)}function ge(){return Symbol.iterator}function de(e){return Object.keys(e)}function we(e){return e.length}function pe(e){return e.length}function xe(e){return e.msCrypto}function ye(){return new Date}function me(e,t){try{var n={a:e,b:t},o=(i,c)=>{const u=n.a;n.a=0;try{return G(u,n.b,i,c)}finally{n.a=u}};return new Promise(o)}finally{n.a=n.b=0}}function he(){return new Object}function Te(){return new Map}function qe(){return new Array}function Se(e){return new Uint8Array(e)}function Ae(e,t){return new y(q(e,t))}function Ie(e,t,n){return new Uint8Array(e,t>>>0,n>>>0)}function Ee(e){return new Uint8Array(e>>>0)}function Oe(e){return e.next}function Fe(){return b(function(e){return e.next()},arguments)}function Me(e){return e.node}function je(e){return e.now()}function ke(){return Date.now()}function De(){return b(function(){return Date.now()},arguments)}function Re(e){return e.process}function Be(e,t){return e.push(t)}function Ue(e){return e.queueMicrotask}function Le(e){queueMicrotask(e)}function ve(){return b(function(e,t){e.randomFillSync(t)},arguments)}function Ne(){return b(function(){return module.require},arguments)}function $e(e){return Promise.resolve(e)}function Ce(e,t){return setTimeout(e,t>>>0)}function Ve(e,t,n){e[t>>>0]=n}function ze(e,t,n){e[t]=n}function We(e,t,n){e.set(t,n>>>0)}function Pe(e,t,n){return e.set(t,n)}function Ge(){return b(function(e,t,n){return Reflect.set(e,t,n)},arguments)}function Qe(){const e=typeof global>\"u\"?null:global;return l(e)?0:p(e)}function He(){const e=typeof globalThis>\"u\"?null:globalThis;return l(e)?0:p(e)}function Je(){const e=typeof self>\"u\"?null:self;return l(e)?0:p(e)}function Ke(){const e=typeof window>\"u\"?null:window;return l(e)?0:p(e)}function Xe(e,t,n){return e.subarray(t>>>0,n>>>0)}function Ye(e,t){return e.then(t)}function Ze(e,t,n){return e.then(t,n)}function et(e){return e.valueOf()}function tt(e){return e.value}function nt(e){return e.versions}function rt(e){return+e}function ot(e){return e}function _t(e){return BigInt.asUintN(64,e)}function ct(e,t){const n=t,o=typeof n==\"bigint\"?n:void 0;g().setBigInt64(e+8*1,l(o)?BigInt(0):o,!0),g().setInt32(e+4*0,!l(o),!0)}function it(e){const t=e;return typeof t==\"boolean\"?t?1:0:2}function ut(e){const t=e.original;return t.cnt--==1?(t.a=0,!0):!1}function st(e,t,n){return V(e,t,578,P)}function ft(e,t){const n=A(t),o=f(n,r.__wbindgen_malloc,r.__wbindgen_realloc),_=s;g().setInt32(e+4*1,_,!0),g().setInt32(e+4*0,o,!0)}function at(e,t){return new Error(q(e,t))}function bt(e,t){return e in t}function lt(){const e=r.__wbindgen_export_4,t=e.grow(4);e.set(0,void 0),e.set(t+0,void 0),e.set(t+1,null),e.set(t+2,!0),e.set(t+3,!1)}function gt(e){return typeof e==\"bigint\"}function dt(e){return typeof e==\"function\"}function wt(e){const t=e;return typeof t==\"object\"&&t!==null}function pt(e){return typeof e==\"string\"}function xt(e){return e===void 0}function yt(e,t){return e===t}function mt(e,t){return e==t}function ht(){return r.memory}function Tt(e,t){const n=t,o=typeof n==\"number\"?n:void 0;g().setFloat64(e+8*1,l(o)?0:o,!0),g().setInt32(e+4*0,!l(o),!0)}function qt(e){return e}function St(e,t){const n=t,o=typeof n==\"string\"?n:void 0;var _=l(o)?0:f(o,r.__wbindgen_malloc,r.__wbindgen_realloc),i=s;g().setInt32(e+4*1,i,!0),g().setInt32(e+4*0,_,!0)}function At(e,t){return q(e,t)}function It(e,t){throw new Error(q(e,t))}0&&(module.exports={QueryEngine,__wbg_String_8f0eb39a4a4c2f66,__wbg_buffer_609cc3eee51ed158,__wbg_call_672a4d21634d4a24,__wbg_call_7cccdd69e0791ae2,__wbg_crypto_805be4ce92f1e370,__wbg_done_769e5ede4b31c67b,__wbg_entries_3265d4158b33e5dc,__wbg_getRandomValues_f6a868620c8bab49,__wbg_getTime_46267b1c24877e30,__wbg_get_67b2ba62fc30de12,__wbg_get_b9b93047fe3cf45b,__wbg_get_ece95cf6585650d9,__wbg_getwithrefkey_1dc361bd10053bfe,__wbg_has_a5ea9117f258a0ec,__wbg_instanceof_ArrayBuffer_e14585432e3737fc,__wbg_instanceof_Map_f3469ce2244d2430,__wbg_instanceof_Promise_935168b8f4b49db3,__wbg_instanceof_Uint8Array_17156bcf118086a9,__wbg_isArray_a1eab7e0d067391b,__wbg_isSafeInteger_343e2beeeece1bb0,__wbg_iterator_9a24c88df860dc65,__wbg_keys_5c77a08ddc2fb8a6,__wbg_length_a446193dc22c12f8,__wbg_length_e2d2a49132c1b256,__wbg_msCrypto_2ac4d17c4748234a,__wbg_new0_f788a2397c7ca929,__wbg_new_23a2665fac83c611,__wbg_new_405e22f390576ce2,__wbg_new_5e0be73521bc8c17,__wbg_new_78feb108b6472713,__wbg_new_a12002a7f91c75be,__wbg_newnoargs_105ed471475aaf50,__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a,__wbg_newwithlength_a381634e90c276d4,__wbg_next_25feadfc0913fea9,__wbg_next_6574e1a8a62d1055,__wbg_node_ecc8306b9857f33d,__wbg_now_7fd00a794a07d388,__wbg_now_807e54c39636c349,__wbg_now_b3f7572f6ef3d3a9,__wbg_process_5cff2739921be718,__wbg_push_737cfc8c1432c2c6,__wbg_queueMicrotask_5a8a9131f3f0b37b,__wbg_queueMicrotask_6d79674585219521,__wbg_randomFillSync_d3c85af7e31cf1f8,__wbg_require_0c566c6f2eef6c79,__wbg_resolve_4851785c9c5f573d,__wbg_setTimeout_5d6a1d4fc51ea450,__wbg_set_37837023f3d740e8,__wbg_set_3f1d0b984ed272ed,__wbg_set_65595bdd868b3009,__wbg_set_8fc6bf8a5b1071d1,__wbg_set_bb8cecf6a62b9f46,__wbg_set_wasm,__wbg_static_accessor_GLOBAL_88a902d13a557d07,__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0,__wbg_static_accessor_SELF_37c5d418e4bf5819,__wbg_static_accessor_WINDOW_5de37043a91a9c40,__wbg_subarray_aa9065fa9dc5df96,__wbg_then_44b73946d2fb3e7d,__wbg_then_48b406749878a531,__wbg_valueOf_7392193dd78c6b97,__wbg_value_cd1ffa7b1ab794f1,__wbg_versions_a8e5a362e1f16442,__wbindgen_as_number,__wbindgen_bigint_from_i64,__wbindgen_bigint_from_u64,__wbindgen_bigint_get_as_i64,__wbindgen_boolean_get,__wbindgen_cb_drop,__wbindgen_closure_wrapper7409,__wbindgen_debug_string,__wbindgen_error_new,__wbindgen_in,__wbindgen_init_externref_table,__wbindgen_is_bigint,__wbindgen_is_function,__wbindgen_is_object,__wbindgen_is_string,__wbindgen_is_undefined,__wbindgen_jsval_eq,__wbindgen_jsval_loose_eq,__wbindgen_memory,__wbindgen_number_get,__wbindgen_number_new,__wbindgen_string_get,__wbindgen_string_new,__wbindgen_throw,debug_panic,getBuildTimeInfo});\n", "\n/* !!! This is code generated by Prisma. Do not edit directly. !!!\n/* eslint-disable */\nexport default import('./query_engine_bg.wasm')", "\n/* !!! This is code generated by Prisma. Do not edit directly. !!!\n/* eslint-disable */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n  PrismaClientRustPanicError,\n  PrismaClientInitializationError,\n  PrismaClientValidationError,\n  getPrismaClient,\n  sqltag,\n  empty,\n  join,\n  raw,\n  skip,\n  Decimal,\n  Debug,\n  objectEnumValues,\n  makeStrictEnum,\n  Extensions,\n  warnOnce,\n  defineDmmfProperty,\n  Public,\n  getRuntime,\n  createParam,\n} = require('@prisma/client/runtime/wasm-engine-edge.js')\n\n\nconst Prisma = {}\n\nexports.Prisma = Prisma\nexports.$Enums = {}\n\n/**\n * Prisma Client JS version: 6.15.0\n * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb\n */\nPrisma.prismaVersion = {\n  client: \"6.15.0\",\n  engine: \"85179d7826409ee107a6ba334b5e305ae3fba9fb\"\n}\n\nPrisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;\nPrisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError\nPrisma.PrismaClientRustPanicError = PrismaClientRustPanicError\nPrisma.PrismaClientInitializationError = PrismaClientInitializationError\nPrisma.PrismaClientValidationError = PrismaClientValidationError\nPrisma.Decimal = Decimal\n\n/**\n * Re-export of sql-template-tag\n */\nPrisma.sql = sqltag\nPrisma.empty = empty\nPrisma.join = join\nPrisma.raw = raw\nPrisma.validator = Public.validator\n\n/**\n* Extensions\n*/\nPrisma.getExtensionContext = Extensions.getExtensionContext\nPrisma.defineExtension = Extensions.defineExtension\n\n/**\n * Shorthand utilities for JSON filtering\n */\nPrisma.DbNull = objectEnumValues.instances.DbNull\nPrisma.JsonNull = objectEnumValues.instances.JsonNull\nPrisma.AnyNull = objectEnumValues.instances.AnyNull\n\nPrisma.NullTypes = {\n  DbNull: objectEnumValues.classes.DbNull,\n  JsonNull: objectEnumValues.classes.JsonNull,\n  AnyNull: objectEnumValues.classes.AnyNull\n}\n\n\n\n\n\n/**\n * Enums\n */\nexports.Prisma.TransactionIsolationLevel = makeStrictEnum({\n  Serializable: 'Serializable'\n});\n\nexports.Prisma.UserScalarFieldEnum = {\n  id: 'id',\n  email: 'email',\n  name: 'name',\n  image: 'image',\n  emailVerified: 'emailVerified',\n  credits: 'credits',\n  createdAt: 'createdAt',\n  updatedAt: 'updatedAt'\n};\n\nexports.Prisma.AccountScalarFieldEnum = {\n  id: 'id',\n  userId: 'userId',\n  type: 'type',\n  provider: 'provider',\n  providerAccountId: 'providerAccountId',\n  refresh_token: 'refresh_token',\n  access_token: 'access_token',\n  expires_at: 'expires_at',\n  token_type: 'token_type',\n  scope: 'scope',\n  id_token: 'id_token',\n  session_state: 'session_state'\n};\n\nexports.Prisma.SessionScalarFieldEnum = {\n  id: 'id',\n  sessionToken: 'sessionToken',\n  userId: 'userId',\n  expires: 'expires'\n};\n\nexports.Prisma.CopyJobScalarFieldEnum = {\n  id: 'id',\n  userId: 'userId',\n  sourceFolderId: 'sourceFolderId',\n  sourceFolderName: 'sourceFolderName',\n  destFolderId: 'destFolderId',\n  destFolderName: 'destFolderName',\n  status: 'status',\n  totalItems: 'totalItems',\n  completedItems: 'completedItems',\n  failedItems: 'failedItems',\n  totalBytes: 'totalBytes',\n  copiedBytes: 'copiedBytes',\n  creditsUsed: 'creditsUsed',\n  creditsReserved: 'creditsReserved',\n  errorMessage: 'errorMessage',\n  startedAt: 'startedAt',\n  completedAt: 'completedAt',\n  createdAt: 'createdAt',\n  updatedAt: 'updatedAt'\n};\n\nexports.Prisma.CopyItemScalarFieldEnum = {\n  id: 'id',\n  jobId: 'jobId',\n  sourceId: 'sourceId',\n  sourceName: 'sourceName',\n  sourcePath: 'sourcePath',\n  mimeType: 'mimeType',\n  size: 'size',\n  newId: 'newId',\n  status: 'status',\n  error: 'error',\n  retryCount: 'retryCount',\n  createdAt: 'createdAt',\n  updatedAt: 'updatedAt'\n};\n\nexports.Prisma.CreditPurchaseScalarFieldEnum = {\n  id: 'id',\n  userId: 'userId',\n  credits: 'credits',\n  amount: 'amount',\n  currency: 'currency',\n  stripePaymentIntentId: 'stripePaymentIntentId',\n  stripeSessionId: 'stripeSessionId',\n  status: 'status',\n  createdAt: 'createdAt'\n};\n\nexports.Prisma.SortOrder = {\n  asc: 'asc',\n  desc: 'desc'\n};\n\nexports.Prisma.NullsOrder = {\n  first: 'first',\n  last: 'last'\n};\n\n\nexports.Prisma.ModelName = {\n  User: 'User',\n  Account: 'Account',\n  Session: 'Session',\n  CopyJob: 'CopyJob',\n  CopyItem: 'CopyItem',\n  CreditPurchase: 'CreditPurchase'\n};\n/**\n * Create the Client\n */\nconst config = {\n  \"generator\": {\n    \"name\": \"client\",\n    \"provider\": {\n      \"fromEnvVar\": null,\n      \"value\": \"prisma-client-js\"\n    },\n    \"output\": {\n      \"value\": \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/node_modules/@prisma/client\",\n      \"fromEnvVar\": null\n    },\n    \"config\": {\n      \"engineType\": \"library\"\n    },\n    \"binaryTargets\": [\n      {\n        \"fromEnvVar\": null,\n        \"value\": \"darwin-arm64\",\n        \"native\": true\n      }\n    ],\n    \"previewFeatures\": [\n      \"driverAdapters\"\n    ],\n    \"sourceFilePath\": \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/prisma/schema.prisma\"\n  },\n  \"relativeEnvPaths\": {\n    \"rootEnvPath\": null,\n    \"schemaEnvPath\": \"../../../.env\"\n  },\n  \"relativePath\": \"../../../prisma\",\n  \"clientVersion\": \"6.15.0\",\n  \"engineVersion\": \"85179d7826409ee107a6ba334b5e305ae3fba9fb\",\n  \"datasourceNames\": [\n    \"db\"\n  ],\n  \"activeProvider\": \"sqlite\",\n  \"postinstall\": false,\n  \"inlineDatasources\": {\n    \"db\": {\n      \"url\": {\n        \"fromEnvVar\": \"DATABASE_URL\",\n        \"value\": null\n      }\n    }\n  },\n  \"inlineSchema\": \"// This is your Prisma schema file,\\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\\n\\ngenerator client {\\n  provider        = \\\"prisma-client-js\\\"\\n  previewFeatures = [\\\"driverAdapters\\\"]\\n}\\n\\ndatasource db {\\n  provider = \\\"sqlite\\\"\\n  url      = env(\\\"DATABASE_URL\\\")\\n}\\n\\n// User model for authentication\\nmodel User {\\n  id            String    @id @default(cuid())\\n  email         String    @unique\\n  name          String?\\n  image         String?\\n  emailVerified DateTime?\\n  credits       Int       @default(100) // Free credits on signup (100 GB)\\n\\n  accounts Account[]\\n  sessions Session[]\\n  copyJobs CopyJob[]\\n\\n  createdAt DateTime @default(now())\\n  updatedAt DateTime @updatedAt\\n}\\n\\n// Account model for OAuth providers\\nmodel Account {\\n  id                String  @id @default(cuid())\\n  userId            String\\n  type              String\\n  provider          String\\n  providerAccountId String\\n  refresh_token     String?\\n  access_token      String?\\n  expires_at        Int?\\n  token_type        String?\\n  scope             String?\\n  id_token          String?\\n  session_state     String?\\n\\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\\n\\n  @@unique([provider, providerAccountId])\\n}\\n\\n// Session model for Auth.js\\nmodel Session {\\n  id           String   @id @default(cuid())\\n  sessionToken String   @unique\\n  userId       String\\n  expires      DateTime\\n\\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\\n}\\n\\n// Copy job tracking\\nmodel CopyJob {\\n  id     String @id @default(cuid())\\n  userId String\\n\\n  sourceFolderId   String\\n  sourceFolderName String\\n  destFolderId     String\\n  destFolderName   String\\n\\n  status String @default(\\\"queued\\\") // queued, scanning, copying, completed, failed, cancelled\\n\\n  totalItems     Int?\\n  completedItems Int  @default(0)\\n  failedItems    Int  @default(0)\\n\\n  totalBytes  String? @default(\\\"0\\\") // Using String for BigInt compatibility\\n  copiedBytes String  @default(\\\"0\\\") // Using String for BigInt compatibility\\n\\n  creditsUsed     Int @default(0)\\n  creditsReserved Int @default(0) // Reserved credits at job start\\n\\n  errorMessage String?\\n\\n  startedAt   DateTime?\\n  completedAt DateTime?\\n  createdAt   DateTime  @default(now())\\n  updatedAt   DateTime  @updatedAt\\n\\n  user  User       @relation(fields: [userId], references: [id], onDelete: Cascade)\\n  items CopyItem[]\\n\\n  @@index([userId, status])\\n  @@index([status])\\n}\\n\\n// Individual items in a copy job\\nmodel CopyItem {\\n  id    String @id @default(cuid())\\n  jobId String\\n\\n  sourceId   String\\n  sourceName String\\n  sourcePath String // Full path for display\\n  mimeType   String\\n  size       String? // Using String for BigInt compatibility\\n\\n  newId  String? // ID in destination after copy\\n  status String  @default(\\\"pending\\\") // pending, copying, completed, failed, skipped\\n  error  String?\\n\\n  retryCount Int @default(0)\\n\\n  createdAt DateTime @default(now())\\n  updatedAt DateTime @updatedAt\\n\\n  job CopyJob @relation(fields: [jobId], references: [id], onDelete: Cascade)\\n\\n  @@index([jobId, status])\\n  @@index([jobId])\\n}\\n\\n// Credit purchases for future payments\\nmodel CreditPurchase {\\n  id     String @id @default(cuid())\\n  userId String\\n\\n  credits  Int // Number of credits (GB)\\n  amount   Float // Amount in USD\\n  currency String @default(\\\"usd\\\")\\n\\n  stripePaymentIntentId String?\\n  stripeSessionId       String?\\n\\n  status String // pending, completed, failed\\n\\n  createdAt DateTime @default(now())\\n\\n  @@index([userId])\\n}\\n\",\n  \"inlineSchemaHash\": \"2fe2b104d455d8deced5f825cf58d42b9fbc4b0f7e14b67296f139308a2cdf67\",\n  \"copyEngine\": true\n}\nconfig.dirname = '/'\n\nconfig.runtimeDataModel = JSON.parse(\"{\\\"models\\\":{\\\"User\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"email\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"name\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"image\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"emailVerified\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"credits\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"accounts\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"Account\\\",\\\"relationName\\\":\\\"AccountToUser\\\"},{\\\"name\\\":\\\"sessions\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"Session\\\",\\\"relationName\\\":\\\"SessionToUser\\\"},{\\\"name\\\":\\\"copyJobs\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"CopyJob\\\",\\\"relationName\\\":\\\"CopyJobToUser\\\"},{\\\"name\\\":\\\"createdAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"updatedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"}],\\\"dbName\\\":null},\\\"Account\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"type\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"provider\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"providerAccountId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"refresh_token\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"access_token\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"expires_at\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"token_type\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"scope\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"id_token\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"session_state\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"user\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"User\\\",\\\"relationName\\\":\\\"AccountToUser\\\"}],\\\"dbName\\\":null},\\\"Session\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"sessionToken\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"expires\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"user\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"User\\\",\\\"relationName\\\":\\\"SessionToUser\\\"}],\\\"dbName\\\":null},\\\"CopyJob\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"sourceFolderId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"sourceFolderName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"destFolderId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"destFolderName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"status\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"totalItems\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"completedItems\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"failedItems\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"totalBytes\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"copiedBytes\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"creditsUsed\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"creditsReserved\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"errorMessage\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"startedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"completedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"createdAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"updatedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"user\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"User\\\",\\\"relationName\\\":\\\"CopyJobToUser\\\"},{\\\"name\\\":\\\"items\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"CopyItem\\\",\\\"relationName\\\":\\\"CopyItemToCopyJob\\\"}],\\\"dbName\\\":null},\\\"CopyItem\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"jobId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"sourceId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"sourceName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"sourcePath\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"mimeType\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"size\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"newId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"status\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"error\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"retryCount\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"createdAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"updatedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"},{\\\"name\\\":\\\"job\\\",\\\"kind\\\":\\\"object\\\",\\\"type\\\":\\\"CopyJob\\\",\\\"relationName\\\":\\\"CopyItemToCopyJob\\\"}],\\\"dbName\\\":null},\\\"CreditPurchase\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"credits\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Int\\\"},{\\\"name\\\":\\\"amount\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"Float\\\"},{\\\"name\\\":\\\"currency\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"stripePaymentIntentId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"stripeSessionId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"status\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"createdAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"type\\\":\\\"DateTime\\\"}],\\\"dbName\\\":null}},\\\"enums\\\":{},\\\"types\\\":{}}\")\ndefineDmmfProperty(exports.Prisma, config.runtimeDataModel)\nconfig.engineWasm = {\n  getRuntime: async () => require('./query_engine_bg.js'),\n  getQueryEngineWasmModule: async () => {\n    const loader = (await import('#wasm-engine-loader')).default\n    const engine = (await loader).default\n    return engine\n  }\n}\nconfig.compilerWasm = undefined\n\nconfig.injectableEdgeEnv = () => ({\n  parsed: {\n    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined\n  }\n})\n\nif (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {\n  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)\n}\n\nconst PrismaClient = getPrismaClient(config)\nexports.PrismaClient = PrismaClient\nObject.assign(exports, Prisma)\n\n", "\n/* !!! This is code generated by Prisma. Do not edit directly. !!!\n/* eslint-disable */\nmodule.exports = { ...require('#main-entry-point') }", "module.exports = {\n  ...require('.prisma/client/default'),\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/.wrangler/tmp/bundle-w9DYVP/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/.wrangler/tmp/bundle-w9DYVP/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/.wrangler/tmp/bundle-w9DYVP/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/workers/test-d1.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/imekinox/Proyectos/academiadeia/test_clone_gdrive/gdrive-copier/workers/test-d1.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { getPrismaClient } from '../lib/prisma-edge'\n\nexport interface Env {\n  DB: D1Database\n}\n\nexport default {\n  async fetch(request: Request, env: Env): Promise<Response> {\n    const prisma = getPrismaClient(env.DB)\n    \n    try {\n      // Test database connection\n      const userCount = await prisma.user.count()\n      const jobCount = await prisma.copyJob.count()\n      \n      return new Response(JSON.stringify({\n        success: true,\n        stats: {\n          users: userCount,\n          jobs: jobCount\n        }\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      })\n    } catch (error) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n  }\n}", "import { PrismaClient } from '@prisma/client'\nimport { PrismaD1 } from '@prisma/adapter-d1'\n\nexport function getPrismaClient(d1Database: D1Database) {\n  const adapter = new PrismaD1(d1Database)\n  const prisma = new PrismaClient({ \n    adapter,\n    log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error']\n  })\n  return prisma\n}\n\nexport type EdgePrismaClient = ReturnType<typeof getPrismaClient>", "// package.json\nvar name = \"@prisma/adapter-d1\";\n\n// src/d1-http.ts\nimport {\n  Debug,\n  DriverAdapterError\n} from \"@prisma/driver-adapter-utils\";\n\n// ../../node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/colors.mjs\nvar FORCE_COLOR;\nvar NODE_DISABLE_COLORS;\nvar NO_COLOR;\nvar TERM;\nvar isTTY = true;\nif (typeof process !== \"undefined\") {\n  ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n  isTTY = process.stdout && process.stdout.isTTY;\n}\nvar $ = {\n  enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== \"dumb\" && (FORCE_COLOR != null && FORCE_COLOR !== \"0\" || isTTY)\n};\nfunction init(x, y) {\n  let rgx = new RegExp(`\\\\x1b\\\\[${y}m`, \"g\");\n  let open = `\\x1B[${x}m`, close = `\\x1B[${y}m`;\n  return function(txt) {\n    if (!$.enabled || txt == null) return txt;\n    return open + (!!~(\"\" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n  };\n}\nvar reset = init(0, 0);\nvar bold = init(1, 22);\nvar dim = init(2, 22);\nvar italic = init(3, 23);\nvar underline = init(4, 24);\nvar inverse = init(7, 27);\nvar hidden = init(8, 28);\nvar strikethrough = init(9, 29);\nvar black = init(30, 39);\nvar red = init(31, 39);\nvar green = init(32, 39);\nvar yellow = init(33, 39);\nvar blue = init(34, 39);\nvar magenta = init(35, 39);\nvar cyan = init(36, 39);\nvar white = init(37, 39);\nvar gray = init(90, 39);\nvar grey = init(90, 39);\nvar bgBlack = init(40, 49);\nvar bgRed = init(41, 49);\nvar bgGreen = init(42, 49);\nvar bgYellow = init(43, 49);\nvar bgBlue = init(44, 49);\nvar bgMagenta = init(45, 49);\nvar bgCyan = init(46, 49);\nvar bgWhite = init(47, 49);\n\n// src/d1-http.ts\nimport ky from \"ky\";\n\n// src/constants.ts\nvar MAX_BIND_VALUES = 98;\nvar GENERIC_SQLITE_ERROR = 1;\n\n// src/conversion.ts\nimport { ColumnTypeEnum } from \"@prisma/driver-adapter-utils\";\nfunction getColumnTypes(columnNames, rows) {\n  const columnTypes = [];\n  columnLoop: for (let columnIndex = 0; columnIndex < columnNames.length; columnIndex++) {\n    for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n      const candidateValue = rows[rowIndex][columnIndex];\n      if (candidateValue !== null) {\n        const inferred = inferColumnType(candidateValue);\n        if (columnTypes[columnIndex] === void 0 || inferred === ColumnTypeEnum.Text) {\n          columnTypes[columnIndex] = inferred;\n        }\n        if (inferred !== ColumnTypeEnum.UnknownNumber) {\n          continue columnLoop;\n        }\n      }\n    }\n    if (columnTypes[columnIndex] === void 0) {\n      columnTypes[columnIndex] = ColumnTypeEnum.Int32;\n    }\n  }\n  return columnTypes;\n}\nfunction inferColumnType(value) {\n  switch (typeof value) {\n    case \"string\":\n      return inferStringType(value);\n    case \"number\":\n      return inferNumberType(value);\n    case \"object\":\n      return inferObjectType(value);\n    default:\n      throw new UnexpectedTypeError(value);\n  }\n}\nvar isoDateRegex = new RegExp(\n  /^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))$|^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$|^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/\n);\nvar sqliteDateRegex = /^\\d{4}-[0-1]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d$/;\nfunction isISODate(str) {\n  return isoDateRegex.test(str) || sqliteDateRegex.test(str);\n}\nfunction inferStringType(value) {\n  if (isISODate(value)) {\n    return ColumnTypeEnum.DateTime;\n  }\n  return ColumnTypeEnum.Text;\n}\nfunction inferNumberType(_) {\n  return ColumnTypeEnum.UnknownNumber;\n}\nfunction inferObjectType(value) {\n  if (value instanceof Array) {\n    return ColumnTypeEnum.Bytes;\n  }\n  throw new UnexpectedTypeError(value);\n}\nvar UnexpectedTypeError = class extends Error {\n  name = \"UnexpectedTypeError\";\n  constructor(value) {\n    const type = typeof value;\n    const repr = type === \"object\" ? JSON.stringify(value) : String(value);\n    super(`unexpected value of type ${type}: ${repr}`);\n  }\n};\nfunction mapRow(result, columnTypes) {\n  for (let i = 0; i < result.length; i++) {\n    const value = result[i];\n    if (value instanceof ArrayBuffer) {\n      result[i] = Array.from(new Uint8Array(value));\n      continue;\n    }\n    if (typeof value === \"number\" && (columnTypes[i] === ColumnTypeEnum.Int32 || columnTypes[i] === ColumnTypeEnum.Int64) && !Number.isInteger(value)) {\n      result[i] = Math.trunc(value);\n      continue;\n    }\n    if (typeof value === \"number\" && columnTypes[i] === ColumnTypeEnum.Text) {\n      result[i] = value.toString();\n      continue;\n    }\n    if (typeof value === \"bigint\") {\n      result[i] = value.toString();\n      continue;\n    }\n    if (columnTypes[i] === ColumnTypeEnum.Boolean) {\n      result[i] = JSON.parse(value);\n    }\n  }\n  return result;\n}\nfunction mapArg(arg, argType) {\n  if (arg === null) {\n    return null;\n  }\n  if (typeof arg === \"bigint\" || argType.scalarType === \"bigint\") {\n    const asInt56 = Number.parseInt(`${arg}`);\n    if (!Number.isSafeInteger(asInt56)) {\n      throw new Error(`Invalid Int64-encoded value received: ${arg}`);\n    }\n    return asInt56;\n  }\n  if (typeof arg === \"string\" && argType.scalarType === \"int\") {\n    return Number.parseInt(arg);\n  }\n  if (typeof arg === \"string\" && argType.scalarType === \"float\") {\n    return Number.parseFloat(arg);\n  }\n  if (typeof arg === \"string\" && argType.scalarType === \"decimal\") {\n    return Number.parseFloat(arg);\n  }\n  if (arg === true) {\n    return 1;\n  }\n  if (arg === false) {\n    return 0;\n  }\n  if (typeof arg === \"string\" && argType.scalarType === \"datetime\") {\n    arg = new Date(arg);\n  }\n  if (arg instanceof Date) {\n    return arg.toISOString().replace(\"Z\", \"+00:00\");\n  }\n  if (typeof arg === \"string\" && argType.scalarType === \"bytes\") {\n    return Array.from(Buffer.from(arg, \"base64\"));\n  }\n  if (arg instanceof Uint8Array) {\n    return Array.from(arg);\n  }\n  return arg;\n}\n\n// src/errors.ts\nfunction convertDriverError(error) {\n  if (isDriverError(error)) {\n    return {\n      originalMessage: error.message,\n      ...mapDriverError(error)\n    };\n  }\n  throw error;\n}\nfunction mapDriverError(error) {\n  let stripped = error.message.split(\"D1_ERROR: \").at(1) ?? error.message;\n  stripped = stripped.split(\"SqliteError: \").at(1) ?? stripped;\n  if (stripped.startsWith(\"UNIQUE constraint failed\") || stripped.startsWith(\"PRIMARY KEY constraint failed\")) {\n    const fields = stripped.split(\": \").at(1)?.split(\", \").map((field) => field.split(\".\").pop());\n    return {\n      kind: \"UniqueConstraintViolation\",\n      constraint: fields !== void 0 ? { fields } : void 0\n    };\n  } else if (stripped.startsWith(\"NOT NULL constraint failed\")) {\n    const fields = stripped.split(\": \").at(1)?.split(\", \").map((field) => field.split(\".\").pop());\n    return {\n      kind: \"NullConstraintViolation\",\n      constraint: fields !== void 0 ? { fields } : void 0\n    };\n  } else if (stripped.startsWith(\"FOREIGN KEY constraint failed\") || stripped.startsWith(\"CHECK constraint failed\")) {\n    return {\n      kind: \"ForeignKeyConstraintViolation\",\n      constraint: { foreignKey: {} }\n    };\n  } else if (stripped.startsWith(\"no such table\")) {\n    return {\n      kind: \"TableDoesNotExist\",\n      table: stripped.split(\": \").at(1)\n    };\n  } else if (stripped.startsWith(\"no such column\")) {\n    return {\n      kind: \"ColumnNotFound\",\n      column: stripped.split(\": \").at(1)\n    };\n  } else if (stripped.includes(\"has no column named \")) {\n    return {\n      kind: \"ColumnNotFound\",\n      column: stripped.split(\"has no column named \").at(1)\n    };\n  }\n  return {\n    kind: \"sqlite\",\n    extendedCode: error[\"code\"] ?? error[\"cause\"]?.[\"code\"] ?? 1,\n    message: error.message\n  };\n}\nfunction isDriverError(error) {\n  return typeof error[\"message\"] === \"string\";\n}\n\n// src/d1-http.ts\nvar debug = Debug(\"prisma:driver-adapter:d1-http\");\nfunction onUnsuccessfulD1HTTPResponse({ errors }) {\n  debug(\"D1 HTTP Errors: %O\", errors);\n  const error = errors.at(0) ?? { message: \"Unknown error\", code: GENERIC_SQLITE_ERROR };\n  throw new DriverAdapterError(convertDriverError(error));\n}\nfunction onGenericD1HTTPError(error) {\n  debug(\"HTTP Error: %O\", error);\n  throw new DriverAdapterError(convertDriverError(error));\n}\nfunction onError(error) {\n  console.error(\"Error in performIO: %O\", error);\n  throw new DriverAdapterError(convertDriverError(error));\n}\nasync function performRawQuery(client, options) {\n  try {\n    const response = await client.post(\"raw\", options).json();\n    const tag = \"[js::performRawQuery]\";\n    debug(`${tag} %O`, {\n      success: response.success,\n      errors: response.errors,\n      messages: response.messages,\n      result: response.result\n    });\n    if (!response.success) {\n      onUnsuccessfulD1HTTPResponse(response);\n    }\n    return response.result;\n  } catch (e) {\n    onGenericD1HTTPError(e);\n  }\n}\nfunction isD1HTTPParams(params) {\n  return typeof params === \"object\" && params !== null && \"CLOUDFLARE_D1_TOKEN\" in params && \"CLOUDFLARE_ACCOUNT_ID\" in params && \"CLOUDFLARE_DATABASE_ID\" in params;\n}\nvar D1HTTPQueryable = class {\n  constructor(client) {\n    this.client = client;\n  }\n  provider = \"sqlite\";\n  adapterName = `${name}-http`;\n  /**\n   * Execute a query given as SQL, interpolating the given parameters.\n   */\n  async queryRaw(query) {\n    const tag = \"[js::query_raw]\";\n    debug(`${tag} %O`, query);\n    const data = await this.performIO(query);\n    const convertedData = this.convertData(data);\n    return convertedData;\n  }\n  convertData({ columnNames, rows: results }) {\n    if (results.length === 0) {\n      return {\n        columnNames: [],\n        columnTypes: [],\n        rows: []\n      };\n    }\n    const columnTypes = getColumnTypes(columnNames, results);\n    const rows = results.map((value) => mapRow(value, columnTypes));\n    return {\n      columnNames,\n      columnTypes,\n      rows\n    };\n  }\n  /**\n   * Execute a query given as SQL, interpolating the given parameters and\n   * returning the number of affected rows.\n   * Note: Queryable expects a u64, but napi.rs only supports u32.\n   */\n  async executeRaw(query) {\n    const tag = \"[js::execute_raw]\";\n    debug(`${tag} %O`, query);\n    const result = await this.performIO(query);\n    return result.affectedRows ?? 0;\n  }\n  async performIO(query) {\n    try {\n      const body = {\n        json: {\n          sql: query.sql,\n          params: query.args.map((arg, i) => mapArg(arg, query.argTypes[i]))\n        }\n      };\n      const tag = \"[js::perform_io]\";\n      debug(`${tag} %O`, body);\n      const results = await performRawQuery(this.client, body);\n      if (results.length !== 1) {\n        throw new Error(\"Expected exactly one result\");\n      }\n      const result = results[0];\n      const { columns: columnNames = [], rows = [] } = result.results ?? {};\n      const affectedRows = result.meta?.changes;\n      return { rows, columnNames, affectedRows };\n    } catch (e) {\n      onError(e);\n    }\n  }\n};\nvar D1HTTPTransaction = class extends D1HTTPQueryable {\n  constructor(client, options) {\n    super(client);\n    this.options = options;\n  }\n  async commit() {\n    debug(`[js::commit]`);\n  }\n  async rollback() {\n    debug(`[js::rollback]`);\n  }\n};\nvar PrismaD1HTTPAdapter = class extends D1HTTPQueryable {\n  constructor(params, release) {\n    const D1_API_BASE_URL = `https://api.cloudflare.com/client/v4/accounts/${params.CLOUDFLARE_ACCOUNT_ID}/d1/database/${params.CLOUDFLARE_DATABASE_ID}`;\n    const client = ky.create({\n      prefixUrl: D1_API_BASE_URL,\n      headers: {\n        Authorization: `Bearer ${params.CLOUDFLARE_D1_TOKEN}`\n      },\n      // Don't automatically throw on non-2xx status codes\n      throwHttpErrors: false\n    });\n    super(client);\n    this.release = release;\n  }\n  tags = {\n    error: red(\"prisma:error\"),\n    warn: yellow(\"prisma:warn\"),\n    info: cyan(\"prisma:info\"),\n    query: blue(\"prisma:query\")\n  };\n  alreadyWarned = /* @__PURE__ */ new Set();\n  /**\n   * This will warn once per transaction\n   * e.g. the following two explicit transactions\n   * will only trigger _two_ warnings\n   *\n   * ```ts\n   * await prisma.$transaction([ ...queries ])\n   * await prisma.$transaction([ ...moreQueries ])\n   * ```\n   */\n  warnOnce = (key, message, ...args) => {\n    if (!this.alreadyWarned.has(key)) {\n      this.alreadyWarned.add(key);\n      console.info(`${this.tags.warn} ${message}`, ...args);\n    }\n  };\n  async executeScript(script) {\n    try {\n      await performRawQuery(this.client, {\n        json: {\n          sql: script\n        }\n      });\n    } catch (error) {\n      onError(error);\n    }\n  }\n  getConnectionInfo() {\n    return {\n      maxBindValues: MAX_BIND_VALUES,\n      supportsRelationJoins: false\n    };\n  }\n  async startTransaction(isolationLevel) {\n    if (isolationLevel && isolationLevel !== \"SERIALIZABLE\") {\n      throw new DriverAdapterError({\n        kind: \"InvalidIsolationLevel\",\n        level: isolationLevel\n      });\n    }\n    this.warnOnce(\n      \"D1 Transaction\",\n      \"Cloudflare D1 does not support transactions yet. When using Prisma's D1 adapter, implicit & explicit transactions will be ignored and run as individual queries, which breaks the guarantees of the ACID properties of transactions. For more details see https://pris.ly/d/d1-transactions\"\n    );\n    const options = {\n      usePhantomQuery: true\n    };\n    const tag = \"[js::startTransaction]\";\n    debug(\"%s options: %O\", tag, options);\n    return new D1HTTPTransaction(this.client, options);\n  }\n  async dispose() {\n    await this.release?.();\n  }\n};\nvar PrismaD1HTTPAdapterFactory = class {\n  constructor(params) {\n    this.params = params;\n  }\n  provider = \"sqlite\";\n  adapterName = `${name}-http`;\n  async connect() {\n    return new PrismaD1HTTPAdapter(this.params, async () => {\n    });\n  }\n  async connectToShadowDb() {\n    const D1_API_BASE_URL = `https://api.cloudflare.com/client/v4/accounts/${this.params.CLOUDFLARE_ACCOUNT_ID}/d1/database`;\n    const client = ky.create({\n      headers: {\n        Authorization: `Bearer ${this.params.CLOUDFLARE_D1_TOKEN}`\n      },\n      // Don't throw on non-2xx status codes\n      throwHttpErrors: false\n    });\n    const createShadowDatabase = async () => {\n      const tag = \"[js::connectToShadowDb::createShadowDatabase]\";\n      const SHADOW_DATABASE_PREFIX = \"_prisma_shadow_\";\n      const CLOUDFLARE_SHADOW_DATABASE_NAME = `${SHADOW_DATABASE_PREFIX}${globalThis.crypto.randomUUID()}`;\n      debug(`${tag} creating database %s`, CLOUDFLARE_SHADOW_DATABASE_NAME);\n      try {\n        const response = await client.post(D1_API_BASE_URL, {\n          json: {\n            name: CLOUDFLARE_SHADOW_DATABASE_NAME\n          }\n        }).json();\n        debug(`${tag} %O`, response);\n        if (!response.success) {\n          onUnsuccessfulD1HTTPResponse(response);\n        }\n        const { uuid: CLOUDFLARE_SHADOW_DATABASE_ID2 } = response.result;\n        debug(`${tag} created database %s with ID %s`, CLOUDFLARE_SHADOW_DATABASE_NAME, CLOUDFLARE_SHADOW_DATABASE_ID2);\n        return CLOUDFLARE_SHADOW_DATABASE_ID2;\n      } catch (e) {\n        onGenericD1HTTPError(e);\n      }\n    };\n    const CLOUDFLARE_SHADOW_DATABASE_ID = this.params.CLOUDFLARE_SHADOW_DATABASE_ID ?? await createShadowDatabase();\n    const dispose = async () => {\n      const tag = \"[js::connectToShadowDb::dispose]\";\n      try {\n        debug(`${tag} deleting database %s`, CLOUDFLARE_SHADOW_DATABASE_ID);\n        const response = await client.delete(`${D1_API_BASE_URL}/${CLOUDFLARE_SHADOW_DATABASE_ID}`).json();\n        debug(`${tag} %O`, response);\n        if (!response.success) {\n          onUnsuccessfulD1HTTPResponse(response);\n        }\n      } catch (e) {\n        onGenericD1HTTPError(e);\n      }\n    };\n    return new PrismaD1HTTPAdapter(this.params, dispose);\n  }\n};\n\n// src/d1-worker.ts\nimport {\n  Debug as Debug2,\n  DriverAdapterError as DriverAdapterError2\n} from \"@prisma/driver-adapter-utils\";\nvar debug2 = Debug2(\"prisma:driver-adapter:d1\");\nvar D1WorkerQueryable = class {\n  constructor(client) {\n    this.client = client;\n  }\n  provider = \"sqlite\";\n  adapterName = name;\n  /**\n   * Execute a query given as SQL, interpolating the given parameters.\n   */\n  async queryRaw(query) {\n    const tag = \"[js::query_raw]\";\n    debug2(`${tag} %O`, query);\n    const data = await this.performIO(query);\n    const convertedData = this.convertData(data);\n    return convertedData;\n  }\n  convertData(ioResult) {\n    const columnNames = ioResult[0];\n    const results = ioResult[1];\n    if (results.length === 0) {\n      return {\n        columnNames: [],\n        columnTypes: [],\n        rows: []\n      };\n    }\n    const columnTypes = Object.values(getColumnTypes(columnNames, results));\n    const rows = results.map((value) => mapRow(value, columnTypes));\n    return {\n      columnNames,\n      // * Note: without Object.values the array looks like\n      // * columnTypes: [ id: 128 ],\n      // * and errors with:\n      // * \u2718 [ERROR] A hanging Promise was canceled. This happens when the worker runtime is waiting for a Promise from JavaScript to resolve, but has detected that the Promise cannot possibly ever resolve because all code and events related to the Promise's I/O context have already finished.\n      columnTypes,\n      rows\n    };\n  }\n  /**\n   * Execute a query given as SQL, interpolating the given parameters and\n   * returning the number of affected rows.\n   * Note: Queryable expects a u64, but napi.rs only supports u32.\n   */\n  async executeRaw(query) {\n    const tag = \"[js::execute_raw]\";\n    debug2(`${tag} %O`, query);\n    const result = await this.performIO(query, true);\n    return result.meta.changes ?? 0;\n  }\n  async performIO(query, executeRaw = false) {\n    try {\n      const args = query.args.map((arg, i) => mapArg(arg, query.argTypes[i]));\n      const stmt = this.client.prepare(query.sql).bind(...args);\n      if (executeRaw) {\n        return await stmt.run();\n      } else {\n        const [columnNames, ...rows] = await stmt.raw({ columnNames: true });\n        return [columnNames, rows];\n      }\n    } catch (e) {\n      onError2(e);\n    }\n  }\n};\nvar D1WorkerTransaction = class extends D1WorkerQueryable {\n  constructor(client, options) {\n    super(client);\n    this.options = options;\n  }\n  async commit() {\n    debug2(`[js::commit]`);\n  }\n  async rollback() {\n    debug2(`[js::rollback]`);\n  }\n};\nvar PrismaD1WorkerAdapter = class extends D1WorkerQueryable {\n  constructor(client, release) {\n    super(client);\n    this.release = release;\n  }\n  tags = {\n    error: red(\"prisma:error\"),\n    warn: yellow(\"prisma:warn\"),\n    info: cyan(\"prisma:info\"),\n    query: blue(\"prisma:query\")\n  };\n  alreadyWarned = /* @__PURE__ */ new Set();\n  /**\n   * This will warn once per transaction\n   * e.g. the following two explicit transactions\n   * will only trigger _two_ warnings\n   *\n   * ```ts\n   * await prisma.$transaction([ ...queries ])\n   * await prisma.$transaction([ ...moreQueries ])\n   * ```\n   */\n  warnOnce = (key, message, ...args) => {\n    if (!this.alreadyWarned.has(key)) {\n      this.alreadyWarned.add(key);\n      console.info(`${this.tags.warn} ${message}`, ...args);\n    }\n  };\n  async executeScript(script) {\n    try {\n      await this.client.exec(script);\n    } catch (error) {\n      onError2(error);\n    }\n  }\n  getConnectionInfo() {\n    return {\n      maxBindValues: MAX_BIND_VALUES,\n      supportsRelationJoins: false\n    };\n  }\n  async startTransaction(isolationLevel) {\n    if (isolationLevel && isolationLevel !== \"SERIALIZABLE\") {\n      throw new DriverAdapterError2({\n        kind: \"InvalidIsolationLevel\",\n        level: isolationLevel\n      });\n    }\n    this.warnOnce(\n      \"D1 Transaction\",\n      \"Cloudflare D1 does not support transactions yet. When using Prisma's D1 adapter, implicit & explicit transactions will be ignored and run as individual queries, which breaks the guarantees of the ACID properties of transactions. For more details see https://pris.ly/d/d1-transactions\"\n    );\n    const options = {\n      usePhantomQuery: true\n    };\n    const tag = \"[js::startTransaction]\";\n    debug2(\"%s options: %O\", tag, options);\n    return new D1WorkerTransaction(this.client, options);\n  }\n  async dispose() {\n    await this.release?.();\n  }\n};\nvar PrismaD1WorkerAdapterFactory = class {\n  constructor(client) {\n    this.client = client;\n  }\n  provider = \"sqlite\";\n  adapterName = name;\n  async connect() {\n    return new PrismaD1WorkerAdapter(this.client, async () => {\n    });\n  }\n};\nfunction onError2(error) {\n  console.error(\"Error in performIO: %O\", error);\n  throw new DriverAdapterError2(convertDriverError(error));\n}\n\n// src/d1.ts\nvar PrismaD1 = class {\n  provider = \"sqlite\";\n  adapterName = name;\n  connect;\n  connectToShadowDb;\n  constructor(params) {\n    if (isD1HTTPParams(params)) {\n      const factory = new PrismaD1HTTPAdapterFactory(params);\n      const self = this;\n      self.connect = factory.connect.bind(factory);\n      self.connectToShadowDb = factory.connectToShadowDb.bind(factory);\n    } else {\n      const factory = new PrismaD1WorkerAdapterFactory(params);\n      const self = this;\n      self.connect = factory.connect.bind(factory);\n    }\n  }\n};\nexport {\n  PrismaD1,\n  PrismaD1HTTPAdapterFactory as PrismaD1HTTP\n};\n", "// src/debug.ts\nimport { Debug } from \"@prisma/debug\";\n\n// src/error.ts\nvar DriverAdapterError = class extends Error {\n  name = \"DriverAdapterError\";\n  cause;\n  constructor(payload) {\n    super(typeof payload[\"message\"] === \"string\" ? payload[\"message\"] : payload.kind);\n    this.cause = payload;\n  }\n};\nfunction isDriverAdapterError(error) {\n  return error[\"name\"] === \"DriverAdapterError\" && typeof error[\"cause\"] === \"object\";\n}\n\n// src/result.ts\nfunction ok(value) {\n  return {\n    ok: true,\n    value,\n    map(fn) {\n      return ok(fn(value));\n    },\n    flatMap(fn) {\n      return fn(value);\n    }\n  };\n}\nfunction err(error) {\n  return {\n    ok: false,\n    error,\n    map() {\n      return err(error);\n    },\n    flatMap() {\n      return err(error);\n    }\n  };\n}\n\n// src/binder.ts\nvar debug = Debug(\"driver-adapter-utils\");\nvar ErrorRegistryInternal = class {\n  registeredErrors = [];\n  consumeError(id) {\n    return this.registeredErrors[id];\n  }\n  registerNewError(error) {\n    let i = 0;\n    while (this.registeredErrors[i] !== void 0) {\n      i++;\n    }\n    this.registeredErrors[i] = { error };\n    return i;\n  }\n};\nvar bindMigrationAwareSqlAdapterFactory = (adapterFactory) => {\n  const errorRegistry = new ErrorRegistryInternal();\n  const boundFactory = {\n    adapterName: adapterFactory.adapterName,\n    provider: adapterFactory.provider,\n    errorRegistry,\n    connect: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapterFactory.connect.bind(adapterFactory))(...args);\n      return ctx.map((ctx2) => bindAdapter(ctx2, errorRegistry));\n    },\n    connectToShadowDb: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapterFactory.connectToShadowDb.bind(adapterFactory))(...args);\n      return ctx.map((ctx2) => bindAdapter(ctx2, errorRegistry));\n    }\n  };\n  return boundFactory;\n};\nvar bindSqlAdapterFactory = (adapterFactory) => {\n  const errorRegistry = new ErrorRegistryInternal();\n  const boundFactory = {\n    adapterName: adapterFactory.adapterName,\n    provider: adapterFactory.provider,\n    errorRegistry,\n    connect: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapterFactory.connect.bind(adapterFactory))(...args);\n      return ctx.map((ctx2) => bindAdapter(ctx2, errorRegistry));\n    }\n  };\n  return boundFactory;\n};\nvar bindAdapter = (adapter, errorRegistry = new ErrorRegistryInternal()) => {\n  const boundAdapter = {\n    adapterName: adapter.adapterName,\n    errorRegistry,\n    queryRaw: wrapAsync(errorRegistry, adapter.queryRaw.bind(adapter)),\n    executeRaw: wrapAsync(errorRegistry, adapter.executeRaw.bind(adapter)),\n    executeScript: wrapAsync(errorRegistry, adapter.executeScript.bind(adapter)),\n    dispose: wrapAsync(errorRegistry, adapter.dispose.bind(adapter)),\n    provider: adapter.provider,\n    startTransaction: async (...args) => {\n      const ctx = await wrapAsync(errorRegistry, adapter.startTransaction.bind(adapter))(...args);\n      return ctx.map((ctx2) => bindTransaction(errorRegistry, ctx2));\n    }\n  };\n  if (adapter.getConnectionInfo) {\n    boundAdapter.getConnectionInfo = wrapSync(errorRegistry, adapter.getConnectionInfo.bind(adapter));\n  }\n  return boundAdapter;\n};\nvar bindTransaction = (errorRegistry, transaction) => {\n  return {\n    adapterName: transaction.adapterName,\n    provider: transaction.provider,\n    options: transaction.options,\n    queryRaw: wrapAsync(errorRegistry, transaction.queryRaw.bind(transaction)),\n    executeRaw: wrapAsync(errorRegistry, transaction.executeRaw.bind(transaction)),\n    commit: wrapAsync(errorRegistry, transaction.commit.bind(transaction)),\n    rollback: wrapAsync(errorRegistry, transaction.rollback.bind(transaction))\n  };\n};\nfunction wrapAsync(registry, fn) {\n  return async (...args) => {\n    try {\n      return ok(await fn(...args));\n    } catch (error) {\n      debug(\"[error@wrapAsync]\", error);\n      if (isDriverAdapterError(error)) {\n        return err(error.cause);\n      }\n      const id = registry.registerNewError(error);\n      return err({ kind: \"GenericJs\", id });\n    }\n  };\n}\nfunction wrapSync(registry, fn) {\n  return (...args) => {\n    try {\n      return ok(fn(...args));\n    } catch (error) {\n      debug(\"[error@wrapSync]\", error);\n      if (isDriverAdapterError(error)) {\n        return err(error.cause);\n      }\n      const id = registry.registerNewError(error);\n      return err({ kind: \"GenericJs\", id });\n    }\n  };\n}\n\n// src/const.ts\nvar ColumnTypeEnum = {\n  // Scalars\n  Int32: 0,\n  Int64: 1,\n  Float: 2,\n  Double: 3,\n  Numeric: 4,\n  Boolean: 5,\n  Character: 6,\n  Text: 7,\n  Date: 8,\n  Time: 9,\n  DateTime: 10,\n  Json: 11,\n  Enum: 12,\n  Bytes: 13,\n  Set: 14,\n  Uuid: 15,\n  // Arrays\n  Int32Array: 64,\n  Int64Array: 65,\n  FloatArray: 66,\n  DoubleArray: 67,\n  NumericArray: 68,\n  BooleanArray: 69,\n  CharacterArray: 70,\n  TextArray: 71,\n  DateArray: 72,\n  TimeArray: 73,\n  DateTimeArray: 74,\n  JsonArray: 75,\n  EnumArray: 76,\n  BytesArray: 77,\n  UuidArray: 78,\n  // Custom\n  UnknownNumber: 128\n};\n\n// src/mock.ts\nvar mockAdapterErrors = {\n  queryRaw: new Error(\"Not implemented: queryRaw\"),\n  executeRaw: new Error(\"Not implemented: executeRaw\"),\n  startTransaction: new Error(\"Not implemented: startTransaction\"),\n  executeScript: new Error(\"Not implemented: executeScript\"),\n  dispose: new Error(\"Not implemented: dispose\")\n};\nfunction mockAdapter(provider) {\n  return {\n    provider,\n    adapterName: \"@prisma/adapter-mock\",\n    queryRaw: () => Promise.reject(mockAdapterErrors.queryRaw),\n    executeRaw: () => Promise.reject(mockAdapterErrors.executeRaw),\n    startTransaction: () => Promise.reject(mockAdapterErrors.startTransaction),\n    executeScript: () => Promise.reject(mockAdapterErrors.executeScript),\n    dispose: () => Promise.reject(mockAdapterErrors.dispose)\n  };\n}\nfunction mockAdapterFactory(provider) {\n  return {\n    provider,\n    adapterName: \"@prisma/adapter-mock\",\n    connect: () => Promise.resolve(mockAdapter(provider))\n  };\n}\nfunction mockMigrationAwareAdapterFactory(provider) {\n  return {\n    provider,\n    adapterName: \"@prisma/adapter-mock\",\n    connect: () => Promise.resolve(mockAdapter(provider)),\n    connectToShadowDb: () => Promise.resolve(mockAdapter(provider))\n  };\n}\nexport {\n  ColumnTypeEnum,\n  Debug,\n  DriverAdapterError,\n  bindAdapter,\n  bindMigrationAwareSqlAdapterFactory,\n  bindSqlAdapterFactory,\n  err,\n  isDriverAdapterError,\n  mockAdapter,\n  mockAdapterErrors,\n  mockAdapterFactory,\n  mockMigrationAwareAdapterFactory,\n  ok\n};\n", "var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// ../../node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/colors.mjs\nvar colors_exports = {};\n__export(colors_exports, {\n  $: () => $,\n  bgBlack: () => bgBlack,\n  bgBlue: () => bgBlue,\n  bgCyan: () => bgCyan,\n  bgGreen: () => bgGreen,\n  bgMagenta: () => bgMagenta,\n  bgRed: () => bgRed,\n  bgWhite: () => bgWhite,\n  bgYellow: () => bgYellow,\n  black: () => black,\n  blue: () => blue,\n  bold: () => bold,\n  cyan: () => cyan,\n  dim: () => dim,\n  gray: () => gray,\n  green: () => green,\n  grey: () => grey,\n  hidden: () => hidden,\n  inverse: () => inverse,\n  italic: () => italic,\n  magenta: () => magenta,\n  red: () => red,\n  reset: () => reset,\n  strikethrough: () => strikethrough,\n  underline: () => underline,\n  white: () => white,\n  yellow: () => yellow\n});\nvar FORCE_COLOR;\nvar NODE_DISABLE_COLORS;\nvar NO_COLOR;\nvar TERM;\nvar isTTY = true;\nif (typeof process !== \"undefined\") {\n  ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n  isTTY = process.stdout && process.stdout.isTTY;\n}\nvar $ = {\n  enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== \"dumb\" && (FORCE_COLOR != null && FORCE_COLOR !== \"0\" || isTTY)\n};\nfunction init(x, y) {\n  let rgx = new RegExp(`\\\\x1b\\\\[${y}m`, \"g\");\n  let open = `\\x1B[${x}m`, close = `\\x1B[${y}m`;\n  return function(txt) {\n    if (!$.enabled || txt == null) return txt;\n    return open + (!!~(\"\" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n  };\n}\nvar reset = init(0, 0);\nvar bold = init(1, 22);\nvar dim = init(2, 22);\nvar italic = init(3, 23);\nvar underline = init(4, 24);\nvar inverse = init(7, 27);\nvar hidden = init(8, 28);\nvar strikethrough = init(9, 29);\nvar black = init(30, 39);\nvar red = init(31, 39);\nvar green = init(32, 39);\nvar yellow = init(33, 39);\nvar blue = init(34, 39);\nvar magenta = init(35, 39);\nvar cyan = init(36, 39);\nvar white = init(37, 39);\nvar gray = init(90, 39);\nvar grey = init(90, 39);\nvar bgBlack = init(40, 49);\nvar bgRed = init(41, 49);\nvar bgGreen = init(42, 49);\nvar bgYellow = init(43, 49);\nvar bgBlue = init(44, 49);\nvar bgMagenta = init(45, 49);\nvar bgCyan = init(46, 49);\nvar bgWhite = init(47, 49);\n\n// src/index.ts\nvar MAX_ARGS_HISTORY = 100;\nvar COLORS = [\"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\", \"red\"];\nvar argsHistory = [];\nvar lastTimestamp = Date.now();\nvar lastColor = 0;\nvar processEnv = typeof process !== \"undefined\" ? process.env : {};\nglobalThis.DEBUG ??= processEnv.DEBUG ?? \"\";\nglobalThis.DEBUG_COLORS ??= processEnv.DEBUG_COLORS ? processEnv.DEBUG_COLORS === \"true\" : true;\nvar topProps = {\n  enable(namespace) {\n    if (typeof namespace === \"string\") {\n      globalThis.DEBUG = namespace;\n    }\n  },\n  disable() {\n    const prev = globalThis.DEBUG;\n    globalThis.DEBUG = \"\";\n    return prev;\n  },\n  // this is the core logic to check if logging should happen or not\n  enabled(namespace) {\n    const listenedNamespaces = globalThis.DEBUG.split(\",\").map((s) => {\n      return s.replace(/[.+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    });\n    const isListened = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === \"\" || listenedNamespace[0] === \"-\") return false;\n      return namespace.match(RegExp(listenedNamespace.split(\"*\").join(\".*\") + \"$\"));\n    });\n    const isExcluded = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === \"\" || listenedNamespace[0] !== \"-\") return false;\n      return namespace.match(RegExp(listenedNamespace.slice(1).split(\"*\").join(\".*\") + \"$\"));\n    });\n    return isListened && !isExcluded;\n  },\n  log: (...args) => {\n    const [namespace, format, ...rest] = args;\n    const logWithFormatting = console.warn ?? console.log;\n    logWithFormatting(`${namespace} ${format}`, ...rest);\n  },\n  formatters: {}\n  // not implemented\n};\nfunction debugCreate(namespace) {\n  const instanceProps = {\n    color: COLORS[lastColor++ % COLORS.length],\n    enabled: topProps.enabled(namespace),\n    namespace,\n    log: topProps.log,\n    extend: () => {\n    }\n    // not implemented\n  };\n  const debugCall = (...args) => {\n    const { enabled, namespace: namespace2, color, log } = instanceProps;\n    if (args.length !== 0) {\n      argsHistory.push([namespace2, ...args]);\n    }\n    if (argsHistory.length > MAX_ARGS_HISTORY) {\n      argsHistory.shift();\n    }\n    if (topProps.enabled(namespace2) || enabled) {\n      const stringArgs = args.map((arg) => {\n        if (typeof arg === \"string\") {\n          return arg;\n        }\n        return safeStringify(arg);\n      });\n      const ms = `+${Date.now() - lastTimestamp}ms`;\n      lastTimestamp = Date.now();\n      if (globalThis.DEBUG_COLORS) {\n        log(colors_exports[color](bold(namespace2)), ...stringArgs, colors_exports[color](ms));\n      } else {\n        log(namespace2, ...stringArgs, ms);\n      }\n    }\n  };\n  return new Proxy(debugCall, {\n    get: (_, prop) => instanceProps[prop],\n    set: (_, prop, value) => instanceProps[prop] = value\n  });\n}\nvar Debug = new Proxy(debugCreate, {\n  get: (_, prop) => topProps[prop],\n  set: (_, prop, value) => topProps[prop] = value\n});\nfunction safeStringify(value, indent = 2) {\n  const cache = /* @__PURE__ */ new Set();\n  return JSON.stringify(\n    value,\n    (key, value2) => {\n      if (typeof value2 === \"object\" && value2 !== null) {\n        if (cache.has(value2)) {\n          return `[Circular *]`;\n        }\n        cache.add(value2);\n      } else if (typeof value2 === \"bigint\") {\n        return value2.toString();\n      }\n      return value2;\n    },\n    indent\n  );\n}\nfunction getLogs(numChars = 7500) {\n  const logs = argsHistory.map(([namespace, ...args]) => {\n    return `${namespace} ${args.map((arg) => {\n      if (typeof arg === \"string\") {\n        return arg;\n      } else {\n        return JSON.stringify(arg);\n      }\n    }).join(\" \")}`;\n  }).join(\"\\n\");\n  if (logs.length < numChars) {\n    return logs;\n  }\n  return logs.slice(-numChars);\n}\nfunction clearLogs() {\n  argsHistory.length = 0;\n}\nvar index_default = Debug;\nexport {\n  Debug,\n  clearLogs,\n  index_default as default,\n  getLogs\n};\n", "/*! MIT License © Sindre Sorhus */\n\nimport {Ky} from './core/Ky.js';\nimport {requestMethods, stop} from './core/constants.js';\nimport type {KyInstance} from './types/ky.js';\nimport type {Input, Options} from './types/options.js';\nimport {validateAndMerge} from './utils/merge.js';\nimport {type Mutable} from './utils/types.js';\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options> | ((parentDefaults: Partial<Options>) => Partial<Options>)) => {\n\t\tif (typeof newDefaults === 'function') {\n\t\t\tnewDefaults = newDefaults(defaults ?? {});\n\t\t}\n\n\t\treturn createInstance(validateAndMerge(defaults, newDefaults));\n\t};\n\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport type {KyInstance} from './types/ky.js';\n\nexport type {\n\tInput,\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n} from './types/options.js';\n\nexport type {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tBeforeRetryState,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n} from './types/hooks.js';\n\nexport type {ResponsePromise} from './types/ResponsePromise.js';\nexport type {KyRequest} from './types/request.js';\nexport type {KyResponse} from './types/response.js';\nexport {HTTPError} from './errors/HTTPError.js';\nexport {TimeoutError} from './errors/TimeoutError.js';\n", "import {HTTPError} from '../errors/HTTPError.js';\nimport {TimeoutError} from '../errors/TimeoutError.js';\nimport type {\n\tInput,\n\tInternalOptions,\n\tNormalizedOptions,\n\tOptions,\n\tSearchParamsInit,\n} from '../types/options.js';\nimport {type ResponsePromise} from '../types/ResponsePromise.js';\nimport {mergeHeaders, mergeHooks} from '../utils/merge.js';\nimport {normalizeRequestMethod, normalizeRetryOptions} from '../utils/normalize.js';\nimport timeout, {type TimeoutOptions} from '../utils/timeout.js';\nimport delay from '../utils/delay.js';\nimport {type ObjectEntries} from '../utils/types.js';\nimport {findUnknownOptions} from '../utils/options.js';\nimport {\n\tmaxSafeTimeout,\n\tresponseTypes,\n\tstop,\n\tsupportsAbortController,\n\tsupportsFormData,\n\tsupportsResponseStreams,\n\tsupportsRequestStreams,\n} from './constants.js';\n\nexport class Ky {\n\tstatic create(input: Input, options: Options): ResponsePromise {\n\t\tconst ky = new Ky(input, options);\n\n\t\tconst function_ = async (): Promise<Response> => {\n\t\t\tif (typeof ky._options.timeout === 'number' && ky._options.timeout > maxSafeTimeout) {\n\t\t\t\tthrow new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n\t\t\t}\n\n\t\t\t// Delay the fetch so that body method shortcuts can set the Accept header\n\t\t\tawait Promise.resolve();\n\t\t\tlet response = await ky._fetch();\n\n\t\t\tfor (const hook of ky._options.hooks.afterResponse) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst modifiedResponse = await hook(\n\t\t\t\t\tky.request,\n\t\t\t\t\tky._options as NormalizedOptions,\n\t\t\t\t\tky._decorateResponse(response.clone()),\n\t\t\t\t);\n\n\t\t\t\tif (modifiedResponse instanceof globalThis.Response) {\n\t\t\t\t\tresponse = modifiedResponse;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tky._decorateResponse(response);\n\n\t\t\tif (!response.ok && ky._options.throwHttpErrors) {\n\t\t\t\tlet error = new HTTPError(response, ky.request, ky._options as NormalizedOptions);\n\n\t\t\t\tfor (const hook of ky._options.hooks.beforeError) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\terror = await hook(error);\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// If `onDownloadProgress` is passed, it uses the stream API internally\n\t\t\t/* istanbul ignore next */\n\t\t\tif (ky._options.onDownloadProgress) {\n\t\t\t\tif (typeof ky._options.onDownloadProgress !== 'function') {\n\t\t\t\t\tthrow new TypeError('The `onDownloadProgress` option must be a function');\n\t\t\t\t}\n\n\t\t\t\tif (!supportsResponseStreams) {\n\t\t\t\t\tthrow new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\t\t\t\t}\n\n\t\t\t\treturn ky._stream(response.clone(), ky._options.onDownloadProgress);\n\t\t\t}\n\n\t\t\treturn response;\n\t\t};\n\n\t\tconst isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n\t\tconst result = (isRetriableMethod ? ky._retry(function_) : function_()) as ResponsePromise;\n\n\t\tfor (const [type, mimeType] of Object.entries(responseTypes) as ObjectEntries<typeof responseTypes>) {\n\t\t\tresult[type] = async () => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\t\tky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n\n\t\t\t\tconst response = await result;\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tif (response.status === 204) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tconst arrayBuffer = await response.clone().arrayBuffer();\n\t\t\t\t\tconst responseSize = arrayBuffer.byteLength;\n\t\t\t\t\tif (responseSize === 0) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.parseJson) {\n\t\t\t\t\t\treturn options.parseJson(await response.text());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response[type]();\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic request: Request;\n\tprotected abortController?: AbortController;\n\tprotected _retryCount = 0;\n\tprotected _input: Input;\n\tprotected _options: InternalOptions;\n\n\t// eslint-disable-next-line complexity\n\tconstructor(input: Input, options: Options = {}) {\n\t\tthis._input = input;\n\n\t\tthis._options = {\n\t\t\t...options,\n\t\t\theaders: mergeHeaders((this._input as Request).headers, options.headers),\n\t\t\thooks: mergeHooks(\n\t\t\t\t{\n\t\t\t\t\tbeforeRequest: [],\n\t\t\t\t\tbeforeRetry: [],\n\t\t\t\t\tbeforeError: [],\n\t\t\t\t\tafterResponse: [],\n\t\t\t\t},\n\t\t\t\toptions.hooks,\n\t\t\t),\n\t\t\tmethod: normalizeRequestMethod(options.method ?? (this._input as Request).method ?? 'GET'),\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\tprefixUrl: String(options.prefixUrl || ''),\n\t\t\tretry: normalizeRetryOptions(options.retry),\n\t\t\tthrowHttpErrors: options.throwHttpErrors !== false,\n\t\t\ttimeout: options.timeout ?? 10_000,\n\t\t\tfetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n\t\t};\n\n\t\tif (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n\t\t\tthrow new TypeError('`input` must be a string, URL, or Request');\n\t\t}\n\n\t\tif (this._options.prefixUrl && typeof this._input === 'string') {\n\t\t\tif (this._input.startsWith('/')) {\n\t\t\t\tthrow new Error('`input` must not begin with a slash when using `prefixUrl`');\n\t\t\t}\n\n\t\t\tif (!this._options.prefixUrl.endsWith('/')) {\n\t\t\t\tthis._options.prefixUrl += '/';\n\t\t\t}\n\n\t\t\tthis._input = this._options.prefixUrl + this._input;\n\t\t}\n\n\t\tif (supportsAbortController) {\n\t\t\tthis.abortController = new globalThis.AbortController();\n\t\t\tconst originalSignal = this._options.signal ?? (this._input as Request).signal;\n\t\t\tif (originalSignal?.aborted) {\n\t\t\t\tthis.abortController.abort(originalSignal?.reason);\n\t\t\t}\n\n\t\t\toriginalSignal?.addEventListener('abort', () => {\n\t\t\t\tthis.abortController!.abort(originalSignal.reason);\n\t\t\t});\n\t\t\tthis._options.signal = this.abortController.signal;\n\t\t}\n\n\t\tif (supportsRequestStreams) {\n\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\tthis._options.duplex = 'half';\n\t\t}\n\n\t\tif (this._options.json !== undefined) {\n\t\t\tthis._options.body = this._options.stringifyJson?.(this._options.json) ?? JSON.stringify(this._options.json);\n\t\t\tthis._options.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n\t\t}\n\n\t\tthis.request = new globalThis.Request(this._input, this._options);\n\n\t\tif (this._options.searchParams) {\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst textSearchParams = typeof this._options.searchParams === 'string'\n\t\t\t\t? this._options.searchParams.replace(/^\\?/, '')\n\t\t\t\t: new URLSearchParams(this._options.searchParams as unknown as SearchParamsInit).toString();\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst searchParams = '?' + textSearchParams;\n\t\t\tconst url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n\n\t\t\t// To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n\t\t\tif (\n\t\t\t\t((supportsFormData && this._options.body instanceof globalThis.FormData)\n\t\t\t\t\t|| this._options.body instanceof URLSearchParams) && !(this._options.headers && (this._options.headers as Record<string, string>)['content-type'])\n\t\t\t) {\n\t\t\t\tthis.request.headers.delete('content-type');\n\t\t\t}\n\n\t\t\t// The spread of `this.request` is required as otherwise it misses the `duplex` option for some reason and throws.\n\t\t\tthis.request = new globalThis.Request(new globalThis.Request(url, {...this.request}), this._options as RequestInit);\n\t\t}\n\t}\n\n\tprotected _calculateRetryDelay(error: unknown) {\n\t\tthis._retryCount++;\n\n\t\tif (this._retryCount > this._options.retry.limit || error instanceof TimeoutError) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (error instanceof HTTPError) {\n\t\t\tif (!this._options.retry.statusCodes.includes(error.response.status)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst retryAfter = error.response.headers.get('Retry-After')\n\t\t\t\t?? error.response.headers.get('RateLimit-Reset')\n\t\t\t\t?? error.response.headers.get('X-RateLimit-Reset') // GitHub\n\t\t\t\t?? error.response.headers.get('X-Rate-Limit-Reset'); // Twitter\n\t\t\tif (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n\t\t\t\tlet after = Number(retryAfter) * 1000;\n\t\t\t\tif (Number.isNaN(after)) {\n\t\t\t\t\tafter = Date.parse(retryAfter) - Date.now();\n\t\t\t\t} else if (after >= Date.parse('2024-01-01')) {\n\t\t\t\t\t// A large number is treated as a timestamp (fixed threshold protects against clock skew)\n\t\t\t\t\tafter -= Date.now();\n\t\t\t\t}\n\n\t\t\t\tconst max = this._options.retry.maxRetryAfter ?? after;\n\t\t\t\treturn after < max ? after : max;\n\t\t\t}\n\n\t\t\tif (error.response.status === 413) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\tconst retryDelay = this._options.retry.delay(this._retryCount);\n\t\treturn Math.min(this._options.retry.backoffLimit, retryDelay);\n\t}\n\n\tprotected _decorateResponse(response: Response): Response {\n\t\tif (this._options.parseJson) {\n\t\t\tresponse.json = async () => this._options.parseJson!(await response.text());\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprotected async _retry<T extends (...arguments_: any) => Promise<any>>(function_: T): Promise<ReturnType<T> | void> {\n\t\ttry {\n\t\t\treturn await function_();\n\t\t} catch (error) {\n\t\t\tconst ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n\t\t\tif (this._retryCount < 1) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tawait delay(ms, {signal: this._options.signal});\n\n\t\t\tfor (const hook of this._options.hooks.beforeRetry) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst hookResult = await hook({\n\t\t\t\t\trequest: this.request,\n\t\t\t\t\toptions: (this._options as unknown) as NormalizedOptions,\n\t\t\t\t\terror: error as Error,\n\t\t\t\t\tretryCount: this._retryCount,\n\t\t\t\t});\n\n\t\t\t\t// If `stop` is returned from the hook, the retry process is stopped\n\t\t\t\tif (hookResult === stop) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this._retry(function_);\n\t\t}\n\t}\n\n\tprotected async _fetch(): Promise<Response> {\n\t\tfor (const hook of this._options.hooks.beforeRequest) {\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tconst result = await hook(this.request, (this._options as unknown) as NormalizedOptions);\n\n\t\t\tif (result instanceof Request) {\n\t\t\t\tthis.request = result;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (result instanceof Response) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tconst nonRequestOptions = findUnknownOptions(this.request, this._options);\n\n\t\t// Cloning is done here to prepare in advance for retries\n\t\tconst mainRequest = this.request;\n\t\tthis.request = mainRequest.clone();\n\n\t\tif (this._options.timeout === false) {\n\t\t\treturn this._options.fetch(mainRequest, nonRequestOptions);\n\t\t}\n\n\t\treturn timeout(mainRequest, nonRequestOptions, this.abortController, this._options as TimeoutOptions);\n\t}\n\n\t/* istanbul ignore next */\n\tprotected _stream(response: Response, onDownloadProgress: Options['onDownloadProgress']) {\n\t\tconst totalBytes = Number(response.headers.get('content-length')) || 0;\n\t\tlet transferredBytes = 0;\n\n\t\tif (response.status === 204) {\n\t\t\tif (onDownloadProgress) {\n\t\t\t\tonDownloadProgress({percent: 1, totalBytes, transferredBytes}, new Uint8Array());\n\t\t\t}\n\n\t\t\treturn new globalThis.Response(\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\theaders: response.headers,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn new globalThis.Response(\n\t\t\tnew globalThis.ReadableStream({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tconst reader = response.body!.getReader();\n\n\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\tonDownloadProgress({percent: 0, transferredBytes: 0, totalBytes}, new Uint8Array());\n\t\t\t\t\t}\n\n\t\t\t\t\tasync function read() {\n\t\t\t\t\t\tconst {done, value} = await reader.read();\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\ttransferredBytes += value.byteLength;\n\t\t\t\t\t\t\tconst percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n\t\t\t\t\t\t\tonDownloadProgress({percent, transferredBytes, totalBytes}, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\tawait read();\n\t\t\t\t\t}\n\n\t\t\t\t\tawait read();\n\t\t\t\t},\n\t\t\t}),\n\t\t\t{\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: response.headers,\n\t\t\t},\n\t\t);\n\t}\n}\n", "import type {NormalizedOptions} from '../types/options.js';\nimport type {KyRequest} from '../types/request.js';\nimport type {KyResponse} from '../types/response.js';\n\nexport class HTTPError<T = unknown> extends Error {\n\tpublic response: KyResponse<T>;\n\tpublic request: KyRequest;\n\tpublic options: NormalizedOptions;\n\n\tconstructor(response: Response, request: Request, options: NormalizedOptions) {\n\t\tconst code = (response.status || response.status === 0) ? response.status : '';\n\t\tconst title = response.statusText || '';\n\t\tconst status = `${code} ${title}`.trim();\n\t\tconst reason = status ? `status code ${status}` : 'an unknown error';\n\n\t\tsuper(`Request failed with ${reason}: ${request.method} ${request.url}`);\n\n\t\tthis.name = 'HTTPError';\n\t\tthis.response = response;\n\t\tthis.request = request;\n\t\tthis.options = options;\n\t}\n}\n", "import type {KyRequest} from '../types/request.js';\n\nexport class TimeoutError extends Error {\n\tpublic request: KyRequest;\n\n\tconstructor(request: Request) {\n\t\tsuper(`Request timed out: ${request.method} ${request.url}`);\n\t\tthis.name = 'TimeoutError';\n\t\tthis.request = request;\n\t}\n}\n", "import type {KyHeadersInit, Options} from '../types/options.js';\nimport type {Hooks} from '../types/hooks.js';\nimport {isObject} from './is.js';\n\nexport const validateAndMerge = (...sources: Array<Partial<Options> | undefined>): Partial<Options> => {\n\tfor (const source of sources) {\n\t\tif ((!isObject(source) || Array.isArray(source)) && source !== undefined) {\n\t\t\tthrow new TypeError('The `options` argument must be an object');\n\t\t}\n\t}\n\n\treturn deepMerge({}, ...sources);\n};\n\nexport const mergeHeaders = (source1: KyHeadersInit = {}, source2: KyHeadersInit = {}) => {\n\tconst result = new globalThis.Headers(source1 as RequestInit['headers']);\n\tconst isHeadersInstance = source2 instanceof globalThis.Headers;\n\tconst source = new globalThis.Headers(source2 as RequestInit['headers']);\n\n\tfor (const [key, value] of source.entries()) {\n\t\tif ((isHeadersInstance && value === 'undefined') || value === undefined) {\n\t\t\tresult.delete(key);\n\t\t} else {\n\t\t\tresult.set(key, value);\n\t\t}\n\t}\n\n\treturn result;\n};\n\nfunction newHookValue<K extends keyof Hooks>(original: Hooks, incoming: Hooks, property: K): Required<Hooks>[K] {\n\treturn (Object.hasOwn(incoming, property) && incoming[property] === undefined)\n\t\t? []\n\t\t: deepMerge<Required<Hooks>[K]>(original[property] ?? [], incoming[property] ?? []);\n}\n\nexport const mergeHooks = (original: Hooks = {}, incoming: Hooks = {}): Required<Hooks> => (\n\t{\n\t\tbeforeRequest: newHookValue(original, incoming, 'beforeRequest'),\n\t\tbeforeRetry: newHookValue(original, incoming, 'beforeRetry'),\n\t\tafterResponse: newHookValue(original, incoming, 'afterResponse'),\n\t\tbeforeError: newHookValue(original, incoming, 'beforeError'),\n\t}\n);\n\n// TODO: Make this strongly-typed (no `any`).\nexport const deepMerge = <T>(...sources: Array<Partial<T> | undefined>): T => {\n\tlet returnValue: any = {};\n\tlet headers = {};\n\tlet hooks = {};\n\n\tfor (const source of sources) {\n\t\tif (Array.isArray(source)) {\n\t\t\tif (!Array.isArray(returnValue)) {\n\t\t\t\treturnValue = [];\n\t\t\t}\n\n\t\t\treturnValue = [...returnValue, ...source];\n\t\t} else if (isObject(source)) {\n\t\t\tfor (let [key, value] of Object.entries(source)) {\n\t\t\t\tif (isObject(value) && key in returnValue) {\n\t\t\t\t\tvalue = deepMerge(returnValue[key], value);\n\t\t\t\t}\n\n\t\t\t\treturnValue = {...returnValue, [key]: value};\n\t\t\t}\n\n\t\t\tif (isObject((source as any).hooks)) {\n\t\t\t\thooks = mergeHooks(hooks, (source as any).hooks);\n\t\t\t\treturnValue.hooks = hooks;\n\t\t\t}\n\n\t\t\tif (isObject((source as any).headers)) {\n\t\t\t\theaders = mergeHeaders(headers, (source as any).headers);\n\t\t\t\treturnValue.headers = headers;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n", "// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (value: unknown): value is object => value !== null && typeof value === 'object';\n", "import {requestMethods} from '../core/constants.js';\nimport type {HttpMethod} from '../types/options.js';\nimport type {RetryOptions} from '../types/retry.js';\n\nexport const normalizeRequestMethod = (input: string): string =>\n\trequestMethods.includes(input as HttpMethod) ? input.toUpperCase() : input;\n\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\n\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\n\nconst retryAfterStatusCodes = [413, 429, 503];\n\nconst defaultRetryOptions: Required<RetryOptions> = {\n\tlimit: 2,\n\tmethods: retryMethods,\n\tstatusCodes: retryStatusCodes,\n\tafterStatusCodes: retryAfterStatusCodes,\n\tmaxRetryAfter: Number.POSITIVE_INFINITY,\n\tbackoffLimit: Number.POSITIVE_INFINITY,\n\tdelay: attemptCount => 0.3 * (2 ** (attemptCount - 1)) * 1000,\n};\n\nexport const normalizeRetryOptions = (retry: number | RetryOptions = {}): Required<RetryOptions> => {\n\tif (typeof retry === 'number') {\n\t\treturn {\n\t\t\t...defaultRetryOptions,\n\t\t\tlimit: retry,\n\t\t};\n\t}\n\n\tif (retry.methods && !Array.isArray(retry.methods)) {\n\t\tthrow new Error('retry.methods must be an array');\n\t}\n\n\tif (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n\t\tthrow new Error('retry.statusCodes must be an array');\n\t}\n\n\treturn {\n\t\t...defaultRetryOptions,\n\t\t...retry,\n\t};\n};\n", "import type {Expect, Equal} from '@type-challenges/utils';\nimport {type HttpMethod, type KyOptionsRegistry} from '../types/options.js';\nimport {type RequestInitRegistry} from '../types/request.js';\n\nexport const supportsRequestStreams = (() => {\n\tlet duplexAccessed = false;\n\tlet hasContentType = false;\n\tconst supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n\tconst supportsRequest = typeof globalThis.Request === 'function';\n\n\tif (supportsReadableStream && supportsRequest) {\n\t\ttry {\n\t\t\thasContentType = new globalThis.Request('https://empty.invalid', {\n\t\t\t\tbody: new globalThis.ReadableStream(),\n\t\t\t\tmethod: 'POST',\n\t\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\t\tget duplex() {\n\t\t\t\t\tduplexAccessed = true;\n\t\t\t\t\treturn 'half';\n\t\t\t\t},\n\t\t\t}).headers.has('Content-Type');\n\t\t} catch (error) {\n\t\t\t// QQBrowser on iOS throws \"unsupported BodyInit type\" error (see issue #581)\n\t\t\tif (error instanceof Error && error.message === 'unsupported BodyInit type') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\treturn duplexAccessed && !hasContentType;\n})();\n\nexport const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsResponseStreams = typeof globalThis.ReadableStream === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\n\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'] as const;\n\nconst validate = <T extends Array<true>>() => undefined as unknown as T;\nvalidate<[\n\tExpect<Equal<typeof requestMethods[number], HttpMethod>>,\n]>();\n\nexport const responseTypes = {\n\tjson: 'application/json',\n\ttext: 'text/*',\n\tformData: 'multipart/form-data',\n\tarrayBuffer: '*/*',\n\tblob: '*/*',\n} as const;\n\n// The maximum value of a 32bit int (see issue #117)\nexport const maxSafeTimeout = 2_147_483_647;\n\nexport const stop = Symbol('stop');\n\nexport const kyOptionKeys: KyOptionsRegistry = {\n\tjson: true,\n\tparseJson: true,\n\tstringifyJson: true,\n\tsearchParams: true,\n\tprefixUrl: true,\n\tretry: true,\n\ttimeout: true,\n\thooks: true,\n\tthrowHttpErrors: true,\n\tonDownloadProgress: true,\n\tfetch: true,\n};\n\nexport const requestOptionsRegistry: RequestInitRegistry = {\n\tmethod: true,\n\theaders: true,\n\tbody: true,\n\tmode: true,\n\tcredentials: true,\n\tcache: true,\n\tredirect: true,\n\treferrer: true,\n\treferrerPolicy: true,\n\tintegrity: true,\n\tkeepalive: true,\n\tsignal: true,\n\twindow: true,\n\tdispatcher: true,\n\tduplex: true,\n\tpriority: true,\n};\n", "import {TimeoutError} from '../errors/TimeoutError.js';\n\nexport type TimeoutOptions = {\n\ttimeout: number;\n\tfetch: typeof fetch;\n};\n\n// `Promise.race()` workaround (#91)\nexport default async function timeout(\n\trequest: Request,\n\tinit: RequestInit,\n\tabortController: AbortController | undefined,\n\toptions: TimeoutOptions,\n): Promise<Response> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tif (abortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError(request));\n\t\t}, options.timeout);\n\n\t\tvoid options\n\t\t\t.fetch(request, init)\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t});\n\t});\n}\n", "// https://github.com/sindresorhus/delay/tree/ab98ae8dfcb38e1593286c94d934e70d14a4e111\n\nimport {type InternalOptions} from '../types/options.js';\n\nexport type DelayOptions = {\n\tsignal?: InternalOptions['signal'];\n};\n\nexport default async function delay(\n\tms: number,\n\t{signal}: DelayOptions,\n): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tif (signal) {\n\t\t\tsignal.throwIfAborted();\n\t\t\tsignal.addEventListener('abort', abortHandler, {once: true});\n\t\t}\n\n\t\tfunction abortHandler() {\n\t\t\tclearTimeout(timeoutId);\n\t\t\treject(signal!.reason as Error);\n\t\t}\n\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tsignal?.removeEventListener('abort', abortHandler);\n\t\t\tresolve();\n\t\t}, ms);\n\t});\n}\n", "import {kyOptionKeys, requestOptionsRegistry} from '../core/constants.js';\n\nexport const findUnknownOptions = (\n\trequest: Request,\n\toptions: Record<string, unknown>,\n): Record<string, unknown> => {\n\tconst unknownOptions: Record<string, unknown> = {};\n\n\tfor (const key in options) {\n\t\tif (!(key in requestOptionsRegistry) && !(key in kyOptionKeys) && !(key in request)) {\n\t\t\tunknownOptions[key] = options[key];\n\t\t}\n\t}\n\n\treturn unknownOptions;\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["stringToBuffer", "value", "encoding", "BufferClass", "encoder", "v", "buffer", "view", "bytes", "byteIndex", "bufferPolyfillDoesNotImplement", "initReadMethods", "prototype", "dataViewMethods", "m", "bufferBaseMethods", "genericReadMethod", "i", "littleEndian", "offset", "assertNumber", "assertInteger", "assertUnsigned", "genericWriteMethod", "boundKey", "bound", "bounds", "assertBounds", "createAlias", "methods", "method", "message", "assertUint8Array", "argName", "maxValue", "MAX_UNSIGNED_32_BIT", "e", "min", "max", "assertString", "$Buffer", "decoder", "Encodings", "Buffer", "c2s", "init_buffer_small", "__esmMin", "_BufferClass", "size", "fill", "arg", "string", "buff1", "buff2", "byteOffset", "byteLength", "list", "totalLength", "concat", "item", "result", "start", "end", "val", "target", "targetStart", "targetEnd", "sourceStart", "sourceEnd", "otherBuffer", "copiedBytes", "offsetEnc", "lengthEnc", "length", "endEnc", "byteOffsetOrEncoding", "lastIndexOf", "toSearch", "_", "j", "s", "prop", "process", "cwd", "init_process", "fn", "args", "performance", "init_perf_hooks", "origin", "init_function", "WeakRef", "init_weakref", "add", "x", "y", "carry", "d", "k", "len", "xd", "yd", "Ctor", "pr", "external", "round", "LOG_BASE", "BASE", "checkInt32", "invalidArgument", "digitsToString", "ws", "indexOfLastWord", "str", "w", "getZeroString", "exp", "sd", "denominator", "guard", "pow", "sum", "t", "wpr", "getBase10Exponent", "exponentOutOfRange", "ONE", "mathpow", "divide", "getLn10", "decimalError", "zs", "ln", "c", "c0", "numerator", "x2", "n", "parseDecimal", "mathfloor", "MAX_E", "rm", "rd", "doRound", "xdi", "subtract", "xe", "xLTy", "toString", "isExp", "truncate", "arr", "clone", "obj", "p", "ps", "Decimal", "isDecimal", "P", "config", "MAX_DIGITS", "defaults", "MAX_SAFE_INTEGER", "decimal_default", "init_decimal", "init_decimal_small", "xdL", "ydL", "dp", "base", "r", "q", "z", "rL", "sign", "yIsInt", "yn", "multiplyInteger", "temp", "compare", "a", "b", "aL", "bL", "cmp", "prod", "prodL", "qd", "rem", "remL", "rem0", "xi", "xL", "yd0", "yL", "yz", "decimal_small_default", "acc", "byte", "existsSync", "lstatSync", "statSync", "readdirSync", "readdir", "cb", "readlinkSync", "realpathSync", "chmodSync", "renameSync", "mkdirSync", "rmdirSync", "rmSync", "unlinkSync", "watchFile", "unwatchFile", "watch", "stat", "path", "callback", "promises", "fs", "fs_default", "init_fs", "resolve", "join", "parse", "basename", "dir", "dirname", "name", "ext", "parts", "normalize", "part", "normalized", "sep", "delimiter", "posix", "path_default", "init_path", "require_package", "__commonJSMin", "exports", "module", "require_indent_string", "count", "options", "regex", "require_ansi_regex", "onlyFirst", "pattern", "require_strip_ansi", "ansiRegex", "require_js_levenshtein", "_min", "d0", "d1", "d2", "bx", "ay", "tmp", "la", "lb", "d3", "dd", "dy", "bx0", "bx1", "bx2", "bx3", "vector", "init_TypeBuilder", "init_KeyType", "EventEmitter", "init_events", "event", "listener", "index_exports", "__export", "src_exports", "Debug", "extensions_exports", "MetricsClient", "PrismaClientInitializationError", "PrismaClientKnownRequestError", "PrismaClientRustPanicError", "PrismaClientUnknownRequestError", "PrismaClientValidationError", "public_exports", "Sql", "createParam", "defineDmmfProperty", "deserializeJsonResponse", "deserializeRawResult", "dmmfToRuntimeDataModel", "empty", "getPrismaClient", "getRuntime", "makeStrictEnum", "makeTypedQueryFactory", "objectEnumValues", "raw", "serializeJsonQuery", "skip", "sql", "warnOnce", "__toCommonJS", "defineExtension", "getExtensionContext", "client", "that", "validator", "_args", "FORCE_COLOR", "NODE_DISABLE_COLORS", "NO_COLOR", "TERM", "isTTY", "$", "init", "rgx", "open", "close", "txt", "reset", "bold", "dim", "italic", "underline", "inverse", "hidden", "strikethrough", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "gray", "grey", "bgBlack", "bgRed", "bgGreen", "bgYellow", "bgBlue", "bgMagenta", "bgCyan", "bgWhite", "MAX_ARGS_HISTORY", "COLORS", "argsHistory", "lastTimestamp", "lastColor", "processEnv", "topProps", "namespace", "prev", "listenedNamespaces", "isListened", "listenedNamespace", "isExcluded", "format", "rest", "debugCreate", "instanceProps", "debugCall", "enabled", "color", "log", "stringArgs", "safeStringify", "ms", "indent", "cache", "key", "clearLogs", "binaryTargets", "packageJson", "version", "getClientEngineType", "generatorConfig", "engineTypeFromEnvVar", "getEngineTypeFromEnvVar", "getDefaultEngineType", "engineType", "isDriverAdapterError", "error", "ok", "err", "debug", "ErrorRegistryInternal", "id", "bindAdapter", "adapter", "errorRegistry", "boundAdapter", "wrapAsync", "ctx", "bindTransaction", "wrapSync", "transaction", "registry", "PRISMA_POSTGRES_PROVIDER", "PRISMA_POSTGRES_PROTOCOL", "isPrismaPostgres", "connectionString", "logger_exports", "info", "query", "should", "tags", "warn", "data", "optionalParams", "assertAlways", "condition", "assertNever", "errorMessage", "hasOwnProperty", "object", "mapObjectValues", "mapper", "maxWithComparator", "items", "comparator", "setClassName", "classObject", "alreadyWarned", "_PrismaClientInitializationError", "clientVersion", "errorCode", "code", "meta", "batchRequestIdx", "Cache", "create", "cached", "uncapitalize", "self", "keyBy", "collection", "lazyProperty", "compute", "resultContainer", "dmmfDataModel", "buildMapForRuntime", "isDate", "isValidDate", "date", "isDecimalJsLike", "ModelAction", "datamodelEnumToSchemaEnum", "datamodelEnum", "import_indent_string", "colorsEnabled", "source", "colorsDisabled", "getRawTemplateParameters", "originalMethod", "isPanic", "callArguments", "stringifyErrorMessage", "functionName", "location", "contextLines", "colors", "lines", "introSuffix", "stringifyLocationInFile", "contextLineParts", "createErrorMessageWithContext", "templateParameters", "import_js_levenshtein", "applyUnionError", "globalOmit", "allErrors", "flattenUnionError", "merged", "mergeInvalidArgumentTypeErrors", "bestError", "getBestScoringError", "applyValidationError", "errorList", "invalidArgsError", "prevError", "uniqueConcat", "head", "tail", "errors", "errorA", "errorB", "aPathLength", "getCombinedPathLength", "bPathLength", "getErrorTypeScore", "score", "ObjectFieldSuggestion", "writer", "Writer", "startingIndent", "context", "separator", "values", "writeItem", "last", "line", "afterNextNewLineCallback", "symbol", "ArrayField", "noop", "inactiveColors", "activeColors", "fieldsSeparator", "FormattedString", "contents", "paddingSize", "Value", "ArrayValue", "index", "output", "ObjectValue", "_ObjectValue", "field", "suggestion", "firstField", "segment", "nextField", "selection", "next", "thisParent", "parent", "nextParent", "select", "include", "fields", "f", "ScalarValue", "text", "SuggestionObjectValue", "applyMutuallyExclusiveFieldsError", "applyIncludeOnScalarError", "applyEmptySelectionError", "applyUnknownSelectionFieldError", "applyInvalidSelectionValueError", "applyUnknownArgumentError", "applyUnknownInputFieldError", "applyRequiredArgumentMissingError", "applyInvalidArgumentTypeError", "applyInvalidArgumentValueError", "applyValueTooLargeError", "applySomeFieldsMissingError", "applyTooManyFieldsGivenError", "argsTree", "selectionPath", "splitPath", "outputType", "msg", "availableOptionsMessage", "subSelection", "omit", "applyEmptySelectionErrorOmit", "applyEmptySelectionErrorSelect", "applyEmptySelectionErrorGlobalOmit", "omitValue", "isEmpty", "addSelectionSuggestions", "suggestedOmitConfig", "omitSuggestion", "parentPath", "fieldName", "fieldValue", "locateResult", "locateSelectionField", "addInclusionSuggestions", "addOmissionSuggestions", "addArgumentsSuggestions", "unknownArgumentMessage", "argParentPath", "argParent", "addInputSuggestions", "getSuggestion", "existingField", "argumentName", "objectSuggestion", "typeName", "getInputTypeName", "dependentArgumentName", "description", "expected", "joinWithPreposition", "type", "printedValue", "argument", "providedArguments", "argumentsParent", "inputType", "preposition", "itemsCopy", "lastItem", "MAX_EDIT_DISTANCE", "minDistance", "option", "editDistance", "levenshtein", "FieldRefImpl", "modelName", "fieldType", "isList", "isEnum", "listPrefix", "enumPrefix", "isFieldRef", "secret", "representations", "ObjectEnumValue", "NullTypesEnumValue", "DbNull", "#_brand_DbNull", "JsonNull", "#_brand_JsonNull", "AnyNull", "#_brand_AnyNull", "ObjectField", "ArgumentsRenderingTree", "renderer", "messageRenderer", "buildArgumentsRenderingTree", "buildInputObject", "inputObject", "buildInputValue", "dateStr", "buildInputArray", "array", "renderArgsTree", "errorFormat", "throwValidationException", "callsite", "renderedArgs", "messageWithContext", "dmmfToJSModelName", "getComputedFields", "previousComputedFields", "extension", "dmmfModelName", "jsName", "resolveDependencies", "getComputedFieldsFromModel", "computedFields", "resolveNeeds", "visitedFields", "fieldDep", "modelResult", "needs", "composeCompute", "nextCompute", "previousCompute", "model", "computeEngineSideSelection", "dependency", "computeEngineSideOmissions", "omission", "MergedExtensionsListNode", "previous", "newCb", "jsModelName", "operation", "prevCbs", "newCbs", "MergedExtensionsList", "_MergedExtensionsList", "ParamImpl", "isParam", "Skip", "param", "isSkip", "jsActionToProtocolAction", "STRICT_UNDEFINED_ERROR_MESSAGE", "action", "runtimeDataModel", "extensions", "clientMethod", "previewFeatures", "SerializeContext", "serializeFieldSelection", "serializeArgumentsObject", "serializeSelectionSet", "createExplicitSelection", "createImplicitSelection", "selectionSet", "addIncludedRelations", "omitFields", "nestedContext", "validateSelectionForUndefined", "localOmit", "combinedOmits", "omitWithComputedFields", "selectWithComputedFields", "serializeArgumentsValue", "jsValue", "serializeArgumentsArray", "isRawParameters", "isJSONConvertible", "itemContext", "valueName", "_SerializeContext", "params", "previewFeature", "checkPreviewFeatureFlag", "dmmfLazy", "runtimeDataModelToBaseDmmf", "internals", "TypedSqlMarker", "TypedSql", "isTypedSql", "import_package", "_Sql", "rawStrings", "rawValues", "valuesLength", "pos", "child", "rawString", "childIndex", "prefix", "suffix", "strings", "addObjectProperties", "addProperty", "factory", "cacheProperties", "baseLayer", "defaultPropertyDescriptor", "defaultProxyHandlers", "ownKeys", "_ownKeys", "customInspect", "createCompositeProxy", "layers", "keysToLayerMap", "mapKeysToLayers", "overwrittenKeys", "proxy", "layer", "targetKeys", "getExistingKeys", "layerKeys", "original", "property", "attributes", "toLog", "keys", "removeProperties", "getBatchRequestPayload", "batch", "prettyPrintArguments", "tree", "TOO_MANY_CONNECTIONS_ERROR", "prismaGraphQLToJSError", "user_facing_error", "activeProvider", "getKnownErrorMessage", "userFacingError", "DisabledCallSite", "getCallSite", "aggregateMap", "desugarUserArgs", "desugarCountInUserArgs", "aggregateArgs", "createUnpacker", "aggregate", "modelAction", "aggregateUnpacker", "row", "groupBy", "applyAggregates", "userArgs", "applyFieldsProxy", "scalarFieldsList", "scalarFields", "dmmfField", "ks", "deepGet", "o", "kp", "deepSet", "getNextDataPath", "fluentPropName", "prevDataPath", "getNextUserArgs", "callArgs", "prevArgs", "nextDataPath", "applyFluent", "prevUserArgs", "dmmfModelFieldMap", "nextUserArgs", "prismaPromise", "getOwnKeys", "modelArgs", "dataArgs", "fluentProps", "aggregateProps", "applyModel", "modelExtensions", "modelActionsLayer", "fieldsPropertyLayer", "dmmfActionName", "paramOverrides", "callSite", "isValidAggregateName", "jsToDMMFModelName", "rawClient", "applyModelsAndClientExtensions", "rootLayer", "modelsLayer", "clientExtensions", "allKeys", "dmmfModelKeys", "jsModelKeys", "unApplyModelsAndClientExtensions", "$extends", "Engine", "newClient", "applyResultExtensions", "computedPropertiesLayers", "maskingLayers", "toMask", "areNeedsMet", "computedPropertyLayer", "neededProperties", "visitQueryResult", "visitor", "visitResult", "visitNested", "includeOrSelect", "parentModelName", "subConfig", "applyAllResultExtensions", "denylist", "itxClientDenyList", "deepCloneArgs", "cloneSql", "cloneTypedSql", "deepCloneValue", "rawParam", "copy", "iterateAndCallQueryCallbacks", "queryCbs", "prevCustomFetch", "__internalParams", "currCustomFetch", "composeCustomDataProxyFetch", "applyQueryExtensions", "cbs", "createApplyBatchExtensionsFunction", "executeBatch", "requests", "callbacks", "iterateAndCallBatchCallbacks", "prevFetch", "request", "nextFetch", "noopFetch", "cachingPlatforms", "checkPlatformCaching", "postinstall", "ciName", "getDatasourceOverrides", "datasourceNames", "isNode", "isBun", "isDeno", "isNetlify", "isEdgeLight", "isWorkerd", "detectRuntime", "check", "runtimesPrettyNames", "runtimeId", "isTaggedValue", "deserializeTaggedValue", "$type", "resolveDatasourceUrl", "inlineDatasources", "overrideDatasources", "env", "resolvedUrl", "datasourceName", "datasourceUrl", "overrideUrl", "getInteractiveTransactionId", "loadedWasmInstance", "wasmLibraryLoader", "engineWasm", "runtime", "wasmModule", "instance", "wbindgen_start", "QueryEngine", "DRIVER_ADAPTER_EXTERNAL_ERROR", "isQueryEvent", "isPanicEvent", "knownBinaryTargets", "MAX_REQUEST_ID", "NEXT_REQUEST_ID", "nextRequestId", "requestId", "LibraryEngine", "libraryLoader", "dsOverrideName", "dsOverrideUrl", "engine", "traceJson", "trace", "headers", "headerStr", "jsonOptions", "response", "isUserFacingError", "externalError", "weakThis", "_e", "startFn", "stopFn", "traceparent", "interactiveTransaction", "queryStr", "queries", "batchResult", "errorRecord", "responseString", "ERROR_MESSAGE", "AccelerateEngine", "_callback", "_forceRun", "_action", "_headers", "_info", "_options", "_query", "_queries", "validateEngineInstanceConfig", "url", "copyEngine", "targetBuildType", "warnings", "pushWarning", "input", "pushError", "isUsingPrismaAccelerate", "isUsingPrismaPostgres", "isUsingDriverAdapters", "isAccelerateUrlScheme", "isAccelerateConfigured", "isUsing", "isNonEmptyArray", "getEngineInstance", "engineConfig", "diagnostics", "warning", "libraryEngineConfigured", "binaryEngineConfigured", "clientEngineConfigured", "clientEngineUsesRemoteExecutor", "getPreviewFeatures", "generator", "rawCommandArgsMapper", "command", "mssqlPreparedStatement", "idx", "serializeRawParameters", "parameters", "serializeRawParametersInternal", "objectSerialization", "parameter", "encodeParameter", "isArrayBufferLike", "preprocessObject", "preprocessValueInObject", "ALTER_RE", "checkAlter", "invalidCall", "rawQueryArgsMapper", "queryString", "templateStringMiddlewareArgsMapper", "requestArgs", "sqlMiddlewareArgsMapper", "createPrismaPromiseFactory", "op", "promise", "callbackTransaction", "valueToPromise", "onFulfilled", "onRejected", "onFinally", "batchTransaction", "thing", "majorVersion", "disabledTracingHelper", "DynamicTracingHelper", "spans", "versionedPrismaInstrumentationGlobal", "fallbackPrismaInstrumentationGlobal", "getTracingHelper", "getLockCountPromise", "knock", "lock", "res", "getLogLevel", "curr", "currentLevel", "import_strip_ansi", "hasBatchIndex", "getBatchId", "buildKeysString", "writeMap", "isWrite", "DataLoader", "hash", "reject", "results", "deserializeValue", "deserializedResponse", "prebuiltEmptyObject", "createPrebuiltEmptyResultObject", "mappedRow", "RequestHandler", "logEmitter", "customDataProxyFetch", "otelParentCtx", "containsWrite", "getTransactionOptions", "getItxTransactionOptions", "requestA", "requestB", "dataPath", "unpacker", "isMismatchingBatchIndex", "isValidationError", "validationError", "convertValidationError", "stripAnsi", "pathForGet", "extractedResponse", "PrismaClientConstructorValidationError", "knownProperties", "errorFormats", "logLevels", "validators", "didYouMean", "getDidYouMean", "key1", "value1", "validateLogLevel", "level", "logValidators", "emits", "maxWait", "timeout", "validationErrors", "modelKey", "modelConfig", "modelOrType", "getModelOrTypeByKey", "renderOmitValidationErrors", "knownKeys", "validatePrismaClientOptions", "alternative", "getAlternative", "optionsWithDistances", "leven", "bestAlternative", "findByKey", "map", "foundKey", "mapKey", "omitConfig", "waitForBatch", "successfulResults", "done", "settledPromisesCount", "settleOnePromise", "immediatelyReject", "noopMiddlewareArgsMapper", "TX_ID", "BatchTxIdCounter", "PrismaClient", "optionsArg", "envPaths", "expectedDriverAdapterProvider", "loadedEnv", "internal", "useDebug", "enginesVersion", "eventType", "middlewareArgsMapper", "argsMapper", "toSql", "typedSql", "isolationLevel", "optionsWithDefaults", "spanOptions", "internalParams", "consumer", "changedMiddlewareParams", "runInTransaction", "changedRequestParams", "requestParams", "feature", "isTemplateStringArray", "allowList", "definition", "$", "PrismaClientKnownRequestError", "PrismaClientUnknownRequestError", "PrismaClientRustPanicError", "PrismaClientInitializationError", "PrismaClientValidationError", "getPrismaClient", "sqltag", "empty", "join", "raw", "skip", "Decimal", "Debug", "objectEnumValues", "makeStrictEnum", "Extensions", "warnOnce", "defineDmmfProperty", "Public", "getRuntime", "createParam", "PrismaClient", "require_default", "__defProp", "__export", "name", "Debug", "Debug", "init", "ky", "ky", "FORCE_COLOR", "NODE_DISABLE_COLORS", "NO_COLOR", "TERM", "isTTY", "$", "init", "reset", "bold", "dim", "italic", "underline", "inverse", "hidden", "strikethrough", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "gray", "grey", "bgBlack", "bgRed", "bgGreen", "bgYellow", "bgBlue", "bgMagenta", "bgCyan", "bgWhite", "debug", "Debug", "debug2", "self", "getPrismaClient", "getPrismaClient", "init"]
}
